{"version":3,"file":"js/PhoneLogin.6a064184.js","mappings":"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","sources":["webpack://flutter_buy_sell/./node_modules/@vue/cli-service/node_modules/vue-loader/dist/templateLoader.js","webpack://flutter_buy_sell/./node_modules/@vue/cli-service/node_modules/vue-loader/dist/index.js","webpack://flutter_buy_sell/./src/views/user/PhoneLogin.vue"],"sourcesContent":["import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, withKeys as _withKeys, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"sm:mt-28 lg:mt-28 mt-28 bg-primary-500 dark:bg-primaryDark-accent h-screen flex flex-col\" }\nconst _hoisted_2 = { class: \"w-96 flex flex-col bg-background dark:bg-backgroundDark m-auto rounded-lg\" }\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", { id: \"recaptcha-container\" }, null, -1)\nconst _hoisted_4 = /*#__PURE__*/_createTextVNode()\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"br\", null, null, -1)\nconst _hoisted_6 = { class: \"flex items-center justify-center mb-4\" }\nconst _hoisted_7 = { class: \"flex flex-auto justify-center mt-4 mb-10\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ps_label_title = _resolveComponent(\"ps-label-title\")!\n  const _component_ps_label = _resolveComponent(\"ps-label\")!\n  const _component_ps_input = _resolveComponent(\"ps-input\")!\n  const _component_ps_label_caption = _resolveComponent(\"ps-label-caption\")!\n  const _component_ps_button = _resolveComponent(\"ps-button\")!\n  const _component_user_phone_login_verification_modal = _resolveComponent(\"user-phone-login-verification-modal\")!\n  const _component_ps_error_dialog = _resolveComponent(\"ps-error-dialog\")!\n\n  return (_openBlock(), _createElementBlock(\"div\", null, [\n    _createElementVNode(\"div\", _hoisted_1, [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createVNode(_component_ps_label_title, { class: \"mt-8 mx-auto text-2xl\" }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.$t(\"phone_login__phone_login\")), 1)\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ps_label, { class: \"mt-4 mx-8\" }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.$t(\"phone_login__user_name\")) + \" : \", 1)\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ps_input, {\n          class: \"mt-2 mx-8\",\n          type: \"text\",\n          placeholder: _ctx.$t('phone_login__user_name'),\n          onKeyup: _withKeys($setup.clicked, [\"enter\"]),\n          onKeypress: $setup.validateName,\n          value: $setup.name,\n          \"onUpdate:value\": _cache[0] || (_cache[0] = ($event: any) => (($setup.name) = $event))\n        }, null, 8, [\"placeholder\", \"onKeyup\", \"onKeypress\", \"value\"]),\n        ($setup.isValidUserName)\n          ? (_openBlock(), _createBlock(_component_ps_label_caption, {\n              key: 0,\n              class: \"mt-2 mx-8\",\n              textColor: \"text-primary-500 dark:text-primaryDark-accent\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t(\"phone_login__user_name_required\")), 1)\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true),\n        _createVNode(_component_ps_label_caption, { class: \"mt-2 mx-8\" }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.$t(\"phone_login__user_name_format\")), 1)\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ps_label, { class: \"mt-4 mx-8\" }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.$t(\"phone_login__phone_number\")) + \" : \", 1)\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ps_input, {\n          class: \"mt-2 mx-8\",\n          type: \"text\",\n          placeholder: _ctx.$t('phone_login__phone_number_placeholder'),\n          onKeyup: _withKeys($setup.clicked, [\"enter\"]),\n          onKeypress: $setup.validatePhone,\n          value: $setup.phone,\n          \"onUpdate:value\": _cache[1] || (_cache[1] = ($event: any) => (($setup.phone) = $event))\n        }, null, 8, [\"placeholder\", \"onKeyup\", \"onKeypress\", \"value\"]),\n        ($setup.isValidPhone)\n          ? (_openBlock(), _createBlock(_component_ps_label_caption, {\n              key: 1,\n              class: \"mt-2 mx-8\",\n              textColor: \"text-primary-500 dark:text-primaryDark-accent\"\n            }, {\n              default: _withCtx(() => [\n                _createTextVNode(_toDisplayString(_ctx.$t(\"phone_login__phone_required\")), 1)\n              ]),\n              _: 1\n            }))\n          : _createCommentVNode(\"\", true),\n        _hoisted_3,\n        _hoisted_4,\n        _hoisted_5,\n        _createElementVNode(\"div\", _hoisted_6, [\n          ($setup.userProvider.loading.value)\n            ? (_openBlock(), _createBlock(_component_ps_button, {\n                key: 0,\n                class: \"mt-6 mx-8\",\n                disabled: true\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t(\"phone_login__loading\")), 1)\n                ]),\n                _: 1\n              }))\n            : (_openBlock(), _createBlock(_component_ps_button, {\n                key: 1,\n                class: \"mt-6 mx-8\",\n                onClick: $setup.clicked,\n                disabled: false\n              }, {\n                default: _withCtx(() => [\n                  _createTextVNode(_toDisplayString(_ctx.$t(\"phone_login__login\")), 1)\n                ]),\n                _: 1\n              }, 8, [\"onClick\"]))\n        ]),\n        _createElementVNode(\"div\", _hoisted_7, [\n          _createVNode(_component_ps_label_caption, {\n            class: \"cursor-pointer\",\n            onClick: $setup.loginClicked\n          }, {\n            default: _withCtx(() => [\n              _createTextVNode(_toDisplayString(_ctx.$t(\"phone_login__back_to_login\")), 1)\n            ]),\n            _: 1\n          }, 8, [\"onClick\"])\n        ])\n      ])\n    ]),\n    _createVNode(_component_user_phone_login_verification_modal, { ref: \"user_phone_login_verification_modal\" }, null, 512),\n    _createVNode(_component_ps_error_dialog, { ref: \"ps_error_dialog\" }, null, 512)\n  ]))\n}","\n//Vue\nimport { ref } from 'vue';\nimport firebaseApp from 'firebase/app';\nimport \"firebase/auth\";\nimport { onMounted } from 'vue';\nimport { useRoute } from 'vue-router';\nimport router from '@/router';\n\n// Components\nimport PsLabel from '@/components/core/label/PsLabel.vue';\nimport PsLabelTitle from '@/components/core/label/PsLabelTitle.vue';\nimport PsLabelCaption from '@/components/core/label/PsLabelCaption.vue';\nimport PsButton from '@/components/core/buttons/PsButton.vue';\nimport PsInput from '@/components/core/input/PsInput.vue';\nimport UserPhoneLoginVerificationModal from '@/components/modules/user/UserPhoneLoginVerificationModal.vue';\nimport PsErrorDialog from '@/components/core/dialog/PsErrorDialog.vue';\n\n// Providers\nimport { PsValueProvider } from \"@/store/modules/core/PsValueProvider\";\nimport { useUserProviderState } from '@/store/modules/user/UserProvider';\n\n// Params Holders\nimport PhoneLoginParameterHolder from '@/object/holder/PhoneLoginParameterHolder';\nimport PsStatus from '@/api/common/PsStatus';\n\n//language\nimport { i18n } from '@/assets/locales/index';\nimport PsUtils from '@/utils/PsUtils';\n\nexport default {\n    name : \"PhoneLoginView\",\n    components : {\n        PsLabel,\n        PsLabelTitle,\n        PsButton,\n        PsInput,\n        UserPhoneLoginVerificationModal,\n        PsErrorDialog,\n        PsLabelCaption\n    },\n    setup() {\n       \n        // Inject Provider\n        const userProvider = useUserProviderState();\n        const holder = new PhoneLoginParameterHolder();\n\n        // Init Values\n        const route = useRoute();\n        const psValueHolder = PsValueProvider.psValueHolder;\n        const loginUserId = psValueHolder.getLoginUserId();\n        const name = ref();\n        const phone = ref();\n        const isValidUserName = ref(false);\n        const isValidPhone = ref(false);\n        const user_phone_login_verification_modal = ref();\n        const ps_error_dialog = ref();\n        let appVerifier;\n        userProvider.loading.value = true;\n        function loadAppVerifier()  {\n            // Init recaptchaVerifier\n            userProvider.loading.value = true;\n            setTimeout(()=>{\n                (window as any).recaptchaVerifier = new firebaseApp.auth.RecaptchaVerifier('recaptcha-container', {\n                    'size': 'invisible',\n                    'callback': (response) => {\n                        PsUtils.log(\"Callback\");\n                        PsUtils.log(response);\n                    },\n                    'expired-callback': () => {\n                        PsUtils.log(\"expiry callback\")\n                    }\n                });\n                \n                appVerifier =  (window as any).recaptchaVerifier;\n                userProvider.loading.value = false;\n            },1000);\n        }\n\n        onMounted(() =>{\n            loadAppVerifier();            \n        })\n\n        function loginClicked() {\n            // Redirect\n            userProvider.navigateUserLoginTo(\"login\", router, route.query.redirect, route.query, route.params);\n        }\n        \n        async function clicked() {\n\n            let errorStatus = true;\n            if (name.value == '' || name.value == undefined) {\n                isValidUserName.value = true;\n                errorStatus = false;\n            }\n            if (name.value == '' || name.value == undefined) {\n                isValidPhone.value = true;\n                errorStatus = false;\n            }\n            if(!errorStatus) {\n                window.scrollTo(0, 0);\n                return;\n            }\n\n            holder.phoneId = loginUserId;\n            holder.userName = name.value;\n            holder.userPhone = phone.value; \n            \n            userProvider.loading.value = true;\n          \n            const verifier = appVerifier;\n            const confirmationResult = await firebaseApp.auth().signInWithPhoneNumber(phone.value, verifier).catch((error) => {\n                userProvider.loading.value = false;\n              \n                ps_error_dialog.value.openModal(\n                    i18n.global.t('phone_login__error_in_sign_in'), error?.message);\n                // loadAppVerifier();\n            });\n           \n            userProvider.loading.value = false;\n\n            if(confirmationResult != undefined) {\n                user_phone_login_verification_modal.value.openModal(\n                    'Phone No Verification', \n                    '', \n                    'Submit', \n                    'Cancel', \n                    async (code) => {\n                        userProvider.loading.value = true;\n                        confirmationResult.confirm(code).then(async (userCredential) => {\n                           \n                            if(userCredential != null\n                                && userCredential.user != null\n                                && userCredential.user.uid != null \n                                && userCredential.user.uid != '' ) {\n                                    // call backend server\n                                    const user = userCredential.user;\n                                    holder.phoneId = user.uid;                                    \n                                    await userProvider.submitUserLoginWithPhoneId( user.uid, name.value, phone.value); \n\n                                    if(userProvider.userResource.status == PsStatus.SUCCESS) {\n                                        userProvider.navigateUserLoginRedirect(route.query.redirect, 'dashboard', router, route.query.redirect, route.query, route.params);  \n                                    }else {\n                                        ps_error_dialog.value.openModal(i18n.global.t('phone_login__error_in_sign_in'), userProvider.userResource.message);\n                                        userProvider.setLoading(false);\n                                    }  \n                                \n\n                                }else {\n                                  \n                                    userProvider.setLoading(false);\n                                    // loadAppVerifier();\n                                    \n                                }\n                        }).catch((error) => {\n                           \n                            userProvider.setLoading(false);  \n                            ps_error_dialog.value.openModal(i18n.global.t('phone_login__error_in_sign_in'), error?.message);\n                                        \n                        });          \n                    },\n                    () => {\n                        PsUtils.log(\"Cancel\");\n                    }\n                );\n            }\n           \n        }\n        function validateName(e) {\n            const pattern = /^\\/$|(\\/[a-zA-Z_0-9-]+)+$/;\n            const res = pattern.test(e.target.value);\n            if (!res) {\n                isValidUserName.value = false;\n            } else {\n                isValidUserName.value = true;\n            }\n        }\n        function validatePhone(e) {\n            const pattern = /^\\/$|(\\/[a-zA-Z_0-9-]+)+$/;\n            const res = pattern.test(e.target.value);\n            if (!res) {\n                isValidPhone.value = false;\n            } else {\n                isValidPhone.value = true;\n            }\n        }\n        return{\n            userProvider,\n            clicked,\n            name,\n            phone,\n            user_phone_login_verification_modal,\n            ps_error_dialog,\n            loginClicked,\n            isValidUserName,\n            validateName,\n            validatePhone,\n            isValidPhone\n        }\n    }\n}\n","import { render } from \"./PhoneLogin.vue?vue&type=template&id=7964da62&ts=true\"\nimport script from \"./PhoneLogin.vue?vue&type=script&lang=ts\"\nexport * from \"./PhoneLogin.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__"],"names":["_hoisted_1","class","_hoisted_2","_hoisted_3","_createElementVNode","id","_hoisted_4","_createTextVNode","_hoisted_5","_hoisted_6","_hoisted_7","render","_ctx","_cache","$props","$setup","$data","$options","_component_ps_label_title","_resolveComponent","_component_ps_label","_component_ps_input","_component_ps_label_caption","_component_ps_button","_component_user_phone_login_verification_modal","_component_ps_error_dialog","_openBlock","_createElementBlock","_createVNode","default","_withCtx","_toDisplayString","$t","_","type","placeholder","onKeyup","_withKeys","clicked","onKeypress","validateName","value","name","$event","isValidUserName","_createBlock","key","textColor","_createCommentVNode","validatePhone","phone","isValidPhone","userProvider","loading","disabled","onClick","loginClicked","ref","components","PsLabel","PsLabelTitle","PsButton","PsInput","UserPhoneLoginVerificationModal","PsErrorDialog","PsLabelCaption","setup","appVerifier","useUserProviderState","holder","PhoneLoginParameterHolder","route","useRoute","psValueHolder","PsValueProvider","loginUserId","getLoginUserId","user_phone_login_verification_modal","ps_error_dialog","loadAppVerifier","setTimeout","window","recaptchaVerifier","firebaseApp","response","PsUtils","navigateUserLoginTo","router","query","redirect","params","errorStatus","undefined","phoneId","userName","userPhone","verifier","signInWithPhoneNumber","catch","error","openModal","i18n","message","scrollTo","confirmationResult","_a","code","confirm","then","userCredential","user","uid","submitUserLoginWithPhoneId","userResource","status","PsStatus","navigateUserLoginRedirect","setLoading","e","pattern","res","test","target","onMounted","__exports__"],"sourceRoot":""}