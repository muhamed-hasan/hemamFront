{"version":3,"file":"js/Chat.52cafdfd.js","mappings":"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","sources":["webpack://flutter_buy_sell/./node_modules/@firebase/database/dist/index.esm.js","webpack://flutter_buy_sell/./node_modules/@vue/cli-service/node_modules/vue-loader/dist/templateLoader.js","webpack://flutter_buy_sell/./node_modules/@vue/cli-service/node_modules/vue-loader/dist/index.js","webpack://flutter_buy_sell/./src/components/core/dialog/PsConfirmDialog.vue","webpack://flutter_buy_sell/./src/components/core/dialog/PsErrorDialog.vue","webpack://flutter_buy_sell/./src/components/core/dialog/PsSuccessDialog.vue","webpack://flutter_buy_sell/./src/components/core/input/PsInput.vue","webpack://flutter_buy_sell/./src/components/core/label/PsLabelCaption2.vue","webpack://flutter_buy_sell/./src/components/core/modals/PsImageModal.vue","webpack://flutter_buy_sell/./src/components/core/textarea/PsTextarea.vue","webpack://flutter_buy_sell/./src/components/layouts/container/PsContentContainer.vue","webpack://flutter_buy_sell/./src/object/holder/MarkAsSoldParameterHolder.ts","webpack://flutter_buy_sell/./src/store/modules/chat/GetChatHistoryProvider.ts","webpack://flutter_buy_sell/./src/components/modules/chat/ChatImageDetail.vue","webpack://flutter_buy_sell/./src/components/modules/chat/OfferModal.vue","webpack://flutter_buy_sell/./src/components/core/rating/RatingSelected.vue","webpack://flutter_buy_sell/./src/components/core/rating/RatingSelected.vue?c0ce","webpack://flutter_buy_sell/./src/store/modules/rating/RatingProvider.ts","webpack://flutter_buy_sell/./src/object/holder/RatingHolder.ts","webpack://flutter_buy_sell/./src/components/modules/review/ReviewModal.vue","webpack://flutter_buy_sell/./src/object/holder/GetChatHistoryParameterHolder.ts","webpack://flutter_buy_sell/./src/object/holder/MakeOfferParameterHolder.ts","webpack://flutter_buy_sell/./src/object/holder/ChatParameterHolder.ts","webpack://flutter_buy_sell/./src/object/holder/ResetUnReadMessageHolder.ts","webpack://flutter_buy_sell/./src/object/ChatMessage.ts","webpack://flutter_buy_sell/./src/object/holder/IsUserBoughtParameterHolder.ts","webpack://flutter_buy_sell/./src/views/chat/Chat.vue","webpack://flutter_buy_sell/./node_modules/number-format.js/lib/format.min.js","webpack://flutter_buy_sell/./src/store/modules/gallery/GalleryProvider.ts","webpack://flutter_buy_sell/./src/object/Offer.ts","webpack://flutter_buy_sell/./src/store/modules/offer/OfferProvider.ts"],"sourcesContent":["import firebase from '@firebase/app';\nimport { __spread, __values, __extends, __assign, __read, __awaiter, __generator } from 'tslib';\nimport { stringify, jsonEval, contains, assert, base64, stringToByteArray, Sha1, isNodeSdk, stringLength, errorPrefix, validateArgCount, validateCallback, Deferred, assertionError, safeGet, map, validateContextObject, deepCopy, isMobileCordova, base64Encode, isAdmin, isValidFormat, isEmpty, isReactNative, querystring } from '@firebase/util';\nimport { Logger, LogLevel } from '@firebase/logger';\nimport { Provider, ComponentContainer, Component } from '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Wraps a DOM Storage object and:\r\n * - automatically encode objects as JSON strings before storing them to allow us to store arbitrary types.\r\n * - prefixes names with \"firebase:\" to avoid collisions with app data.\r\n *\r\n * We automatically (see storage.js) create two such wrappers, one for sessionStorage,\r\n * and one for localStorage.\r\n *\r\n * @constructor\r\n */\r\nvar DOMStorageWrapper = /** @class */ (function () {\r\n    /**\r\n     * @param {Storage} domStorage_ The underlying storage object (e.g. localStorage or sessionStorage)\r\n     */\r\n    function DOMStorageWrapper(domStorage_) {\r\n        this.domStorage_ = domStorage_;\r\n        // Use a prefix to avoid collisions with other stuff saved by the app.\r\n        this.prefix_ = 'firebase:';\r\n    }\r\n    /**\r\n     * @param {string} key The key to save the value under\r\n     * @param {?Object} value The value being stored, or null to remove the key.\r\n     */\r\n    DOMStorageWrapper.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            this.domStorage_.removeItem(this.prefixedName_(key));\r\n        }\r\n        else {\r\n            this.domStorage_.setItem(this.prefixedName_(key), stringify(value));\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     * @return {*} The value that was stored under this key, or null\r\n     */\r\n    DOMStorageWrapper.prototype.get = function (key) {\r\n        var storedVal = this.domStorage_.getItem(this.prefixedName_(key));\r\n        if (storedVal == null) {\r\n            return null;\r\n        }\r\n        else {\r\n            return jsonEval(storedVal);\r\n        }\r\n    };\r\n    /**\r\n     * @param {string} key\r\n     */\r\n    DOMStorageWrapper.prototype.remove = function (key) {\r\n        this.domStorage_.removeItem(this.prefixedName_(key));\r\n    };\r\n    /**\r\n     * @param {string} name\r\n     * @return {string}\r\n     */\r\n    DOMStorageWrapper.prototype.prefixedName_ = function (name) {\r\n        return this.prefix_ + name;\r\n    };\r\n    DOMStorageWrapper.prototype.toString = function () {\r\n        return this.domStorage_.toString();\r\n    };\r\n    return DOMStorageWrapper;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An in-memory storage implementation that matches the API of DOMStorageWrapper\r\n * (TODO: create interface for both to implement).\r\n *\r\n * @constructor\r\n */\r\nvar MemoryStorage = /** @class */ (function () {\r\n    function MemoryStorage() {\r\n        this.cache_ = {};\r\n        this.isInMemoryStorage = true;\r\n    }\r\n    MemoryStorage.prototype.set = function (key, value) {\r\n        if (value == null) {\r\n            delete this.cache_[key];\r\n        }\r\n        else {\r\n            this.cache_[key] = value;\r\n        }\r\n    };\r\n    MemoryStorage.prototype.get = function (key) {\r\n        if (contains(this.cache_, key)) {\r\n            return this.cache_[key];\r\n        }\r\n        return null;\r\n    };\r\n    MemoryStorage.prototype.remove = function (key) {\r\n        delete this.cache_[key];\r\n    };\r\n    return MemoryStorage;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper to create a DOMStorageWrapper or else fall back to MemoryStorage.\r\n * TODO: Once MemoryStorage and DOMStorageWrapper have a shared interface this method annotation should change\r\n * to reflect this type\r\n *\r\n * @param {string} domStorageName Name of the underlying storage object\r\n *   (e.g. 'localStorage' or 'sessionStorage').\r\n * @return {?} Turning off type information until a common interface is defined.\r\n */\r\nvar createStoragefor = function (domStorageName) {\r\n    try {\r\n        // NOTE: just accessing \"localStorage\" or \"window['localStorage']\" may throw a security exception,\r\n        // so it must be inside the try/catch.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window[domStorageName] !== 'undefined') {\r\n            // Need to test cache. Just because it's here doesn't mean it works\r\n            var domStorage = window[domStorageName];\r\n            domStorage.setItem('firebase:sentinel', 'cache');\r\n            domStorage.removeItem('firebase:sentinel');\r\n            return new DOMStorageWrapper(domStorage);\r\n        }\r\n    }\r\n    catch (e) { }\r\n    // Failed to create wrapper.  Just return in-memory storage.\r\n    // TODO: log?\r\n    return new MemoryStorage();\r\n};\r\n/** A storage object that lasts across sessions */\r\nvar PersistentStorage = createStoragefor('localStorage');\r\n/** A storage object that only lasts one session */\r\nvar SessionStorage = createStoragefor('sessionStorage');\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar logClient = new Logger('@firebase/database');\r\n/**\r\n * Returns a locally-unique ID (generated by just incrementing up from 0 each time its called).\r\n * @type {function(): number} Generated ID.\r\n */\r\nvar LUIDGenerator = (function () {\r\n    var id = 1;\r\n    return function () {\r\n        return id++;\r\n    };\r\n})();\r\n/**\r\n * Sha1 hash of the input string\r\n * @param {!string} str The string to hash\r\n * @return {!string} The resulting hash\r\n */\r\nvar sha1 = function (str) {\r\n    var utf8Bytes = stringToByteArray(str);\r\n    var sha1 = new Sha1();\r\n    sha1.update(utf8Bytes);\r\n    var sha1Bytes = sha1.digest();\r\n    return base64.encodeByteArray(sha1Bytes);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n * @return {string}\r\n * @private\r\n */\r\nvar buildLogMessage_ = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = '';\r\n    for (var i = 0; i < varArgs.length; i++) {\r\n        var arg = varArgs[i];\r\n        if (Array.isArray(arg) ||\r\n            (arg &&\r\n                typeof arg === 'object' &&\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                typeof arg.length === 'number')) {\r\n            message += buildLogMessage_.apply(null, arg);\r\n        }\r\n        else if (typeof arg === 'object') {\r\n            message += stringify(arg);\r\n        }\r\n        else {\r\n            message += arg;\r\n        }\r\n        message += ' ';\r\n    }\r\n    return message;\r\n};\r\n/**\r\n * Use this for all debug messages in Firebase.\r\n * @type {?function(string)}\r\n */\r\nvar logger = null;\r\n/**\r\n * Flag to check for log availability on first log message\r\n * @type {boolean}\r\n * @private\r\n */\r\nvar firstLog_ = true;\r\n/**\r\n * The implementation of Firebase.enableLogging (defined here to break dependencies)\r\n * @param {boolean|?function(string)} logger_ A flag to turn on logging, or a custom logger\r\n * @param {boolean=} persistent Whether or not to persist logging settings across refreshes\r\n */\r\nvar enableLogging = function (logger_, persistent) {\r\n    assert(!persistent || logger_ === true || logger_ === false, \"Can't turn on custom loggers persistently.\");\r\n    if (logger_ === true) {\r\n        logClient.logLevel = LogLevel.VERBOSE;\r\n        logger = logClient.log.bind(logClient);\r\n        if (persistent) {\r\n            SessionStorage.set('logging_enabled', true);\r\n        }\r\n    }\r\n    else if (typeof logger_ === 'function') {\r\n        logger = logger_;\r\n    }\r\n    else {\r\n        logger = null;\r\n        SessionStorage.remove('logging_enabled');\r\n    }\r\n};\r\n/**\r\n *\r\n * @param {...(string|Arguments)} varArgs\r\n */\r\nvar log = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    if (firstLog_ === true) {\r\n        firstLog_ = false;\r\n        if (logger === null && SessionStorage.get('logging_enabled') === true) {\r\n            enableLogging(true);\r\n        }\r\n    }\r\n    if (logger) {\r\n        var message = buildLogMessage_.apply(null, varArgs);\r\n        logger(message);\r\n    }\r\n};\r\n/**\r\n * @param {!string} prefix\r\n * @return {function(...[*])}\r\n */\r\nvar logWrapper = function (prefix) {\r\n    return function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        log.apply(void 0, __spread([prefix], varArgs));\r\n    };\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar error = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE INTERNAL ERROR: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.error(message);\r\n};\r\n/**\r\n * @param {...string} varArgs\r\n */\r\nvar fatal = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = \"FIREBASE FATAL ERROR: \" + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.error(message);\r\n    throw new Error(message);\r\n};\r\n/**\r\n * @param {...*} varArgs\r\n */\r\nvar warn = function () {\r\n    var varArgs = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        varArgs[_i] = arguments[_i];\r\n    }\r\n    var message = 'FIREBASE WARNING: ' + buildLogMessage_.apply(void 0, __spread(varArgs));\r\n    logClient.warn(message);\r\n};\r\n/**\r\n * Logs a warning if the containing page uses https. Called when a call to new Firebase\r\n * does not use https.\r\n */\r\nvar warnIfPageIsSecure = function () {\r\n    // Be very careful accessing browser globals. Who knows what may or may not exist.\r\n    if (typeof window !== 'undefined' &&\r\n        window.location &&\r\n        window.location.protocol &&\r\n        window.location.protocol.indexOf('https:') !== -1) {\r\n        warn('Insecure Firebase access from a secure page. ' +\r\n            'Please use https in calls to new Firebase().');\r\n    }\r\n};\r\n/**\r\n * Returns true if data is NaN, or +/- Infinity.\r\n * @param {*} data\r\n * @return {boolean}\r\n */\r\nvar isInvalidJSONNumber = function (data) {\r\n    return (typeof data === 'number' &&\r\n        (data !== data || // NaN\r\n            data === Number.POSITIVE_INFINITY ||\r\n            data === Number.NEGATIVE_INFINITY));\r\n};\r\n/**\r\n * @param {function()} fn\r\n */\r\nvar executeWhenDOMReady = function (fn) {\r\n    if (isNodeSdk() || document.readyState === 'complete') {\r\n        fn();\r\n    }\r\n    else {\r\n        // Modeled after jQuery. Try DOMContentLoaded and onreadystatechange (which\r\n        // fire before onload), but fall back to onload.\r\n        var called_1 = false;\r\n        var wrappedFn_1 = function () {\r\n            if (!document.body) {\r\n                setTimeout(wrappedFn_1, Math.floor(10));\r\n                return;\r\n            }\r\n            if (!called_1) {\r\n                called_1 = true;\r\n                fn();\r\n            }\r\n        };\r\n        if (document.addEventListener) {\r\n            document.addEventListener('DOMContentLoaded', wrappedFn_1, false);\r\n            // fallback to onload.\r\n            window.addEventListener('load', wrappedFn_1, false);\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (document.attachEvent) {\r\n            // IE.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            document.attachEvent('onreadystatechange', function () {\r\n                if (document.readyState === 'complete') {\r\n                    wrappedFn_1();\r\n                }\r\n            });\r\n            // fallback to onload.\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            window.attachEvent('onload', wrappedFn_1);\r\n            // jQuery has an extra hack for IE that we could employ (based on\r\n            // http://javascript.nwbox.com/IEContentLoaded/) But it looks really old.\r\n            // I'm hoping we don't need it.\r\n        }\r\n    }\r\n};\r\n/**\r\n * Minimum key name. Invalid for actual data, used as a marker to sort before any valid names\r\n * @type {!string}\r\n */\r\nvar MIN_NAME = '[MIN_NAME]';\r\n/**\r\n * Maximum key name. Invalid for actual data, used as a marker to sort above any valid names\r\n * @type {!string}\r\n */\r\nvar MAX_NAME = '[MAX_NAME]';\r\n/**\r\n * Compares valid Firebase key names, plus min and max name\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number}\r\n */\r\nvar nameCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a === MIN_NAME || b === MAX_NAME) {\r\n        return -1;\r\n    }\r\n    else if (b === MIN_NAME || a === MAX_NAME) {\r\n        return 1;\r\n    }\r\n    else {\r\n        var aAsInt = tryParseInt(a), bAsInt = tryParseInt(b);\r\n        if (aAsInt !== null) {\r\n            if (bAsInt !== null) {\r\n                return aAsInt - bAsInt === 0 ? a.length - b.length : aAsInt - bAsInt;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (bAsInt !== null) {\r\n            return 1;\r\n        }\r\n        else {\r\n            return a < b ? -1 : 1;\r\n        }\r\n    }\r\n};\r\n/**\r\n * @param {!string} a\r\n * @param {!string} b\r\n * @return {!number} comparison result.\r\n */\r\nvar stringCompare = function (a, b) {\r\n    if (a === b) {\r\n        return 0;\r\n    }\r\n    else if (a < b) {\r\n        return -1;\r\n    }\r\n    else {\r\n        return 1;\r\n    }\r\n};\r\n/**\r\n * @param {string} key\r\n * @param {Object} obj\r\n * @return {*}\r\n */\r\nvar requireKey = function (key, obj) {\r\n    if (obj && key in obj) {\r\n        return obj[key];\r\n    }\r\n    else {\r\n        throw new Error('Missing required key (' + key + ') in object: ' + stringify(obj));\r\n    }\r\n};\r\n/**\r\n * @param {*} obj\r\n * @return {string}\r\n */\r\nvar ObjectToUniqueKey = function (obj) {\r\n    if (typeof obj !== 'object' || obj === null) {\r\n        return stringify(obj);\r\n    }\r\n    var keys = [];\r\n    // eslint-disable-next-line guard-for-in\r\n    for (var k in obj) {\r\n        keys.push(k);\r\n    }\r\n    // Export as json, but with the keys sorted.\r\n    keys.sort();\r\n    var key = '{';\r\n    for (var i = 0; i < keys.length; i++) {\r\n        if (i !== 0) {\r\n            key += ',';\r\n        }\r\n        key += stringify(keys[i]);\r\n        key += ':';\r\n        key += ObjectToUniqueKey(obj[keys[i]]);\r\n    }\r\n    key += '}';\r\n    return key;\r\n};\r\n/**\r\n * Splits a string into a number of smaller segments of maximum size\r\n * @param {!string} str The string\r\n * @param {!number} segsize The maximum number of chars in the string.\r\n * @return {Array.<string>} The string, split into appropriately-sized chunks\r\n */\r\nvar splitStringBySize = function (str, segsize) {\r\n    var len = str.length;\r\n    if (len <= segsize) {\r\n        return [str];\r\n    }\r\n    var dataSegs = [];\r\n    for (var c = 0; c < len; c += segsize) {\r\n        if (c + segsize > len) {\r\n            dataSegs.push(str.substring(c, len));\r\n        }\r\n        else {\r\n            dataSegs.push(str.substring(c, c + segsize));\r\n        }\r\n    }\r\n    return dataSegs;\r\n};\r\n/**\r\n * Apply a function to each (key, value) pair in an object or\r\n * apply a function to each (index, value) pair in an array\r\n * @param obj The object or array to iterate over\r\n * @param fn The function to apply\r\n */\r\nfunction each(obj, fn) {\r\n    for (var key in obj) {\r\n        if (obj.hasOwnProperty(key)) {\r\n            fn(key, obj[key]);\r\n        }\r\n    }\r\n}\r\n/**\r\n * Borrowed from http://hg.secondlife.com/llsd/src/tip/js/typedarray.js (MIT License)\r\n * I made one modification at the end and removed the NaN / Infinity\r\n * handling (since it seemed broken [caused an overflow] and we don't need it).  See MJL comments.\r\n * @param {!number} v A double\r\n * @return {string}\r\n */\r\nvar doubleToIEEE754String = function (v) {\r\n    assert(!isInvalidJSONNumber(v), 'Invalid JSON number'); // MJL\r\n    var ebits = 11, fbits = 52;\r\n    var bias = (1 << (ebits - 1)) - 1;\r\n    var s, e, f, ln, i;\r\n    // Compute sign, exponent, fraction\r\n    // Skip NaN / Infinity handling --MJL.\r\n    if (v === 0) {\r\n        e = 0;\r\n        f = 0;\r\n        s = 1 / v === -Infinity ? 1 : 0;\r\n    }\r\n    else {\r\n        s = v < 0;\r\n        v = Math.abs(v);\r\n        if (v >= Math.pow(2, 1 - bias)) {\r\n            // Normalized\r\n            ln = Math.min(Math.floor(Math.log(v) / Math.LN2), bias);\r\n            e = ln + bias;\r\n            f = Math.round(v * Math.pow(2, fbits - ln) - Math.pow(2, fbits));\r\n        }\r\n        else {\r\n            // Denormalized\r\n            e = 0;\r\n            f = Math.round(v / Math.pow(2, 1 - bias - fbits));\r\n        }\r\n    }\r\n    // Pack sign, exponent, fraction\r\n    var bits = [];\r\n    for (i = fbits; i; i -= 1) {\r\n        bits.push(f % 2 ? 1 : 0);\r\n        f = Math.floor(f / 2);\r\n    }\r\n    for (i = ebits; i; i -= 1) {\r\n        bits.push(e % 2 ? 1 : 0);\r\n        e = Math.floor(e / 2);\r\n    }\r\n    bits.push(s ? 1 : 0);\r\n    bits.reverse();\r\n    var str = bits.join('');\r\n    // Return the data as a hex string. --MJL\r\n    var hexByteString = '';\r\n    for (i = 0; i < 64; i += 8) {\r\n        var hexByte = parseInt(str.substr(i, 8), 2).toString(16);\r\n        if (hexByte.length === 1) {\r\n            hexByte = '0' + hexByte;\r\n        }\r\n        hexByteString = hexByteString + hexByte;\r\n    }\r\n    return hexByteString.toLowerCase();\r\n};\r\n/**\r\n * Used to detect if we're in a Chrome content script (which executes in an\r\n * isolated environment where long-polling doesn't work).\r\n * @return {boolean}\r\n */\r\nvar isChromeExtensionContentScript = function () {\r\n    return !!(typeof window === 'object' &&\r\n        window['chrome'] &&\r\n        window['chrome']['extension'] &&\r\n        !/^chrome/.test(window.location.href));\r\n};\r\n/**\r\n * Used to detect if we're in a Windows 8 Store app.\r\n * @return {boolean}\r\n */\r\nvar isWindowsStoreApp = function () {\r\n    // Check for the presence of a couple WinRT globals\r\n    return typeof Windows === 'object' && typeof Windows.UI === 'object';\r\n};\r\n/**\r\n * Converts a server error code to a Javascript Error\r\n * @param {!string} code\r\n * @param {!Query} query\r\n * @return {Error}\r\n */\r\nvar errorForServerCode = function (code, query) {\r\n    var reason = 'Unknown Error';\r\n    if (code === 'too_big') {\r\n        reason =\r\n            'The data requested exceeds the maximum size ' +\r\n                'that can be accessed with a single request.';\r\n    }\r\n    else if (code === 'permission_denied') {\r\n        reason = \"Client doesn't have permission to access the desired data.\";\r\n    }\r\n    else if (code === 'unavailable') {\r\n        reason = 'The service is unavailable';\r\n    }\r\n    var error = new Error(code + ' at ' + query.path.toString() + ': ' + reason);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    error.code = code.toUpperCase();\r\n    return error;\r\n};\r\n/**\r\n * Used to test for integer-looking strings\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INTEGER_REGEXP_ = new RegExp('^-?(0*)\\\\d{1,10}$');\r\n/**\r\n * If the string contains a 32-bit integer, return it.  Else return null.\r\n * @param {!string} str\r\n * @return {?number}\r\n */\r\nvar tryParseInt = function (str) {\r\n    if (INTEGER_REGEXP_.test(str)) {\r\n        var intVal = Number(str);\r\n        if (intVal >= -2147483648 && intVal <= 2147483647) {\r\n            return intVal;\r\n        }\r\n    }\r\n    return null;\r\n};\r\n/**\r\n * Helper to run some code but catch any exceptions and re-throw them later.\r\n * Useful for preventing user callbacks from breaking internal code.\r\n *\r\n * Re-throwing the exception from a setTimeout is a little evil, but it's very\r\n * convenient (we don't have to try to figure out when is a safe point to\r\n * re-throw it), and the behavior seems reasonable:\r\n *\r\n * * If you aren't pausing on exceptions, you get an error in the console with\r\n *   the correct stack trace.\r\n * * If you're pausing on all exceptions, the debugger will pause on your\r\n *   exception and then again when we rethrow it.\r\n * * If you're only pausing on uncaught exceptions, the debugger will only pause\r\n *   on us re-throwing it.\r\n *\r\n * @param {!function()} fn The code to guard.\r\n */\r\nvar exceptionGuard = function (fn) {\r\n    try {\r\n        fn();\r\n    }\r\n    catch (e) {\r\n        // Re-throw exception when it's safe.\r\n        setTimeout(function () {\r\n            // It used to be that \"throw e\" would result in a good console error with\r\n            // relevant context, but as of Chrome 39, you just get the firebase.js\r\n            // file/line number where we re-throw it, which is useless. So we log\r\n            // e.stack explicitly.\r\n            var stack = e.stack || '';\r\n            warn('Exception was thrown by user callback.', stack);\r\n            throw e;\r\n        }, Math.floor(0));\r\n    }\r\n};\r\n/**\r\n * @return {boolean} true if we think we're currently being crawled.\r\n */\r\nvar beingCrawled = function () {\r\n    var userAgent = (typeof window === 'object' &&\r\n        window['navigator'] &&\r\n        window['navigator']['userAgent']) ||\r\n        '';\r\n    // For now we whitelist the most popular crawlers.  We should refine this to be the set of crawlers we\r\n    // believe to support JavaScript/AJAX rendering.\r\n    // NOTE: Google Webmaster Tools doesn't really belong, but their \"This is how a visitor to your website\r\n    // would have seen the page\" is flaky if we don't treat it as a crawler.\r\n    return (userAgent.search(/googlebot|google webmaster tools|bingbot|yahoo! slurp|baiduspider|yandexbot|duckduckbot/i) >= 0);\r\n};\r\n/**\r\n * Same as setTimeout() except on Node.JS it will /not/ prevent the process from exiting.\r\n *\r\n * It is removed with clearTimeout() as normal.\r\n *\r\n * @param {Function} fn Function to run.\r\n * @param {number} time Milliseconds to wait before running.\r\n * @return {number|Object} The setTimeout() return value.\r\n */\r\nvar setTimeoutNonBlocking = function (fn, time) {\r\n    var timeout = setTimeout(fn, time);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    if (typeof timeout === 'object' && timeout['unref']) {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        timeout['unref']();\r\n    }\r\n    return timeout;\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An immutable object representing a parsed path.  It's immutable so that you\r\n * can pass them around to other functions without worrying about them changing\r\n * it.\r\n */\r\nvar Path = /** @class */ (function () {\r\n    /**\r\n     * @param {string|Array.<string>} pathOrString Path string to parse,\r\n     *      or another path, or the raw tokens array\r\n     * @param {number=} pieceNum\r\n     */\r\n    function Path(pathOrString, pieceNum) {\r\n        if (pieceNum === void 0) {\r\n            this.pieces_ = pathOrString.split('/');\r\n            // Remove empty pieces.\r\n            var copyTo = 0;\r\n            for (var i = 0; i < this.pieces_.length; i++) {\r\n                if (this.pieces_[i].length > 0) {\r\n                    this.pieces_[copyTo] = this.pieces_[i];\r\n                    copyTo++;\r\n                }\r\n            }\r\n            this.pieces_.length = copyTo;\r\n            this.pieceNum_ = 0;\r\n        }\r\n        else {\r\n            this.pieces_ = pathOrString;\r\n            this.pieceNum_ = pieceNum;\r\n        }\r\n    }\r\n    Object.defineProperty(Path, \"Empty\", {\r\n        /**\r\n         * Singleton to represent an empty path\r\n         *\r\n         * @const\r\n         */\r\n        get: function () {\r\n            return new Path('');\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Path.prototype.getFront = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        return this.pieces_[this.pieceNum_];\r\n    };\r\n    /**\r\n     * @return {number} The number of segments in this path\r\n     */\r\n    Path.prototype.getLength = function () {\r\n        return this.pieces_.length - this.pieceNum_;\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.popFront = function () {\r\n        var pieceNum = this.pieceNum_;\r\n        if (pieceNum < this.pieces_.length) {\r\n            pieceNum++;\r\n        }\r\n        return new Path(this.pieces_, pieceNum);\r\n    };\r\n    /**\r\n     * @return {?string}\r\n     */\r\n    Path.prototype.getBack = function () {\r\n        if (this.pieceNum_ < this.pieces_.length) {\r\n            return this.pieces_[this.pieces_.length - 1];\r\n        }\r\n        return null;\r\n    };\r\n    Path.prototype.toString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + this.pieces_[i];\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    Path.prototype.toUrlEncodedString = function () {\r\n        var pathString = '';\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            if (this.pieces_[i] !== '') {\r\n                pathString += '/' + encodeURIComponent(String(this.pieces_[i]));\r\n            }\r\n        }\r\n        return pathString || '/';\r\n    };\r\n    /**\r\n     * Shallow copy of the parts of the path.\r\n     *\r\n     * @param {number=} begin\r\n     * @return {!Array<string>}\r\n     */\r\n    Path.prototype.slice = function (begin) {\r\n        if (begin === void 0) { begin = 0; }\r\n        return this.pieces_.slice(this.pieceNum_ + begin);\r\n    };\r\n    /**\r\n     * @return {?Path}\r\n     */\r\n    Path.prototype.parent = function () {\r\n        if (this.pieceNum_ >= this.pieces_.length) {\r\n            return null;\r\n        }\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length - 1; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @param {string|!Path} childPathObj\r\n     * @return {!Path}\r\n     */\r\n    Path.prototype.child = function (childPathObj) {\r\n        var pieces = [];\r\n        for (var i = this.pieceNum_; i < this.pieces_.length; i++) {\r\n            pieces.push(this.pieces_[i]);\r\n        }\r\n        if (childPathObj instanceof Path) {\r\n            for (var i = childPathObj.pieceNum_; i < childPathObj.pieces_.length; i++) {\r\n                pieces.push(childPathObj.pieces_[i]);\r\n            }\r\n        }\r\n        else {\r\n            var childPieces = childPathObj.split('/');\r\n            for (var i = 0; i < childPieces.length; i++) {\r\n                if (childPieces[i].length > 0) {\r\n                    pieces.push(childPieces[i]);\r\n                }\r\n            }\r\n        }\r\n        return new Path(pieces, 0);\r\n    };\r\n    /**\r\n     * @return {boolean} True if there are no segments in this path\r\n     */\r\n    Path.prototype.isEmpty = function () {\r\n        return this.pieceNum_ >= this.pieces_.length;\r\n    };\r\n    /**\r\n     * @param {!Path} outerPath\r\n     * @param {!Path} innerPath\r\n     * @return {!Path} The path from outerPath to innerPath\r\n     */\r\n    Path.relativePath = function (outerPath, innerPath) {\r\n        var outer = outerPath.getFront(), inner = innerPath.getFront();\r\n        if (outer === null) {\r\n            return innerPath;\r\n        }\r\n        else if (outer === inner) {\r\n            return Path.relativePath(outerPath.popFront(), innerPath.popFront());\r\n        }\r\n        else {\r\n            throw new Error('INTERNAL ERROR: innerPath (' +\r\n                innerPath +\r\n                ') is not within ' +\r\n                'outerPath (' +\r\n                outerPath +\r\n                ')');\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Path} left\r\n     * @param {!Path} right\r\n     * @return {number} -1, 0, 1 if left is less, equal, or greater than the right.\r\n     */\r\n    Path.comparePaths = function (left, right) {\r\n        var leftKeys = left.slice();\r\n        var rightKeys = right.slice();\r\n        for (var i = 0; i < leftKeys.length && i < rightKeys.length; i++) {\r\n            var cmp = nameCompare(leftKeys[i], rightKeys[i]);\r\n            if (cmp !== 0) {\r\n                return cmp;\r\n            }\r\n        }\r\n        if (leftKeys.length === rightKeys.length) {\r\n            return 0;\r\n        }\r\n        return leftKeys.length < rightKeys.length ? -1 : 1;\r\n    };\r\n    /**\r\n     *\r\n     * @param {Path} other\r\n     * @return {boolean} true if paths are the same.\r\n     */\r\n    Path.prototype.equals = function (other) {\r\n        if (this.getLength() !== other.getLength()) {\r\n            return false;\r\n        }\r\n        for (var i = this.pieceNum_, j = other.pieceNum_; i <= this.pieces_.length; i++, j++) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n        }\r\n        return true;\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} other\r\n     * @return {boolean} True if this path is a parent (or the same as) other\r\n     */\r\n    Path.prototype.contains = function (other) {\r\n        var i = this.pieceNum_;\r\n        var j = other.pieceNum_;\r\n        if (this.getLength() > other.getLength()) {\r\n            return false;\r\n        }\r\n        while (i < this.pieces_.length) {\r\n            if (this.pieces_[i] !== other.pieces_[j]) {\r\n                return false;\r\n            }\r\n            ++i;\r\n            ++j;\r\n        }\r\n        return true;\r\n    };\r\n    return Path;\r\n}()); // end Path\r\n/**\r\n * Dynamic (mutable) path used to count path lengths.\r\n *\r\n * This class is used to efficiently check paths for valid\r\n * length (in UTF8 bytes) and depth (used in path validation).\r\n *\r\n * Throws Error exception if path is ever invalid.\r\n *\r\n * The definition of a path always begins with '/'.\r\n */\r\nvar ValidationPath = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path Initial Path.\r\n     * @param {string} errorPrefix_ Prefix for any error messages.\r\n     */\r\n    function ValidationPath(path, errorPrefix_) {\r\n        this.errorPrefix_ = errorPrefix_;\r\n        /** @type {!Array<string>} */\r\n        this.parts_ = path.slice();\r\n        /** @type {number} Initialize to number of '/' chars needed in path. */\r\n        this.byteLength_ = Math.max(1, this.parts_.length);\r\n        for (var i = 0; i < this.parts_.length; i++) {\r\n            this.byteLength_ += stringLength(this.parts_[i]);\r\n        }\r\n        this.checkValid_();\r\n    }\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_DEPTH\", {\r\n        /** @const {number} Maximum key depth. */\r\n        get: function () {\r\n            return 32;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(ValidationPath, \"MAX_PATH_LENGTH_BYTES\", {\r\n        /** @const {number} Maximum number of (UTF8) bytes in a Firebase path. */\r\n        get: function () {\r\n            return 768;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @param {string} child */\r\n    ValidationPath.prototype.push = function (child) {\r\n        // Count the needed '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ += 1;\r\n        }\r\n        this.parts_.push(child);\r\n        this.byteLength_ += stringLength(child);\r\n        this.checkValid_();\r\n    };\r\n    ValidationPath.prototype.pop = function () {\r\n        var last = this.parts_.pop();\r\n        this.byteLength_ -= stringLength(last);\r\n        // Un-count the previous '/'\r\n        if (this.parts_.length > 0) {\r\n            this.byteLength_ -= 1;\r\n        }\r\n    };\r\n    ValidationPath.prototype.checkValid_ = function () {\r\n        if (this.byteLength_ > ValidationPath.MAX_PATH_LENGTH_BYTES) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'has a key path longer than ' +\r\n                ValidationPath.MAX_PATH_LENGTH_BYTES +\r\n                ' bytes (' +\r\n                this.byteLength_ +\r\n                ').');\r\n        }\r\n        if (this.parts_.length > ValidationPath.MAX_PATH_DEPTH) {\r\n            throw new Error(this.errorPrefix_ +\r\n                'path specified exceeds the maximum depth that can be written (' +\r\n                ValidationPath.MAX_PATH_DEPTH +\r\n                ') or object contains a cycle ' +\r\n                this.toErrorString());\r\n        }\r\n    };\r\n    /**\r\n     * String for use in error messages - uses '.' notation for path.\r\n     *\r\n     * @return {string}\r\n     */\r\n    ValidationPath.prototype.toErrorString = function () {\r\n        if (this.parts_.length === 0) {\r\n            return '';\r\n        }\r\n        return \"in property '\" + this.parts_.join('.') + \"'\";\r\n    };\r\n    return ValidationPath;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar PROTOCOL_VERSION = '5';\r\nvar VERSION_PARAM = 'v';\r\nvar TRANSPORT_SESSION_PARAM = 's';\r\nvar REFERER_PARAM = 'r';\r\nvar FORGE_REF = 'f';\r\nvar FORGE_DOMAIN = 'firebaseio.com';\r\nvar LAST_SESSION_PARAM = 'ls';\r\nvar APPLICATION_ID_PARAM = 'p';\r\nvar WEBSOCKET = 'websocket';\r\nvar LONG_POLLING = 'long_polling';\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A class that holds metadata about a Repo object\r\n *\r\n * @constructor\r\n */\r\nvar RepoInfo = /** @class */ (function () {\r\n    /**\r\n     * @param host Hostname portion of the url for the repo\r\n     * @param secure Whether or not this repo is accessed over ssl\r\n     * @param namespace The namespace represented by the repo\r\n     * @param webSocketOnly Whether to prefer websockets over all other transports (used by Nest).\r\n     * @param nodeAdmin Whether this instance uses Admin SDK credentials\r\n     * @param persistenceKey Override the default session persistence storage key\r\n     */\r\n    function RepoInfo(host, secure, namespace, webSocketOnly, nodeAdmin, persistenceKey, includeNamespaceInQueryParams) {\r\n        if (nodeAdmin === void 0) { nodeAdmin = false; }\r\n        if (persistenceKey === void 0) { persistenceKey = ''; }\r\n        if (includeNamespaceInQueryParams === void 0) { includeNamespaceInQueryParams = false; }\r\n        this.secure = secure;\r\n        this.namespace = namespace;\r\n        this.webSocketOnly = webSocketOnly;\r\n        this.nodeAdmin = nodeAdmin;\r\n        this.persistenceKey = persistenceKey;\r\n        this.includeNamespaceInQueryParams = includeNamespaceInQueryParams;\r\n        this.host = host.toLowerCase();\r\n        this.domain = this.host.substr(this.host.indexOf('.') + 1);\r\n        this.internalHost =\r\n            PersistentStorage.get('host:' + host) || this.host;\r\n    }\r\n    RepoInfo.prototype.needsQueryParam = function () {\r\n        return (this.host !== this.internalHost ||\r\n            this.isCustomHost() ||\r\n            this.includeNamespaceInQueryParams);\r\n    };\r\n    RepoInfo.prototype.isCacheableHost = function () {\r\n        return this.internalHost.substr(0, 2) === 's-';\r\n    };\r\n    RepoInfo.prototype.isDemoHost = function () {\r\n        return this.domain === 'firebaseio-demo.com';\r\n    };\r\n    RepoInfo.prototype.isCustomHost = function () {\r\n        return (this.domain !== 'firebaseio.com' && this.domain !== 'firebaseio-demo.com');\r\n    };\r\n    RepoInfo.prototype.updateHost = function (newHost) {\r\n        if (newHost !== this.internalHost) {\r\n            this.internalHost = newHost;\r\n            if (this.isCacheableHost()) {\r\n                PersistentStorage.set('host:' + this.host, this.internalHost);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns the websocket URL for this repo\r\n     * @param {string} type of connection\r\n     * @param {Object} params list\r\n     * @return {string} The URL for this repo\r\n     */\r\n    RepoInfo.prototype.connectionURL = function (type, params) {\r\n        assert(typeof type === 'string', 'typeof type must == string');\r\n        assert(typeof params === 'object', 'typeof params must == object');\r\n        var connURL;\r\n        if (type === WEBSOCKET) {\r\n            connURL =\r\n                (this.secure ? 'wss://' : 'ws://') + this.internalHost + '/.ws?';\r\n        }\r\n        else if (type === LONG_POLLING) {\r\n            connURL =\r\n                (this.secure ? 'https://' : 'http://') + this.internalHost + '/.lp?';\r\n        }\r\n        else {\r\n            throw new Error('Unknown connection type: ' + type);\r\n        }\r\n        if (this.needsQueryParam()) {\r\n            params['ns'] = this.namespace;\r\n        }\r\n        var pairs = [];\r\n        each(params, function (key, value) {\r\n            pairs.push(key + '=' + value);\r\n        });\r\n        return connURL + pairs.join('&');\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toString = function () {\r\n        var str = this.toURLString();\r\n        if (this.persistenceKey) {\r\n            str += '<' + this.persistenceKey + '>';\r\n        }\r\n        return str;\r\n    };\r\n    /** @return {string} */\r\n    RepoInfo.prototype.toURLString = function () {\r\n        return (this.secure ? 'https://' : 'http://') + this.host;\r\n    };\r\n    return RepoInfo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!string} pathString\r\n * @return {string}\r\n */\r\nfunction decodePath(pathString) {\r\n    var pathStringDecoded = '';\r\n    var pieces = pathString.split('/');\r\n    for (var i = 0; i < pieces.length; i++) {\r\n        if (pieces[i].length > 0) {\r\n            var piece = pieces[i];\r\n            try {\r\n                piece = decodeURIComponent(piece.replace(/\\+/g, ' '));\r\n            }\r\n            catch (e) { }\r\n            pathStringDecoded += '/' + piece;\r\n        }\r\n    }\r\n    return pathStringDecoded;\r\n}\r\n/**\r\n * @param {!string} queryString\r\n * @return {!{[key:string]:string}} key value hash\r\n */\r\nfunction decodeQuery(queryString) {\r\n    var e_1, _a;\r\n    var results = {};\r\n    if (queryString.charAt(0) === '?') {\r\n        queryString = queryString.substring(1);\r\n    }\r\n    try {\r\n        for (var _b = __values(queryString.split('&')), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n            var segment = _c.value;\r\n            if (segment.length === 0) {\r\n                continue;\r\n            }\r\n            var kv = segment.split('=');\r\n            if (kv.length === 2) {\r\n                results[decodeURIComponent(kv[0])] = decodeURIComponent(kv[1]);\r\n            }\r\n            else {\r\n                warn(\"Invalid query segment '\" + segment + \"' in query '\" + queryString + \"'\");\r\n            }\r\n        }\r\n    }\r\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n    finally {\r\n        try {\r\n            if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n        }\r\n        finally { if (e_1) throw e_1.error; }\r\n    }\r\n    return results;\r\n}\r\nvar parseRepoInfo = function (dataURL, nodeAdmin) {\r\n    var parsedUrl = parseDatabaseURL(dataURL), namespace = parsedUrl.namespace;\r\n    if (parsedUrl.domain === 'firebase.com') {\r\n        fatal(parsedUrl.host +\r\n            ' is no longer supported. ' +\r\n            'Please use <YOUR FIREBASE>.firebaseio.com instead');\r\n    }\r\n    // Catch common error of uninitialized namespace value.\r\n    if ((!namespace || namespace === 'undefined') &&\r\n        parsedUrl.domain !== 'localhost') {\r\n        fatal('Cannot parse Firebase url. Please use https://<YOUR FIREBASE>.firebaseio.com');\r\n    }\r\n    if (!parsedUrl.secure) {\r\n        warnIfPageIsSecure();\r\n    }\r\n    var webSocketOnly = parsedUrl.scheme === 'ws' || parsedUrl.scheme === 'wss';\r\n    return {\r\n        repoInfo: new RepoInfo(parsedUrl.host, parsedUrl.secure, namespace, nodeAdmin, webSocketOnly, \r\n        /*persistenceKey=*/ '', \r\n        /*includeNamespaceInQueryParams=*/ namespace !== parsedUrl.subdomain),\r\n        path: new Path(parsedUrl.pathString)\r\n    };\r\n};\r\n/**\r\n *\r\n * @param {!string} dataURL\r\n * @return {{host: string, port: number, domain: string, subdomain: string, secure: boolean, scheme: string, pathString: string, namespace: string}}\r\n */\r\nvar parseDatabaseURL = function (dataURL) {\r\n    // Default to empty strings in the event of a malformed string.\r\n    var host = '', domain = '', subdomain = '', pathString = '', namespace = '';\r\n    // Always default to SSL, unless otherwise specified.\r\n    var secure = true, scheme = 'https', port = 443;\r\n    // Don't do any validation here. The caller is responsible for validating the result of parsing.\r\n    if (typeof dataURL === 'string') {\r\n        // Parse scheme.\r\n        var colonInd = dataURL.indexOf('//');\r\n        if (colonInd >= 0) {\r\n            scheme = dataURL.substring(0, colonInd - 1);\r\n            dataURL = dataURL.substring(colonInd + 2);\r\n        }\r\n        // Parse host, path, and query string.\r\n        var slashInd = dataURL.indexOf('/');\r\n        if (slashInd === -1) {\r\n            slashInd = dataURL.length;\r\n        }\r\n        var questionMarkInd = dataURL.indexOf('?');\r\n        if (questionMarkInd === -1) {\r\n            questionMarkInd = dataURL.length;\r\n        }\r\n        host = dataURL.substring(0, Math.min(slashInd, questionMarkInd));\r\n        if (slashInd < questionMarkInd) {\r\n            // For pathString, questionMarkInd will always come after slashInd\r\n            pathString = decodePath(dataURL.substring(slashInd, questionMarkInd));\r\n        }\r\n        var queryParams = decodeQuery(dataURL.substring(Math.min(dataURL.length, questionMarkInd)));\r\n        // If we have a port, use scheme for determining if it's secure.\r\n        colonInd = host.indexOf(':');\r\n        if (colonInd >= 0) {\r\n            secure = scheme === 'https' || scheme === 'wss';\r\n            port = parseInt(host.substring(colonInd + 1), 10);\r\n        }\r\n        else {\r\n            colonInd = host.length;\r\n        }\r\n        var hostWithoutPort = host.slice(0, colonInd);\r\n        if (hostWithoutPort.toLowerCase() === 'localhost') {\r\n            domain = 'localhost';\r\n        }\r\n        else if (hostWithoutPort.split('.').length <= 2) {\r\n            domain = hostWithoutPort;\r\n        }\r\n        else {\r\n            // Interpret the subdomain of a 3 or more component URL as the namespace name.\r\n            var dotInd = host.indexOf('.');\r\n            subdomain = host.substring(0, dotInd).toLowerCase();\r\n            domain = host.substring(dotInd + 1);\r\n            // Normalize namespaces to lowercase to share storage / connection.\r\n            namespace = subdomain;\r\n        }\r\n        // Always treat the value of the `ns` as the namespace name if it is present.\r\n        if ('ns' in queryParams) {\r\n            namespace = queryParams['ns'];\r\n        }\r\n    }\r\n    return {\r\n        host: host,\r\n        port: port,\r\n        domain: domain,\r\n        subdomain: subdomain,\r\n        secure: secure,\r\n        scheme: scheme,\r\n        pathString: pathString,\r\n        namespace: namespace\r\n    };\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * True for invalid Firebase keys\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_KEY_REGEX_ = /[\\[\\].#$\\/\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * True for invalid Firebase paths.\r\n * Allows '/' in paths.\r\n * @type {RegExp}\r\n * @private\r\n */\r\nvar INVALID_PATH_REGEX_ = /[\\[\\].#$\\u0000-\\u001F\\u007F]/;\r\n/**\r\n * Maximum number of characters to allow in leaf value\r\n * @type {number}\r\n * @private\r\n */\r\nvar MAX_LEAF_SIZE_ = 10 * 1024 * 1024;\r\n/**\r\n * @param {*} key\r\n * @return {boolean}\r\n */\r\nvar isValidKey = function (key) {\r\n    return (typeof key === 'string' && key.length !== 0 && !INVALID_KEY_REGEX_.test(key));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidPathString = function (pathString) {\r\n    return (typeof pathString === 'string' &&\r\n        pathString.length !== 0 &&\r\n        !INVALID_PATH_REGEX_.test(pathString));\r\n};\r\n/**\r\n * @param {string} pathString\r\n * @return {boolean}\r\n */\r\nvar isValidRootPathString = function (pathString) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    return isValidPathString(pathString);\r\n};\r\n/**\r\n * @param {*} priority\r\n * @return {boolean}\r\n */\r\nvar isValidPriority = function (priority) {\r\n    return (priority === null ||\r\n        typeof priority === 'string' ||\r\n        (typeof priority === 'number' && !isInvalidJSONNumber(priority)) ||\r\n        (priority &&\r\n            typeof priority === 'object' &&\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            contains(priority, '.sv')));\r\n};\r\n/**\r\n * Pre-validate a datum passed as an argument to Firebase function.\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    validateFirebaseData(errorPrefix(fnName, argumentNumber, optional), data, path);\r\n};\r\n/**\r\n * Validate a data object client-side before sending to server.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {*} data\r\n * @param {!Path|!ValidationPath} path_\r\n */\r\nvar validateFirebaseData = function (errorPrefix, data, path_) {\r\n    var path = path_ instanceof Path ? new ValidationPath(path_, errorPrefix) : path_;\r\n    if (data === undefined) {\r\n        throw new Error(errorPrefix + 'contains undefined ' + path.toErrorString());\r\n    }\r\n    if (typeof data === 'function') {\r\n        throw new Error(errorPrefix +\r\n            'contains a function ' +\r\n            path.toErrorString() +\r\n            ' with contents = ' +\r\n            data.toString());\r\n    }\r\n    if (isInvalidJSONNumber(data)) {\r\n        throw new Error(errorPrefix + 'contains ' + data.toString() + ' ' + path.toErrorString());\r\n    }\r\n    // Check max leaf size, but try to avoid the utf8 conversion if we can.\r\n    if (typeof data === 'string' &&\r\n        data.length > MAX_LEAF_SIZE_ / 3 &&\r\n        stringLength(data) > MAX_LEAF_SIZE_) {\r\n        throw new Error(errorPrefix +\r\n            'contains a string greater than ' +\r\n            MAX_LEAF_SIZE_ +\r\n            ' utf8 bytes ' +\r\n            path.toErrorString() +\r\n            \" ('\" +\r\n            data.substring(0, 50) +\r\n            \"...')\");\r\n    }\r\n    // TODO = Perf = Consider combining the recursive validation of keys into NodeFromJSON\r\n    // to save extra walking of large objects.\r\n    if (data && typeof data === 'object') {\r\n        var hasDotValue_1 = false;\r\n        var hasActualChild_1 = false;\r\n        each(data, function (key, value) {\r\n            if (key === '.value') {\r\n                hasDotValue_1 = true;\r\n            }\r\n            else if (key !== '.priority' && key !== '.sv') {\r\n                hasActualChild_1 = true;\r\n                if (!isValidKey(key)) {\r\n                    throw new Error(errorPrefix +\r\n                        ' contains an invalid key (' +\r\n                        key +\r\n                        ') ' +\r\n                        path.toErrorString() +\r\n                        '.  Keys must be non-empty strings ' +\r\n                        'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n                }\r\n            }\r\n            path.push(key);\r\n            validateFirebaseData(errorPrefix, value, path);\r\n            path.pop();\r\n        });\r\n        if (hasDotValue_1 && hasActualChild_1) {\r\n            throw new Error(errorPrefix +\r\n                ' contains \".value\" child ' +\r\n                path.toErrorString() +\r\n                ' in addition to actual children.');\r\n        }\r\n    }\r\n};\r\n/**\r\n * Pre-validate paths passed in the firebase function.\r\n *\r\n * @param {string} errorPrefix\r\n * @param {Array<!Path>} mergePaths\r\n */\r\nvar validateFirebaseMergePaths = function (errorPrefix, mergePaths) {\r\n    var i, curPath;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        var keys = curPath.slice();\r\n        for (var j = 0; j < keys.length; j++) {\r\n            if (keys[j] === '.priority' && j === keys.length - 1) ;\r\n            else if (!isValidKey(keys[j])) {\r\n                throw new Error(errorPrefix +\r\n                    'contains an invalid key (' +\r\n                    keys[j] +\r\n                    ') in path ' +\r\n                    curPath.toString() +\r\n                    '. Keys must be non-empty strings ' +\r\n                    'and can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\"');\r\n            }\r\n        }\r\n    }\r\n    // Check that update keys are not descendants of each other.\r\n    // We rely on the property that sorting guarantees that ancestors come\r\n    // right before descendants.\r\n    mergePaths.sort(Path.comparePaths);\r\n    var prevPath = null;\r\n    for (i = 0; i < mergePaths.length; i++) {\r\n        curPath = mergePaths[i];\r\n        if (prevPath !== null && prevPath.contains(curPath)) {\r\n            throw new Error(errorPrefix +\r\n                'contains a path ' +\r\n                prevPath.toString() +\r\n                ' that is ancestor of another path ' +\r\n                curPath.toString());\r\n        }\r\n        prevPath = curPath;\r\n    }\r\n};\r\n/**\r\n * pre-validate an object passed as an argument to firebase function (\r\n * must be an object - e.g. for firebase.update()).\r\n *\r\n * @param {string} fnName\r\n * @param {number} argumentNumber\r\n * @param {*} data\r\n * @param {!Path} path\r\n * @param {boolean} optional\r\n */\r\nvar validateFirebaseMergeDataArg = function (fnName, argumentNumber, data, path, optional) {\r\n    if (optional && data === undefined) {\r\n        return;\r\n    }\r\n    var errorPrefix$1 = errorPrefix(fnName, argumentNumber, optional);\r\n    if (!(data && typeof data === 'object') || Array.isArray(data)) {\r\n        throw new Error(errorPrefix$1 + ' must be an object containing the children to replace.');\r\n    }\r\n    var mergePaths = [];\r\n    each(data, function (key, value) {\r\n        var curPath = new Path(key);\r\n        validateFirebaseData(errorPrefix$1, value, path.child(curPath));\r\n        if (curPath.getBack() === '.priority') {\r\n            if (!isValidPriority(value)) {\r\n                throw new Error(errorPrefix$1 +\r\n                    \"contains an invalid value for '\" +\r\n                    curPath.toString() +\r\n                    \"', which must be a valid \" +\r\n                    'Firebase priority (a string, finite number, server value, or null).');\r\n            }\r\n        }\r\n        mergePaths.push(curPath);\r\n    });\r\n    validateFirebaseMergePaths(errorPrefix$1, mergePaths);\r\n};\r\nvar validatePriority = function (fnName, argumentNumber, priority, optional) {\r\n    if (optional && priority === undefined) {\r\n        return;\r\n    }\r\n    if (isInvalidJSONNumber(priority)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'is ' +\r\n            priority.toString() +\r\n            ', but must be a valid Firebase priority (a string, finite number, ' +\r\n            'server value, or null).');\r\n    }\r\n    // Special case to allow importing data with a .sv.\r\n    if (!isValidPriority(priority)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'must be a valid Firebase priority ' +\r\n            '(a string, finite number, server value, or null).');\r\n    }\r\n};\r\nvar validateEventType = function (fnName, argumentNumber, eventType, optional) {\r\n    if (optional && eventType === undefined) {\r\n        return;\r\n    }\r\n    switch (eventType) {\r\n        case 'value':\r\n        case 'child_added':\r\n        case 'child_removed':\r\n        case 'child_changed':\r\n        case 'child_moved':\r\n            break;\r\n        default:\r\n            throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n                'must be a valid event type = \"value\", \"child_added\", \"child_removed\", ' +\r\n                '\"child_changed\", or \"child_moved\".');\r\n    }\r\n};\r\nvar validateKey = function (fnName, argumentNumber, key, optional) {\r\n    if (optional && key === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidKey(key)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid key = \"' +\r\n            key +\r\n            '\".  Firebase keys must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"/\", \"[\", or \"]\").');\r\n    }\r\n};\r\nvar validatePathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (optional && pathString === undefined) {\r\n        return;\r\n    }\r\n    if (!isValidPathString(pathString)) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) +\r\n            'was an invalid path = \"' +\r\n            pathString +\r\n            '\". Paths must be non-empty strings and ' +\r\n            'can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\"');\r\n    }\r\n};\r\nvar validateRootPathString = function (fnName, argumentNumber, pathString, optional) {\r\n    if (pathString) {\r\n        // Allow '/.info/' at the beginning.\r\n        pathString = pathString.replace(/^\\/*\\.info(\\/|$)/, '/');\r\n    }\r\n    validatePathString(fnName, argumentNumber, pathString, optional);\r\n};\r\nvar validateWritablePath = function (fnName, path) {\r\n    if (path.getFront() === '.info') {\r\n        throw new Error(fnName + \" failed = Can't modify data under /.info/\");\r\n    }\r\n};\r\nvar validateUrl = function (fnName, argumentNumber, parsedUrl) {\r\n    // TODO = Validate server better.\r\n    var pathString = parsedUrl.path.toString();\r\n    if (!(typeof parsedUrl.repoInfo.host === 'string') ||\r\n        parsedUrl.repoInfo.host.length === 0 ||\r\n        (!isValidKey(parsedUrl.repoInfo.namespace) &&\r\n            parsedUrl.repoInfo.host.split(':')[0] !== 'localhost') ||\r\n        (pathString.length !== 0 && !isValidRootPathString(pathString))) {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, false) +\r\n            'must be a valid firebase URL and ' +\r\n            'the path can\\'t contain \".\", \"#\", \"$\", \"[\", or \"]\".');\r\n    }\r\n};\r\nvar validateBoolean = function (fnName, argumentNumber, bool, optional) {\r\n    if (optional && bool === undefined) {\r\n        return;\r\n    }\r\n    if (typeof bool !== 'boolean') {\r\n        throw new Error(errorPrefix(fnName, argumentNumber, optional) + 'must be a boolean.');\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n */\r\nvar OnDisconnect = /** @class */ (function () {\r\n    /**\r\n     * @param {!Repo} repo_\r\n     * @param {!Path} path_\r\n     */\r\n    function OnDisconnect(repo_, path_) {\r\n        this.repo_ = repo_;\r\n        this.path_ = path_;\r\n    }\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.cancel = function (onComplete) {\r\n        validateArgCount('OnDisconnect.cancel', 0, 1, arguments.length);\r\n        validateCallback('OnDisconnect.cancel', 1, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectCancel(this.path_, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.remove = function (onComplete) {\r\n        validateArgCount('OnDisconnect.remove', 0, 1, arguments.length);\r\n        validateWritablePath('OnDisconnect.remove', this.path_);\r\n        validateCallback('OnDisconnect.remove', 1, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.set = function (value, onComplete) {\r\n        validateArgCount('OnDisconnect.set', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.set', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.set', 1, value, this.path_, false);\r\n        validateCallback('OnDisconnect.set', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSet(this.path_, value, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} value\r\n     * @param {number|string|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.setWithPriority = function (value, priority, onComplete) {\r\n        validateArgCount('OnDisconnect.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('OnDisconnect.setWithPriority', this.path_);\r\n        validateFirebaseDataArg('OnDisconnect.setWithPriority', 1, value, this.path_, false);\r\n        validatePriority('OnDisconnect.setWithPriority', 2, priority, false);\r\n        validateCallback('OnDisconnect.setWithPriority', 3, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectSetWithPriority(this.path_, value, priority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!firebase.Promise}\r\n     */\r\n    OnDisconnect.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('OnDisconnect.update', 1, 2, arguments.length);\r\n        validateWritablePath('OnDisconnect.update', this.path_);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to firebase.database.onDisconnect().update() is deprecated. Use set() if you want to overwrite the ' +\r\n                'existing data, or an Object with integer keys if you really do want to only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('OnDisconnect.update', 1, objectToMerge, this.path_, false);\r\n        validateCallback('OnDisconnect.update', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo_.onDisconnectUpdate(this.path_, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    return OnDisconnect;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar TransactionResult = /** @class */ (function () {\r\n    /**\r\n     * A type for the resolve value of Firebase.transaction.\r\n     * @constructor\r\n     * @dict\r\n     * @param {boolean} committed\r\n     * @param {DataSnapshot} snapshot\r\n     */\r\n    function TransactionResult(committed, snapshot) {\r\n        this.committed = committed;\r\n        this.snapshot = snapshot;\r\n    }\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    TransactionResult.prototype.toJSON = function () {\r\n        validateArgCount('TransactionResult.toJSON', 0, 1, arguments.length);\r\n        return { committed: this.committed, snapshot: this.snapshot.toJSON() };\r\n    };\r\n    return TransactionResult;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Fancy ID generator that creates 20-character string identifiers with the\r\n * following properties:\r\n *\r\n * 1. They're based on timestamp so that they sort *after* any existing ids.\r\n * 2. They contain 72-bits of random data after the timestamp so that IDs won't\r\n *    collide with other clients' IDs.\r\n * 3. They sort *lexicographically* (so the timestamp is converted to characters\r\n *    that will sort properly).\r\n * 4. They're monotonically increasing. Even if you generate more than one in\r\n *    the same timestamp, the latter ones will sort after the former ones. We do\r\n *    this by using the previous random bits but \"incrementing\" them by 1 (only\r\n *    in the case of a timestamp collision).\r\n */\r\nvar nextPushId = (function () {\r\n    // Modeled after base64 web-safe chars, but ordered by ASCII.\r\n    var PUSH_CHARS = '-0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ_abcdefghijklmnopqrstuvwxyz';\r\n    // Timestamp of last push, used to prevent local collisions if you push twice\r\n    // in one ms.\r\n    var lastPushTime = 0;\r\n    // We generate 72-bits of randomness which get turned into 12 characters and\r\n    // appended to the timestamp to prevent collisions with other clients. We\r\n    // store the last characters we generated because in the event of a collision,\r\n    // we'll use those same characters except \"incremented\" by one.\r\n    var lastRandChars = [];\r\n    return function (now) {\r\n        var duplicateTime = now === lastPushTime;\r\n        lastPushTime = now;\r\n        var i;\r\n        var timeStampChars = new Array(8);\r\n        for (i = 7; i >= 0; i--) {\r\n            timeStampChars[i] = PUSH_CHARS.charAt(now % 64);\r\n            // NOTE: Can't use << here because javascript will convert to int and lose\r\n            // the upper bits.\r\n            now = Math.floor(now / 64);\r\n        }\r\n        assert(now === 0, 'Cannot push at time == 0');\r\n        var id = timeStampChars.join('');\r\n        if (!duplicateTime) {\r\n            for (i = 0; i < 12; i++) {\r\n                lastRandChars[i] = Math.floor(Math.random() * 64);\r\n            }\r\n        }\r\n        else {\r\n            // If the timestamp hasn't changed since last push, use the same random\r\n            // number, except incremented by 1.\r\n            for (i = 11; i >= 0 && lastRandChars[i] === 63; i--) {\r\n                lastRandChars[i] = 0;\r\n            }\r\n            lastRandChars[i]++;\r\n        }\r\n        for (i = 0; i < 12; i++) {\r\n            id += PUSH_CHARS.charAt(lastRandChars[i]);\r\n        }\r\n        assert(id.length === 20, 'nextPushId: Length should be 20.');\r\n        return id;\r\n    };\r\n})();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @param {!string} name\r\n * @param {!Node} node\r\n * @constructor\r\n * @struct\r\n */\r\nvar NamedNode = /** @class */ (function () {\r\n    function NamedNode(name, node) {\r\n        this.name = name;\r\n        this.node = node;\r\n    }\r\n    /**\r\n     *\r\n     * @param {!string} name\r\n     * @param {!Node} node\r\n     * @return {NamedNode}\r\n     */\r\n    NamedNode.Wrap = function (name, node) {\r\n        return new NamedNode(name, node);\r\n    };\r\n    return NamedNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @constructor\r\n */\r\nvar Index = /** @class */ (function () {\r\n    function Index() {\r\n    }\r\n    /**\r\n     * @return {function(!NamedNode, !NamedNode):number} A standalone comparison function for\r\n     * this index\r\n     */\r\n    Index.prototype.getCompare = function () {\r\n        return this.compare.bind(this);\r\n    };\r\n    /**\r\n     * Given a before and after value for a node, determine if the indexed value has changed. Even if they are different,\r\n     * it's possible that the changes are isolated to parts of the snapshot that are not indexed.\r\n     *\r\n     * @param {!Node} oldNode\r\n     * @param {!Node} newNode\r\n     * @return {boolean} True if the portion of the snapshot being indexed changed between oldNode and newNode\r\n     */\r\n    Index.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        var oldWrapped = new NamedNode(MIN_NAME, oldNode);\r\n        var newWrapped = new NamedNode(MIN_NAME, newNode);\r\n        return this.compare(oldWrapped, newWrapped) !== 0;\r\n    };\r\n    /**\r\n     * @return {!NamedNode} a node wrapper that will sort equal to or less than\r\n     * any other node wrapper, using this index\r\n     */\r\n    Index.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    return Index;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __EMPTY_NODE;\r\nvar KeyIndex = /** @class */ (function (_super) {\r\n    __extends(KeyIndex, _super);\r\n    function KeyIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    Object.defineProperty(KeyIndex, \"__EMPTY_NODE\", {\r\n        get: function () {\r\n            return __EMPTY_NODE;\r\n        },\r\n        set: function (val) {\r\n            __EMPTY_NODE = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.compare = function (a, b) {\r\n        return nameCompare(a.name, b.name);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.isDefinedOn = function (node) {\r\n        // We could probably return true here (since every node has a key), but it's never called\r\n        // so just leaving unimplemented for now.\r\n        throw assertionError('KeyIndex.isDefinedOn not expected to be called.');\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return false; // The key for a node never changes.\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    KeyIndex.prototype.maxPost = function () {\r\n        // TODO: This should really be created once and cached in a static property, but\r\n        // NamedNode isn't defined yet, so I can't use it in a static.  Bleh.\r\n        return new NamedNode(MAX_NAME, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    KeyIndex.prototype.makePost = function (indexValue, name) {\r\n        assert(typeof indexValue === 'string', 'KeyIndex indexValue must always be a string.');\r\n        // We just use empty node, but it'll never be compared, since our comparator only looks at name.\r\n        return new NamedNode(indexValue, __EMPTY_NODE);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    KeyIndex.prototype.toString = function () {\r\n        return '.key';\r\n    };\r\n    return KeyIndex;\r\n}(Index));\r\nvar KEY_INDEX = new KeyIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar MAX_NODE;\r\nfunction setMaxNode(val) {\r\n    MAX_NODE = val;\r\n}\r\n/**\r\n * @param {(!string|!number)} priority\r\n * @return {!string}\r\n */\r\nvar priorityHashText = function (priority) {\r\n    if (typeof priority === 'number') {\r\n        return 'number:' + doubleToIEEE754String(priority);\r\n    }\r\n    else {\r\n        return 'string:' + priority;\r\n    }\r\n};\r\n/**\r\n * Validates that a priority snapshot Node is valid.\r\n *\r\n * @param {!Node} priorityNode\r\n */\r\nvar validatePriorityNode = function (priorityNode) {\r\n    if (priorityNode.isLeafNode()) {\r\n        var val = priorityNode.val();\r\n        assert(typeof val === 'string' ||\r\n            typeof val === 'number' ||\r\n            (typeof val === 'object' && contains(val, '.sv')), 'Priority must be a string or number.');\r\n    }\r\n    else {\r\n        assert(priorityNode === MAX_NODE || priorityNode.isEmpty(), 'priority of unexpected type.');\r\n    }\r\n    // Don't call getPriority() on MAX_NODE to avoid hitting assertion.\r\n    assert(priorityNode === MAX_NODE || priorityNode.getPriority().isEmpty(), \"Priority nodes can't have a priority of their own.\");\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __childrenNodeConstructor;\r\n/**\r\n * LeafNode is a class for storing leaf nodes in a DataSnapshot.  It\r\n * implements Node and stores the value of the node (a string,\r\n * number, or boolean) accessible via getValue().\r\n */\r\nvar LeafNode = /** @class */ (function () {\r\n    /**\r\n     * @implements {Node}\r\n     * @param {!(string|number|boolean|Object)} value_ The value to store in this leaf node.\r\n     *                                         The object type is possible in the event of a deferred value\r\n     * @param {!Node=} priorityNode_ The priority of this node.\r\n     */\r\n    function LeafNode(value_, priorityNode_) {\r\n        if (priorityNode_ === void 0) { priorityNode_ = LeafNode.__childrenNodeConstructor.EMPTY_NODE; }\r\n        this.value_ = value_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.lazyHash_ = null;\r\n        assert(this.value_ !== undefined && this.value_ !== null, \"LeafNode shouldn't be created with null/undefined value.\");\r\n        validatePriorityNode(this.priorityNode_);\r\n    }\r\n    Object.defineProperty(LeafNode, \"__childrenNodeConstructor\", {\r\n        get: function () {\r\n            return __childrenNodeConstructor;\r\n        },\r\n        set: function (val) {\r\n            __childrenNodeConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isLeafNode = function () {\r\n        return true;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPriority = function () {\r\n        return this.priorityNode_;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updatePriority = function (newPriorityNode) {\r\n        return new LeafNode(this.value_, newPriorityNode);\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getChild = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else if (path.getFront() === '.priority') {\r\n            return this.priorityNode_;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.hasChild = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.getPredecessorChildName = function (childName, childNode) {\r\n        return null;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else if (newChildNode.isEmpty() && childName !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            return LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateImmediateChild(childName, newChildNode).updatePriority(this.priorityNode_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else if (newChildNode.isEmpty() && front !== '.priority') {\r\n            return this;\r\n        }\r\n        else {\r\n            assert(front !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            return this.updateImmediateChild(front, LeafNode.__childrenNodeConstructor.EMPTY_NODE.updateChild(path.popFront(), newChildNode));\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.numChildren = function () {\r\n        return 0;\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.forEachChild = function (index, action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.val = function (exportFormat) {\r\n        if (exportFormat && !this.getPriority().isEmpty()) {\r\n            return {\r\n                '.value': this.getValue(),\r\n                '.priority': this.getPriority().val()\r\n            };\r\n        }\r\n        else {\r\n            return this.getValue();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    LeafNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash = '';\r\n            if (!this.priorityNode_.isEmpty()) {\r\n                toHash +=\r\n                    'priority:' +\r\n                        priorityHashText(this.priorityNode_.val()) +\r\n                        ':';\r\n            }\r\n            var type = typeof this.value_;\r\n            toHash += type + ':';\r\n            if (type === 'number') {\r\n                toHash += doubleToIEEE754String(this.value_);\r\n            }\r\n            else {\r\n                toHash += this.value_;\r\n            }\r\n            this.lazyHash_ = sha1(toHash);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /**\r\n     * Returns the value of the leaf node.\r\n     * @return {Object|string|number|boolean} The value of the node.\r\n     */\r\n    LeafNode.prototype.getValue = function () {\r\n        return this.value_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.compareTo = function (other) {\r\n        if (other === LeafNode.__childrenNodeConstructor.EMPTY_NODE) {\r\n            return 1;\r\n        }\r\n        else if (other instanceof LeafNode.__childrenNodeConstructor) {\r\n            return -1;\r\n        }\r\n        else {\r\n            assert(other.isLeafNode(), 'Unknown node type');\r\n            return this.compareToLeafNode_(other);\r\n        }\r\n    };\r\n    /**\r\n     * Comparison specifically for two leaf nodes\r\n     * @param {!LeafNode} otherLeaf\r\n     * @return {!number}\r\n     * @private\r\n     */\r\n    LeafNode.prototype.compareToLeafNode_ = function (otherLeaf) {\r\n        var otherLeafType = typeof otherLeaf.value_;\r\n        var thisLeafType = typeof this.value_;\r\n        var otherIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(otherLeafType);\r\n        var thisIndex = LeafNode.VALUE_TYPE_ORDER.indexOf(thisLeafType);\r\n        assert(otherIndex >= 0, 'Unknown leaf type: ' + otherLeafType);\r\n        assert(thisIndex >= 0, 'Unknown leaf type: ' + thisLeafType);\r\n        if (otherIndex === thisIndex) {\r\n            // Same type, compare values\r\n            if (thisLeafType === 'object') {\r\n                // Deferred value nodes are all equal, but we should also never get to this point...\r\n                return 0;\r\n            }\r\n            else {\r\n                // Note that this works because true > false, all others are number or string comparisons\r\n                if (this.value_ < otherLeaf.value_) {\r\n                    return -1;\r\n                }\r\n                else if (this.value_ === otherLeaf.value_) {\r\n                    return 0;\r\n                }\r\n                else {\r\n                    return 1;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return thisIndex - otherIndex;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.withIndex = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.isIndexed = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LeafNode.prototype.equals = function (other) {\r\n        /**\r\n         * @inheritDoc\r\n         */\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            var otherLeaf = other;\r\n            return (this.value_ === otherLeaf.value_ &&\r\n                this.priorityNode_.equals(otherLeaf.priorityNode_));\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * The sort order for comparing leaf nodes of different types. If two leaf nodes have\r\n     * the same type, the comparison falls back to their value\r\n     * @type {Array.<!string>}\r\n     * @const\r\n     */\r\n    LeafNode.VALUE_TYPE_ORDER = ['object', 'boolean', 'number', 'string'];\r\n    return LeafNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar nodeFromJSON;\r\nvar MAX_NODE$1;\r\nfunction setNodeFromJSON(val) {\r\n    nodeFromJSON = val;\r\n}\r\nfunction setMaxNode$1(val) {\r\n    MAX_NODE$1 = val;\r\n}\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar PriorityIndex = /** @class */ (function (_super) {\r\n    __extends(PriorityIndex, _super);\r\n    function PriorityIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.compare = function (a, b) {\r\n        var aPriority = a.node.getPriority();\r\n        var bPriority = b.node.getPriority();\r\n        var indexCmp = aPriority.compareTo(bPriority);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getPriority().isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.getPriority().equals(newNode.getPriority());\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PriorityIndex.prototype.maxPost = function () {\r\n        return new NamedNode(MAX_NAME, new LeafNode('[PRIORITY-POST]', MAX_NODE$1));\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    PriorityIndex.prototype.makePost = function (indexValue, name) {\r\n        var priorityNode = nodeFromJSON(indexValue);\r\n        return new NamedNode(name, new LeafNode('[PRIORITY-POST]', priorityNode));\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    PriorityIndex.prototype.toString = function () {\r\n        return '.priority';\r\n    };\r\n    return PriorityIndex;\r\n}(Index));\r\nvar PRIORITY_INDEX = new PriorityIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An iterator over an LLRBNode.\r\n */\r\nvar SortedMapIterator = /** @class */ (function () {\r\n    /**\r\n     * @template K, V, T\r\n     * @param {LLRBNode|LLRBEmptyNode} node Node to iterate.\r\n     * @param {?K} startKey\r\n     * @param {function(K, K): number} comparator\r\n     * @param {boolean} isReverse_ Whether or not to iterate in reverse\r\n     * @param {(function(K, V):T)=} resultGenerator_\r\n     */\r\n    function SortedMapIterator(node, startKey, comparator, isReverse_, resultGenerator_) {\r\n        if (resultGenerator_ === void 0) { resultGenerator_ = null; }\r\n        this.isReverse_ = isReverse_;\r\n        this.resultGenerator_ = resultGenerator_;\r\n        /** @private\r\n         * @type {Array.<!LLRBNode>}\r\n         */\r\n        this.nodeStack_ = [];\r\n        var cmp = 1;\r\n        while (!node.isEmpty()) {\r\n            node = node;\r\n            cmp = startKey ? comparator(node.key, startKey) : 1;\r\n            // flip the comparison if we're going in reverse\r\n            if (isReverse_) {\r\n                cmp *= -1;\r\n            }\r\n            if (cmp < 0) {\r\n                // This node is less than our start key. ignore it\r\n                if (this.isReverse_) {\r\n                    node = node.left;\r\n                }\r\n                else {\r\n                    node = node.right;\r\n                }\r\n            }\r\n            else if (cmp === 0) {\r\n                // This node is exactly equal to our start key. Push it on the stack, but stop iterating;\r\n                this.nodeStack_.push(node);\r\n                break;\r\n            }\r\n            else {\r\n                // This node is greater than our start key, add it to the stack and move to the next one\r\n                this.nodeStack_.push(node);\r\n                if (this.isReverse_) {\r\n                    node = node.right;\r\n                }\r\n                else {\r\n                    node = node.left;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    SortedMapIterator.prototype.getNext = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_.pop();\r\n        var result;\r\n        if (this.resultGenerator_) {\r\n            result = this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            result = { key: node.key, value: node.value };\r\n        }\r\n        if (this.isReverse_) {\r\n            node = node.left;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.right;\r\n            }\r\n        }\r\n        else {\r\n            node = node.right;\r\n            while (!node.isEmpty()) {\r\n                this.nodeStack_.push(node);\r\n                node = node.left;\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n    SortedMapIterator.prototype.hasNext = function () {\r\n        return this.nodeStack_.length > 0;\r\n    };\r\n    SortedMapIterator.prototype.peek = function () {\r\n        if (this.nodeStack_.length === 0) {\r\n            return null;\r\n        }\r\n        var node = this.nodeStack_[this.nodeStack_.length - 1];\r\n        if (this.resultGenerator_) {\r\n            return this.resultGenerator_(node.key, node.value);\r\n        }\r\n        else {\r\n            return { key: node.key, value: node.value };\r\n        }\r\n    };\r\n    return SortedMapIterator;\r\n}());\r\n/**\r\n * Represents a node in a Left-leaning Red-Black tree.\r\n */\r\nvar LLRBNode = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {!K} key Key associated with this node.\r\n     * @param {!V} value Value associated with this node.\r\n     * @param {?boolean} color Whether this node is red.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} left Left child.\r\n     * @param {?(LLRBNode|LLRBEmptyNode)=} right Right child.\r\n     */\r\n    function LLRBNode(key, value, color, left, right) {\r\n        this.key = key;\r\n        this.value = value;\r\n        this.color = color != null ? color : LLRBNode.RED;\r\n        this.left =\r\n            left != null ? left : SortedMap.EMPTY_NODE;\r\n        this.right =\r\n            right != null ? right : SortedMap.EMPTY_NODE;\r\n    }\r\n    /**\r\n     * Returns a copy of the current node, optionally replacing pieces of it.\r\n     *\r\n     * @param {?K} key New key for the node, or null.\r\n     * @param {?V} value New value for the node, or null.\r\n     * @param {?boolean} color New color for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} left New left child for the node, or null.\r\n     * @param {?LLRBNode|LLRBEmptyNode} right New right child for the node, or null.\r\n     * @return {!LLRBNode} The node copy.\r\n     */\r\n    LLRBNode.prototype.copy = function (key, value, color, left, right) {\r\n        return new LLRBNode(key != null ? key : this.key, value != null ? value : this.value, color != null ? color : this.color, left != null ? left : this.left, right != null ? right : this.right);\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBNode.prototype.count = function () {\r\n        return this.left.count() + 1 + this.right.count();\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     *   node.  If it returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    LLRBNode.prototype.inorderTraversal = function (action) {\r\n        return (this.left.inorderTraversal(action) ||\r\n            !!action(this.key, this.value) ||\r\n            this.right.inorderTraversal(action));\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {*} True if traversal was aborted.\r\n     */\r\n    LLRBNode.prototype.reverseTraversal = function (action) {\r\n        return (this.right.reverseTraversal(action) ||\r\n            action(this.key, this.value) ||\r\n            this.left.reverseTraversal(action));\r\n    };\r\n    /**\r\n     * @return {!Object} The minimum node in the tree.\r\n     * @private\r\n     */\r\n    LLRBNode.prototype.min_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            return this.left.min_();\r\n        }\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.minKey = function () {\r\n        return this.min_().key;\r\n    };\r\n    /**\r\n     * @return {!K} The maximum key in the tree.\r\n     */\r\n    LLRBNode.prototype.maxKey = function () {\r\n        if (this.right.isEmpty()) {\r\n            return this.key;\r\n        }\r\n        else {\r\n            return this.right.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Object} key Key to insert.\r\n     * @param {!Object} value Value to insert.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with the key/value added.\r\n     */\r\n    LLRBNode.prototype.insert = function (key, value, comparator) {\r\n        var n = this;\r\n        var cmp = comparator(key, n.key);\r\n        if (cmp < 0) {\r\n            n = n.copy(null, null, null, n.left.insert(key, value, comparator), null);\r\n        }\r\n        else if (cmp === 0) {\r\n            n = n.copy(null, value, null, null, null);\r\n        }\r\n        else {\r\n            n = n.copy(null, null, null, null, n.right.insert(key, value, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the minimum key removed.\r\n     */\r\n    LLRBNode.prototype.removeMin_ = function () {\r\n        if (this.left.isEmpty()) {\r\n            return SortedMap.EMPTY_NODE;\r\n        }\r\n        var n = this;\r\n        if (!n.left.isRed_() && !n.left.left.isRed_()) {\r\n            n = n.moveRedLeft_();\r\n        }\r\n        n = n.copy(null, null, null, n.left.removeMin_(), null);\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @param {!Object} key The key of the item to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode|LLRBEmptyNode} New tree, with the specified item removed.\r\n     */\r\n    LLRBNode.prototype.remove = function (key, comparator) {\r\n        var n, smallest;\r\n        n = this;\r\n        if (comparator(key, n.key) < 0) {\r\n            if (!n.left.isEmpty() && !n.left.isRed_() && !n.left.left.isRed_()) {\r\n                n = n.moveRedLeft_();\r\n            }\r\n            n = n.copy(null, null, null, n.left.remove(key, comparator), null);\r\n        }\r\n        else {\r\n            if (n.left.isRed_()) {\r\n                n = n.rotateRight_();\r\n            }\r\n            if (!n.right.isEmpty() && !n.right.isRed_() && !n.right.left.isRed_()) {\r\n                n = n.moveRedRight_();\r\n            }\r\n            if (comparator(key, n.key) === 0) {\r\n                if (n.right.isEmpty()) {\r\n                    return SortedMap.EMPTY_NODE;\r\n                }\r\n                else {\r\n                    smallest = n.right.min_();\r\n                    n = n.copy(smallest.key, smallest.value, null, null, n.right.removeMin_());\r\n                }\r\n            }\r\n            n = n.copy(null, null, null, null, n.right.remove(key, comparator));\r\n        }\r\n        return n.fixUp_();\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this is a RED node.\r\n     */\r\n    LLRBNode.prototype.isRed_ = function () {\r\n        return this.color;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree after performing any needed rotations.\r\n     */\r\n    LLRBNode.prototype.fixUp_ = function () {\r\n        var n = this;\r\n        if (n.right.isRed_() && !n.left.isRed_()) {\r\n            n = n.rotateLeft_();\r\n        }\r\n        if (n.left.isRed_() && n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n        }\r\n        if (n.left.isRed_() && n.right.isRed_()) {\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedLeft.\r\n     */\r\n    LLRBNode.prototype.moveRedLeft_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.right.left.isRed_()) {\r\n            n = n.copy(null, null, null, null, n.right.rotateRight_());\r\n            n = n.rotateLeft_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after moveRedRight.\r\n     */\r\n    LLRBNode.prototype.moveRedRight_ = function () {\r\n        var n = this.colorFlip_();\r\n        if (n.left.left.isRed_()) {\r\n            n = n.rotateRight_();\r\n            n = n.colorFlip_();\r\n        }\r\n        return n;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateLeft.\r\n     */\r\n    LLRBNode.prototype.rotateLeft_ = function () {\r\n        var nl = this.copy(null, null, LLRBNode.RED, null, this.right.left);\r\n        return this.right.copy(null, null, this.color, nl, null);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after rotateRight.\r\n     */\r\n    LLRBNode.prototype.rotateRight_ = function () {\r\n        var nr = this.copy(null, null, LLRBNode.RED, this.left.right, null);\r\n        return this.left.copy(null, null, this.color, null, nr);\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {!LLRBNode} New tree, after colorFlip.\r\n     */\r\n    LLRBNode.prototype.colorFlip_ = function () {\r\n        var left = this.left.copy(null, null, !this.left.color, null, null);\r\n        var right = this.right.copy(null, null, !this.right.color, null, null);\r\n        return this.copy(null, null, !this.color, left, right);\r\n    };\r\n    /**\r\n     * For testing.\r\n     *\r\n     * @private\r\n     * @return {boolean} True if all is well.\r\n     */\r\n    LLRBNode.prototype.checkMaxDepth_ = function () {\r\n        var blackDepth = this.check_();\r\n        return Math.pow(2.0, blackDepth) <= this.count() + 1;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBNode.prototype.check_ = function () {\r\n        if (this.isRed_() && this.left.isRed_()) {\r\n            throw new Error('Red node has red child(' + this.key + ',' + this.value + ')');\r\n        }\r\n        if (this.right.isRed_()) {\r\n            throw new Error('Right child of (' + this.key + ',' + this.value + ') is red');\r\n        }\r\n        var blackDepth = this.left.check_();\r\n        if (blackDepth !== this.right.check_()) {\r\n            throw new Error('Black depths differ');\r\n        }\r\n        else {\r\n            return blackDepth + (this.isRed_() ? 0 : 1);\r\n        }\r\n    };\r\n    LLRBNode.RED = true;\r\n    LLRBNode.BLACK = false;\r\n    return LLRBNode;\r\n}());\r\n/**\r\n * Represents an empty node (a leaf node in the Red-Black Tree).\r\n */\r\nvar LLRBEmptyNode = /** @class */ (function () {\r\n    function LLRBEmptyNode() {\r\n    }\r\n    /**\r\n     * Returns a copy of the current node.\r\n     *\r\n     * @return {!LLRBEmptyNode} The node copy.\r\n     */\r\n    LLRBEmptyNode.prototype.copy = function (key, value, color, left, right) {\r\n        return this;\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key/value added.\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBNode} New tree, with item added.\r\n     */\r\n    LLRBEmptyNode.prototype.insert = function (key, value, comparator) {\r\n        return new LLRBNode(key, value, null);\r\n    };\r\n    /**\r\n     * Returns a copy of the tree, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @param {Comparator} comparator Comparator.\r\n     * @return {!LLRBEmptyNode} New tree, with item removed.\r\n     */\r\n    LLRBEmptyNode.prototype.remove = function (key, comparator) {\r\n        return this;\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the tree.\r\n     */\r\n    LLRBEmptyNode.prototype.count = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @return {boolean} True if the tree is empty.\r\n     */\r\n    LLRBEmptyNode.prototype.isEmpty = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * Traverses the tree in key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.inorderTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * Traverses the tree in reverse key order and calls the specified action function\r\n     * for each node.\r\n     *\r\n     * @param {function(!K, !V)} action Callback function to be called for each\r\n     * node.  If it returns true, traversal is aborted.\r\n     * @return {boolean} True if traversal was aborted.\r\n     */\r\n    LLRBEmptyNode.prototype.reverseTraversal = function (action) {\r\n        return false;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.minKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {null}\r\n     */\r\n    LLRBEmptyNode.prototype.maxKey = function () {\r\n        return null;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {number} Not sure what this returns exactly. :-).\r\n     */\r\n    LLRBEmptyNode.prototype.check_ = function () {\r\n        return 0;\r\n    };\r\n    /**\r\n     * @private\r\n     * @return {boolean} Whether this node is red.\r\n     */\r\n    LLRBEmptyNode.prototype.isRed_ = function () {\r\n        return false;\r\n    };\r\n    return LLRBEmptyNode;\r\n}());\r\n/**\r\n * An immutable sorted map implementation, based on a Left-leaning Red-Black\r\n * tree.\r\n */\r\nvar SortedMap = /** @class */ (function () {\r\n    /**\r\n     * @template K, V\r\n     * @param {function(K, K):number} comparator_ Key comparator.\r\n     * @param {LLRBNode=} root_ (Optional) Root node for the map.\r\n     */\r\n    function SortedMap(comparator_, root_) {\r\n        if (root_ === void 0) { root_ = SortedMap.EMPTY_NODE; }\r\n        this.comparator_ = comparator_;\r\n        this.root_ = root_;\r\n    }\r\n    /**\r\n     * Returns a copy of the map, with the specified key/value added or replaced.\r\n     * (TODO: We should perhaps rename this method to 'put')\r\n     *\r\n     * @param {!K} key Key to be added.\r\n     * @param {!V} value Value to be added.\r\n     * @return {!SortedMap.<K, V>} New map, with item added.\r\n     */\r\n    SortedMap.prototype.insert = function (key, value) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .insert(key, value, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns a copy of the map, with the specified key removed.\r\n     *\r\n     * @param {!K} key The key to remove.\r\n     * @return {!SortedMap.<K, V>} New map, with item removed.\r\n     */\r\n    SortedMap.prototype.remove = function (key) {\r\n        return new SortedMap(this.comparator_, this.root_\r\n            .remove(key, this.comparator_)\r\n            .copy(null, null, LLRBNode.BLACK, null, null));\r\n    };\r\n    /**\r\n     * Returns the value of the node with the given key, or null.\r\n     *\r\n     * @param {!K} key The key to look up.\r\n     * @return {?V} The value of the node with the given key, or null if the\r\n     * key doesn't exist.\r\n     */\r\n    SortedMap.prototype.get = function (key) {\r\n        var cmp;\r\n        var node = this.root_;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                return node.value;\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                node = node.right;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Returns the key of the item *before* the specified key, or null if key is the first item.\r\n     * @param {K} key The key to find the predecessor of\r\n     * @return {?K} The predecessor key.\r\n     */\r\n    SortedMap.prototype.getPredecessorKey = function (key) {\r\n        var cmp, node = this.root_, rightParent = null;\r\n        while (!node.isEmpty()) {\r\n            cmp = this.comparator_(key, node.key);\r\n            if (cmp === 0) {\r\n                if (!node.left.isEmpty()) {\r\n                    node = node.left;\r\n                    while (!node.right.isEmpty()) {\r\n                        node = node.right;\r\n                    }\r\n                    return node.key;\r\n                }\r\n                else if (rightParent) {\r\n                    return rightParent.key;\r\n                }\r\n                else {\r\n                    return null; // first item.\r\n                }\r\n            }\r\n            else if (cmp < 0) {\r\n                node = node.left;\r\n            }\r\n            else if (cmp > 0) {\r\n                rightParent = node;\r\n                node = node.right;\r\n            }\r\n        }\r\n        throw new Error('Attempted to find predecessor key for a nonexistent key.  What gives?');\r\n    };\r\n    /**\r\n     * @return {boolean} True if the map is empty.\r\n     */\r\n    SortedMap.prototype.isEmpty = function () {\r\n        return this.root_.isEmpty();\r\n    };\r\n    /**\r\n     * @return {number} The total number of nodes in the map.\r\n     */\r\n    SortedMap.prototype.count = function () {\r\n        return this.root_.count();\r\n    };\r\n    /**\r\n     * @return {?K} The minimum key in the map.\r\n     */\r\n    SortedMap.prototype.minKey = function () {\r\n        return this.root_.minKey();\r\n    };\r\n    /**\r\n     * @return {?K} The maximum key in the map.\r\n     */\r\n    SortedMap.prototype.maxKey = function () {\r\n        return this.root_.maxKey();\r\n    };\r\n    /**\r\n     * Traverses the map in key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!K, !V):*} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} The first truthy value returned by action, or the last falsey\r\n     *   value returned by action\r\n     */\r\n    SortedMap.prototype.inorderTraversal = function (action) {\r\n        return this.root_.inorderTraversal(action);\r\n    };\r\n    /**\r\n     * Traverses the map in reverse key order and calls the specified action function\r\n     * for each key/value pair.\r\n     *\r\n     * @param {function(!Object, !Object)} action Callback function to be called\r\n     * for each key/value pair.  If action returns true, traversal is aborted.\r\n     * @return {*} True if the traversal was aborted.\r\n     */\r\n    SortedMap.prototype.reverseTraversal = function (action) {\r\n        return this.root_.reverseTraversal(action);\r\n    };\r\n    /**\r\n     * Returns an iterator over the SortedMap.\r\n     * @template T\r\n     * @param {(function(K, V):T)=} resultGenerator\r\n     * @return {SortedMapIterator.<K, V, T>} The iterator.\r\n     */\r\n    SortedMap.prototype.getIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, false, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIteratorFrom = function (key, resultGenerator) {\r\n        return new SortedMapIterator(this.root_, key, this.comparator_, true, resultGenerator);\r\n    };\r\n    SortedMap.prototype.getReverseIterator = function (resultGenerator) {\r\n        return new SortedMapIterator(this.root_, null, this.comparator_, true, resultGenerator);\r\n    };\r\n    /**\r\n     * Always use the same empty node, to reduce memory.\r\n     * @const\r\n     */\r\n    SortedMap.EMPTY_NODE = new LLRBEmptyNode();\r\n    return SortedMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar LOG_2 = Math.log(2);\r\n/**\r\n * @constructor\r\n */\r\nvar Base12Num = /** @class */ (function () {\r\n    /**\r\n     * @param {number} length\r\n     */\r\n    function Base12Num(length) {\r\n        var logBase2 = function (num) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            return parseInt((Math.log(num) / LOG_2), 10);\r\n        };\r\n        var bitMask = function (bits) { return parseInt(Array(bits + 1).join('1'), 2); };\r\n        this.count = logBase2(length + 1);\r\n        this.current_ = this.count - 1;\r\n        var mask = bitMask(this.count);\r\n        this.bits_ = (length + 1) & mask;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    Base12Num.prototype.nextBitIsOne = function () {\r\n        //noinspection JSBitwiseOperatorUsage\r\n        var result = !(this.bits_ & (0x1 << this.current_));\r\n        this.current_--;\r\n        return result;\r\n    };\r\n    return Base12Num;\r\n}());\r\n/**\r\n * Takes a list of child nodes and constructs a SortedSet using the given comparison\r\n * function\r\n *\r\n * Uses the algorithm described in the paper linked here:\r\n * http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.46.1458\r\n *\r\n * @template K, V\r\n * @param {Array.<!NamedNode>} childList Unsorted list of children\r\n * @param {function(!NamedNode, !NamedNode):number} cmp The comparison method to be used\r\n * @param {(function(NamedNode):K)=} keyFn An optional function to extract K from a node wrapper, if K's\r\n *                                                        type is not NamedNode\r\n * @param {(function(K, K):number)=} mapSortFn An optional override for comparator used by the generated sorted map\r\n * @return {SortedMap.<K, V>}\r\n */\r\nvar buildChildSet = function (childList, cmp, keyFn, mapSortFn) {\r\n    childList.sort(cmp);\r\n    var buildBalancedTree = function (low, high) {\r\n        var length = high - low;\r\n        var namedNode;\r\n        var key;\r\n        if (length === 0) {\r\n            return null;\r\n        }\r\n        else if (length === 1) {\r\n            namedNode = childList[low];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, null, null);\r\n        }\r\n        else {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var middle = parseInt((length / 2), 10) + low;\r\n            var left = buildBalancedTree(low, middle);\r\n            var right = buildBalancedTree(middle + 1, high);\r\n            namedNode = childList[middle];\r\n            key = keyFn ? keyFn(namedNode) : namedNode;\r\n            return new LLRBNode(key, namedNode.node, LLRBNode.BLACK, left, right);\r\n        }\r\n    };\r\n    var buildFrom12Array = function (base12) {\r\n        var node = null;\r\n        var root = null;\r\n        var index = childList.length;\r\n        var buildPennant = function (chunkSize, color) {\r\n            var low = index - chunkSize;\r\n            var high = index;\r\n            index -= chunkSize;\r\n            var childTree = buildBalancedTree(low + 1, high);\r\n            var namedNode = childList[low];\r\n            var key = keyFn ? keyFn(namedNode) : namedNode;\r\n            attachPennant(new LLRBNode(key, namedNode.node, color, null, childTree));\r\n        };\r\n        var attachPennant = function (pennant) {\r\n            if (node) {\r\n                node.left = pennant;\r\n                node = pennant;\r\n            }\r\n            else {\r\n                root = pennant;\r\n                node = pennant;\r\n            }\r\n        };\r\n        for (var i = 0; i < base12.count; ++i) {\r\n            var isOne = base12.nextBitIsOne();\r\n            // The number of nodes taken in each slice is 2^(arr.length - (i + 1))\r\n            var chunkSize = Math.pow(2, base12.count - (i + 1));\r\n            if (isOne) {\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n            }\r\n            else {\r\n                // current == 2\r\n                buildPennant(chunkSize, LLRBNode.BLACK);\r\n                buildPennant(chunkSize, LLRBNode.RED);\r\n            }\r\n        }\r\n        return root;\r\n    };\r\n    var base12 = new Base12Num(childList.length);\r\n    var root = buildFrom12Array(base12);\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    return new SortedMap(mapSortFn || cmp, root);\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar _defaultIndexMap;\r\nvar fallbackObject = {};\r\nvar IndexMap = /** @class */ (function () {\r\n    function IndexMap(indexes_, indexSet_) {\r\n        this.indexes_ = indexes_;\r\n        this.indexSet_ = indexSet_;\r\n    }\r\n    Object.defineProperty(IndexMap, \"Default\", {\r\n        /**\r\n         * The default IndexMap for nodes without a priority\r\n         */\r\n        get: function () {\r\n            assert(fallbackObject && PRIORITY_INDEX, 'ChildrenNode.ts has not been loaded');\r\n            _defaultIndexMap =\r\n                _defaultIndexMap ||\r\n                    new IndexMap({ '.priority': fallbackObject }, { '.priority': PRIORITY_INDEX });\r\n            return _defaultIndexMap;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    IndexMap.prototype.get = function (indexKey) {\r\n        var sortedMap = safeGet(this.indexes_, indexKey);\r\n        if (!sortedMap) {\r\n            throw new Error('No index defined for ' + indexKey);\r\n        }\r\n        if (sortedMap instanceof SortedMap) {\r\n            return sortedMap;\r\n        }\r\n        else {\r\n            // The index exists, but it falls back to just name comparison. Return null so that the calling code uses the\r\n            // regular child map\r\n            return null;\r\n        }\r\n    };\r\n    IndexMap.prototype.hasIndex = function (indexDefinition) {\r\n        return contains(this.indexSet_, indexDefinition.toString());\r\n    };\r\n    IndexMap.prototype.addIndex = function (indexDefinition, existingChildren) {\r\n        assert(indexDefinition !== KEY_INDEX, \"KeyIndex always exists and isn't meant to be added to the IndexMap.\");\r\n        var childList = [];\r\n        var sawIndexedValue = false;\r\n        var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n        var next = iter.getNext();\r\n        while (next) {\r\n            sawIndexedValue =\r\n                sawIndexedValue || indexDefinition.isDefinedOn(next.node);\r\n            childList.push(next);\r\n            next = iter.getNext();\r\n        }\r\n        var newIndex;\r\n        if (sawIndexedValue) {\r\n            newIndex = buildChildSet(childList, indexDefinition.getCompare());\r\n        }\r\n        else {\r\n            newIndex = fallbackObject;\r\n        }\r\n        var indexName = indexDefinition.toString();\r\n        var newIndexSet = __assign({}, this.indexSet_);\r\n        newIndexSet[indexName] = indexDefinition;\r\n        var newIndexes = __assign({}, this.indexes_);\r\n        newIndexes[indexName] = newIndex;\r\n        return new IndexMap(newIndexes, newIndexSet);\r\n    };\r\n    /**\r\n     * Ensure that this node is properly tracked in any indexes that we're maintaining\r\n     */\r\n    IndexMap.prototype.addToIndexes = function (namedNode, existingChildren) {\r\n        var _this = this;\r\n        var newIndexes = map(this.indexes_, function (indexedChildren, indexName) {\r\n            var index = safeGet(_this.indexSet_, indexName);\r\n            assert(index, 'Missing index implementation for ' + indexName);\r\n            if (indexedChildren === fallbackObject) {\r\n                // Check to see if we need to index everything\r\n                if (index.isDefinedOn(namedNode.node)) {\r\n                    // We need to build this index\r\n                    var childList = [];\r\n                    var iter = existingChildren.getIterator(NamedNode.Wrap);\r\n                    var next = iter.getNext();\r\n                    while (next) {\r\n                        if (next.name !== namedNode.name) {\r\n                            childList.push(next);\r\n                        }\r\n                        next = iter.getNext();\r\n                    }\r\n                    childList.push(namedNode);\r\n                    return buildChildSet(childList, index.getCompare());\r\n                }\r\n                else {\r\n                    // No change, this remains a fallback\r\n                    return fallbackObject;\r\n                }\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                var newChildren = indexedChildren;\r\n                if (existingSnap) {\r\n                    newChildren = newChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                return newChildren.insert(namedNode, namedNode.node);\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    /**\r\n     * Create a new IndexMap instance with the given value removed\r\n     */\r\n    IndexMap.prototype.removeFromIndexes = function (namedNode, existingChildren) {\r\n        var newIndexes = map(this.indexes_, function (indexedChildren) {\r\n            if (indexedChildren === fallbackObject) {\r\n                // This is the fallback. Just return it, nothing to do in this case\r\n                return indexedChildren;\r\n            }\r\n            else {\r\n                var existingSnap = existingChildren.get(namedNode.name);\r\n                if (existingSnap) {\r\n                    return indexedChildren.remove(new NamedNode(namedNode.name, existingSnap));\r\n                }\r\n                else {\r\n                    // No record of this child\r\n                    return indexedChildren;\r\n                }\r\n            }\r\n        });\r\n        return new IndexMap(newIndexes, this.indexSet_);\r\n    };\r\n    return IndexMap;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction NAME_ONLY_COMPARATOR(left, right) {\r\n    return nameCompare(left.name, right.name);\r\n}\r\nfunction NAME_COMPARATOR(left, right) {\r\n    return nameCompare(left, right);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: For memory savings, don't store priorityNode_ if it's empty.\r\nvar EMPTY_NODE;\r\n/**\r\n * ChildrenNode is a class for storing internal nodes in a DataSnapshot\r\n * (i.e. nodes with children).  It implements Node and stores the\r\n * list of children in the children property, sorted by child name.\r\n *\r\n * @constructor\r\n * @implements {Node}\r\n */\r\nvar ChildrenNode = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!SortedMap.<string, !Node>} children_ List of children\r\n     * of this node..\r\n     * @param {?Node} priorityNode_ The priority of this node (as a snapshot node).\r\n     * @param {!IndexMap} indexMap_\r\n     */\r\n    function ChildrenNode(children_, priorityNode_, indexMap_) {\r\n        this.children_ = children_;\r\n        this.priorityNode_ = priorityNode_;\r\n        this.indexMap_ = indexMap_;\r\n        this.lazyHash_ = null;\r\n        /**\r\n         * Note: The only reason we allow null priority is for EMPTY_NODE, since we can't use\r\n         * EMPTY_NODE as the priority of EMPTY_NODE.  We might want to consider making EMPTY_NODE its own\r\n         * class instead of an empty ChildrenNode.\r\n         */\r\n        if (this.priorityNode_) {\r\n            validatePriorityNode(this.priorityNode_);\r\n        }\r\n        if (this.children_.isEmpty()) {\r\n            assert(!this.priorityNode_ || this.priorityNode_.isEmpty(), 'An empty node cannot have a priority');\r\n        }\r\n    }\r\n    Object.defineProperty(ChildrenNode, \"EMPTY_NODE\", {\r\n        get: function () {\r\n            return (EMPTY_NODE ||\r\n                (EMPTY_NODE = new ChildrenNode(new SortedMap(NAME_COMPARATOR), null, IndexMap.Default)));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isLeafNode = function () {\r\n        return false;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPriority = function () {\r\n        return this.priorityNode_ || EMPTY_NODE;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updatePriority = function (newPriorityNode) {\r\n        if (this.children_.isEmpty()) {\r\n            // Don't allow priorities on empty nodes\r\n            return this;\r\n        }\r\n        else {\r\n            return new ChildrenNode(this.children_, newPriorityNode, this.indexMap_);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getImmediateChild = function (childName) {\r\n        // Hack to treat priority as a regular child\r\n        if (childName === '.priority') {\r\n            return this.getPriority();\r\n        }\r\n        else {\r\n            var child = this.children_.get(childName);\r\n            return child === null ? EMPTY_NODE : child;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getChild = function (path) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return this;\r\n        }\r\n        return this.getImmediateChild(front).getChild(path.popFront());\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hasChild = function (childName) {\r\n        return this.children_.get(childName) !== null;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateImmediateChild = function (childName, newChildNode) {\r\n        assert(newChildNode, 'We should always be passing snapshot nodes');\r\n        if (childName === '.priority') {\r\n            return this.updatePriority(newChildNode);\r\n        }\r\n        else {\r\n            var namedNode = new NamedNode(childName, newChildNode);\r\n            var newChildren = void 0, newIndexMap = void 0;\r\n            if (newChildNode.isEmpty()) {\r\n                newChildren = this.children_.remove(childName);\r\n                newIndexMap = this.indexMap_.removeFromIndexes(namedNode, this.children_);\r\n            }\r\n            else {\r\n                newChildren = this.children_.insert(childName, newChildNode);\r\n                newIndexMap = this.indexMap_.addToIndexes(namedNode, this.children_);\r\n            }\r\n            var newPriority = newChildren.isEmpty()\r\n                ? EMPTY_NODE\r\n                : this.priorityNode_;\r\n            return new ChildrenNode(newChildren, newPriority, newIndexMap);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.updateChild = function (path, newChildNode) {\r\n        var front = path.getFront();\r\n        if (front === null) {\r\n            return newChildNode;\r\n        }\r\n        else {\r\n            assert(path.getFront() !== '.priority' || path.getLength() === 1, '.priority must be the last token in a path');\r\n            var newImmediateChild = this.getImmediateChild(front).updateChild(path.popFront(), newChildNode);\r\n            return this.updateImmediateChild(front, newImmediateChild);\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.isEmpty = function () {\r\n        return this.children_.isEmpty();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.numChildren = function () {\r\n        return this.children_.count();\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.val = function (exportFormat) {\r\n        if (this.isEmpty()) {\r\n            return null;\r\n        }\r\n        var obj = {};\r\n        var numKeys = 0, maxKey = 0, allIntegerKeys = true;\r\n        this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            obj[key] = childNode.val(exportFormat);\r\n            numKeys++;\r\n            if (allIntegerKeys && ChildrenNode.INTEGER_REGEXP_.test(key)) {\r\n                maxKey = Math.max(maxKey, Number(key));\r\n            }\r\n            else {\r\n                allIntegerKeys = false;\r\n            }\r\n        });\r\n        if (!exportFormat && allIntegerKeys && maxKey < 2 * numKeys) {\r\n            // convert to array.\r\n            var array = [];\r\n            // eslint-disable-next-line guard-for-in\r\n            for (var key in obj) {\r\n                array[key] = obj[key];\r\n            }\r\n            return array;\r\n        }\r\n        else {\r\n            if (exportFormat && !this.getPriority().isEmpty()) {\r\n                obj['.priority'] = this.getPriority().val();\r\n            }\r\n            return obj;\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.hash = function () {\r\n        if (this.lazyHash_ === null) {\r\n            var toHash_1 = '';\r\n            if (!this.getPriority().isEmpty()) {\r\n                toHash_1 +=\r\n                    'priority:' +\r\n                        priorityHashText(this.getPriority().val()) +\r\n                        ':';\r\n            }\r\n            this.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                var childHash = childNode.hash();\r\n                if (childHash !== '') {\r\n                    toHash_1 += ':' + key + ':' + childHash;\r\n                }\r\n            });\r\n            this.lazyHash_ = toHash_1 === '' ? '' : sha1(toHash_1);\r\n        }\r\n        return this.lazyHash_;\r\n    };\r\n    /** @inheritDoc */\r\n    ChildrenNode.prototype.getPredecessorChildName = function (childName, childNode, index) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            var predecessor = idx.getPredecessorKey(new NamedNode(childName, childNode));\r\n            return predecessor ? predecessor.name : null;\r\n        }\r\n        else {\r\n            return this.children_.getPredecessorKey(childName);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getFirstChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var minKey = idx.minKey();\r\n            return minKey && minKey.name;\r\n        }\r\n        else {\r\n            return this.children_.minKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getFirstChild = function (indexDefinition) {\r\n        var minKey = this.getFirstChildName(indexDefinition);\r\n        if (minKey) {\r\n            return new NamedNode(minKey, this.children_.get(minKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Given an index, return the key name of the largest value we have, according to that index\r\n     * @param {!Index} indexDefinition\r\n     * @return {?string}\r\n     */\r\n    ChildrenNode.prototype.getLastChildName = function (indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            var maxKey = idx.maxKey();\r\n            return maxKey && maxKey.name;\r\n        }\r\n        else {\r\n            return this.children_.maxKey();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {?NamedNode}\r\n     */\r\n    ChildrenNode.prototype.getLastChild = function (indexDefinition) {\r\n        var maxKey = this.getLastChildName(indexDefinition);\r\n        if (maxKey) {\r\n            return new NamedNode(maxKey, this.children_.get(maxKey));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.forEachChild = function (index, action) {\r\n        var idx = this.resolveIndex_(index);\r\n        if (idx) {\r\n            return idx.inorderTraversal(function (wrappedNode) {\r\n                return action(wrappedNode.name, wrappedNode.node);\r\n            });\r\n        }\r\n        else {\r\n            return this.children_.inorderTraversal(action);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIterator = function (indexDefinition) {\r\n        return this.getIteratorFrom(indexDefinition.minPost(), indexDefinition);\r\n    };\r\n    /**\r\n     *\r\n     * @param {!NamedNode} startPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getIteratorFrom = function (startPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getIteratorFrom(startPost, function (key) { return key; });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getIteratorFrom(startPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, startPost) < 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIterator = function (indexDefinition) {\r\n        return this.getReverseIteratorFrom(indexDefinition.maxPost(), indexDefinition);\r\n    };\r\n    /**\r\n     * @param {!NamedNode} endPost\r\n     * @param {!Index} indexDefinition\r\n     * @return {!SortedMapIterator}\r\n     */\r\n    ChildrenNode.prototype.getReverseIteratorFrom = function (endPost, indexDefinition) {\r\n        var idx = this.resolveIndex_(indexDefinition);\r\n        if (idx) {\r\n            return idx.getReverseIteratorFrom(endPost, function (key) {\r\n                return key;\r\n            });\r\n        }\r\n        else {\r\n            var iterator = this.children_.getReverseIteratorFrom(endPost.name, NamedNode.Wrap);\r\n            var next = iterator.peek();\r\n            while (next != null && indexDefinition.compare(next, endPost) > 0) {\r\n                iterator.getNext();\r\n                next = iterator.peek();\r\n            }\r\n            return iterator;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.compareTo = function (other) {\r\n        if (this.isEmpty()) {\r\n            if (other.isEmpty()) {\r\n                return 0;\r\n            }\r\n            else {\r\n                return -1;\r\n            }\r\n        }\r\n        else if (other.isLeafNode() || other.isEmpty()) {\r\n            return 1;\r\n        }\r\n        else if (other === MAX_NODE$2) {\r\n            return -1;\r\n        }\r\n        else {\r\n            // Must be another node with children.\r\n            return 0;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.withIndex = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX ||\r\n            this.indexMap_.hasIndex(indexDefinition)) {\r\n            return this;\r\n        }\r\n        else {\r\n            var newIndexMap = this.indexMap_.addIndex(indexDefinition, this.children_);\r\n            return new ChildrenNode(this.children_, this.priorityNode_, newIndexMap);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.isIndexed = function (index) {\r\n        return index === KEY_INDEX || this.indexMap_.hasIndex(index);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildrenNode.prototype.equals = function (other) {\r\n        if (other === this) {\r\n            return true;\r\n        }\r\n        else if (other.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            var otherChildrenNode = other;\r\n            if (!this.getPriority().equals(otherChildrenNode.getPriority())) {\r\n                return false;\r\n            }\r\n            else if (this.children_.count() === otherChildrenNode.children_.count()) {\r\n                var thisIter = this.getIterator(PRIORITY_INDEX);\r\n                var otherIter = otherChildrenNode.getIterator(PRIORITY_INDEX);\r\n                var thisCurrent = thisIter.getNext();\r\n                var otherCurrent = otherIter.getNext();\r\n                while (thisCurrent && otherCurrent) {\r\n                    if (thisCurrent.name !== otherCurrent.name ||\r\n                        !thisCurrent.node.equals(otherCurrent.node)) {\r\n                        return false;\r\n                    }\r\n                    thisCurrent = thisIter.getNext();\r\n                    otherCurrent = otherIter.getNext();\r\n                }\r\n                return thisCurrent === null && otherCurrent === null;\r\n            }\r\n            else {\r\n                return false;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a SortedMap ordered by index, or null if the default (by-key) ordering can be used\r\n     * instead.\r\n     *\r\n     * @private\r\n     * @param {!Index} indexDefinition\r\n     * @return {?SortedMap.<NamedNode, Node>}\r\n     */\r\n    ChildrenNode.prototype.resolveIndex_ = function (indexDefinition) {\r\n        if (indexDefinition === KEY_INDEX) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.indexMap_.get(indexDefinition.toString());\r\n        }\r\n    };\r\n    /**\r\n     * @private\r\n     * @type {RegExp}\r\n     */\r\n    ChildrenNode.INTEGER_REGEXP_ = /^(0|[1-9]\\d*)$/;\r\n    return ChildrenNode;\r\n}());\r\n/**\r\n * @constructor\r\n * @extends {ChildrenNode}\r\n * @private\r\n */\r\nvar MaxNode = /** @class */ (function (_super) {\r\n    __extends(MaxNode, _super);\r\n    function MaxNode() {\r\n        return _super.call(this, new SortedMap(NAME_COMPARATOR), ChildrenNode.EMPTY_NODE, IndexMap.Default) || this;\r\n    }\r\n    MaxNode.prototype.compareTo = function (other) {\r\n        if (other === this) {\r\n            return 0;\r\n        }\r\n        else {\r\n            return 1;\r\n        }\r\n    };\r\n    MaxNode.prototype.equals = function (other) {\r\n        // Not that we every compare it, but MAX_NODE is only ever equal to itself\r\n        return other === this;\r\n    };\r\n    MaxNode.prototype.getPriority = function () {\r\n        return this;\r\n    };\r\n    MaxNode.prototype.getImmediateChild = function (childName) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    };\r\n    MaxNode.prototype.isEmpty = function () {\r\n        return false;\r\n    };\r\n    return MaxNode;\r\n}(ChildrenNode));\r\n/**\r\n * Marker that will sort higher than any other snapshot.\r\n * @type {!MAX_NODE}\r\n * @const\r\n */\r\nvar MAX_NODE$2 = new MaxNode();\r\nObject.defineProperties(NamedNode, {\r\n    MIN: {\r\n        value: new NamedNode(MIN_NAME, ChildrenNode.EMPTY_NODE)\r\n    },\r\n    MAX: {\r\n        value: new NamedNode(MAX_NAME, MAX_NODE$2)\r\n    }\r\n});\r\n/**\r\n * Reference Extensions\r\n */\r\nKeyIndex.__EMPTY_NODE = ChildrenNode.EMPTY_NODE;\r\nLeafNode.__childrenNodeConstructor = ChildrenNode;\r\nsetMaxNode(MAX_NODE$2);\r\nsetMaxNode$1(MAX_NODE$2);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar USE_HINZE = true;\r\n/**\r\n * Constructs a snapshot node representing the passed JSON and returns it.\r\n * @param {*} json JSON to create a node for.\r\n * @param {?string|?number=} priority Optional priority to use.  This will be ignored if the\r\n * passed JSON contains a .priority property.\r\n * @return {!Node}\r\n */\r\nfunction nodeFromJSON$1(json, priority) {\r\n    if (priority === void 0) { priority = null; }\r\n    if (json === null) {\r\n        return ChildrenNode.EMPTY_NODE;\r\n    }\r\n    if (typeof json === 'object' && '.priority' in json) {\r\n        priority = json['.priority'];\r\n    }\r\n    assert(priority === null ||\r\n        typeof priority === 'string' ||\r\n        typeof priority === 'number' ||\r\n        (typeof priority === 'object' && '.sv' in priority), 'Invalid priority type found: ' + typeof priority);\r\n    if (typeof json === 'object' && '.value' in json && json['.value'] !== null) {\r\n        json = json['.value'];\r\n    }\r\n    // Valid leaf nodes include non-objects or server-value wrapper objects\r\n    if (typeof json !== 'object' || '.sv' in json) {\r\n        var jsonLeaf = json;\r\n        return new LeafNode(jsonLeaf, nodeFromJSON$1(priority));\r\n    }\r\n    if (!(json instanceof Array) && USE_HINZE) {\r\n        var children_1 = [];\r\n        var childrenHavePriority_1 = false;\r\n        var hinzeJsonObj = json;\r\n        each(hinzeJsonObj, function (key, child) {\r\n            if (key.substring(0, 1) !== '.') {\r\n                // Ignore metadata nodes\r\n                var childNode = nodeFromJSON$1(child);\r\n                if (!childNode.isEmpty()) {\r\n                    childrenHavePriority_1 =\r\n                        childrenHavePriority_1 || !childNode.getPriority().isEmpty();\r\n                    children_1.push(new NamedNode(key, childNode));\r\n                }\r\n            }\r\n        });\r\n        if (children_1.length === 0) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var childSet = buildChildSet(children_1, NAME_ONLY_COMPARATOR, function (namedNode) { return namedNode.name; }, NAME_COMPARATOR);\r\n        if (childrenHavePriority_1) {\r\n            var sortedChildSet = buildChildSet(children_1, PRIORITY_INDEX.getCompare());\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), new IndexMap({ '.priority': sortedChildSet }, { '.priority': PRIORITY_INDEX }));\r\n        }\r\n        else {\r\n            return new ChildrenNode(childSet, nodeFromJSON$1(priority), IndexMap.Default);\r\n        }\r\n    }\r\n    else {\r\n        var node_1 = ChildrenNode.EMPTY_NODE;\r\n        each(json, function (key, childData) {\r\n            if (contains(json, key)) {\r\n                if (key.substring(0, 1) !== '.') {\r\n                    // ignore metadata nodes.\r\n                    var childNode = nodeFromJSON$1(childData);\r\n                    if (childNode.isLeafNode() || !childNode.isEmpty()) {\r\n                        node_1 = node_1.updateImmediateChild(key, childNode);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return node_1.updatePriority(nodeFromJSON$1(priority));\r\n    }\r\n}\r\nsetNodeFromJSON(nodeFromJSON$1);\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @extends {Index}\r\n * @private\r\n */\r\nvar ValueIndex = /** @class */ (function (_super) {\r\n    __extends(ValueIndex, _super);\r\n    function ValueIndex() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.compare = function (a, b) {\r\n        var indexCmp = a.node.compareTo(b.node);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.isDefinedOn = function (node) {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.indexedValueChanged = function (oldNode, newNode) {\r\n        return !oldNode.equals(newNode);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.minPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MIN;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueIndex.prototype.maxPost = function () {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        return NamedNode.MAX;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {string} name\r\n     * @return {!NamedNode}\r\n     */\r\n    ValueIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        return new NamedNode(name, valueNode);\r\n    };\r\n    /**\r\n     * @return {!string} String representation for inclusion in a query spec\r\n     */\r\n    ValueIndex.prototype.toString = function () {\r\n        return '.value';\r\n    };\r\n    return ValueIndex;\r\n}(Index));\r\nvar VALUE_INDEX = new ValueIndex();\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!Path} indexPath\r\n * @constructor\r\n * @extends {Index}\r\n */\r\nvar PathIndex = /** @class */ (function (_super) {\r\n    __extends(PathIndex, _super);\r\n    function PathIndex(indexPath_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.indexPath_ = indexPath_;\r\n        assert(!indexPath_.isEmpty() && indexPath_.getFront() !== '.priority', \"Can't create PathIndex with empty path or .priority key\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * @param {!Node} snap\r\n     * @return {!Node}\r\n     * @protected\r\n     */\r\n    PathIndex.prototype.extractChild = function (snap) {\r\n        return snap.getChild(this.indexPath_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.isDefinedOn = function (node) {\r\n        return !node.getChild(this.indexPath_).isEmpty();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.compare = function (a, b) {\r\n        var aChild = this.extractChild(a.node);\r\n        var bChild = this.extractChild(b.node);\r\n        var indexCmp = aChild.compareTo(bChild);\r\n        if (indexCmp === 0) {\r\n            return nameCompare(a.name, b.name);\r\n        }\r\n        else {\r\n            return indexCmp;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.makePost = function (indexValue, name) {\r\n        var valueNode = nodeFromJSON$1(indexValue);\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, valueNode);\r\n        return new NamedNode(name, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.maxPost = function () {\r\n        var node = ChildrenNode.EMPTY_NODE.updateChild(this.indexPath_, MAX_NODE$2);\r\n        return new NamedNode(MAX_NAME, node);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PathIndex.prototype.toString = function () {\r\n        return this.indexPath_.slice().join('/');\r\n    };\r\n    return PathIndex;\r\n}(Index));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase data snapshot.  It wraps a SnapshotNode and\r\n * surfaces the public methods (val, forEach, etc.) we want to expose.\r\n */\r\nvar DataSnapshot = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_ A SnapshotNode to wrap.\r\n     * @param {!Reference} ref_ The ref of the location this snapshot came from.\r\n     * @param {!Index} index_ The iteration order for this snapshot\r\n     */\r\n    function DataSnapshot(node_, ref_, index_) {\r\n        this.node_ = node_;\r\n        this.ref_ = ref_;\r\n        this.index_ = index_;\r\n    }\r\n    /**\r\n     * Retrieves the snapshot contents as JSON.  Returns null if the snapshot is\r\n     * empty.\r\n     *\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.val = function () {\r\n        validateArgCount('DataSnapshot.val', 0, 0, arguments.length);\r\n        return this.node_.val();\r\n    };\r\n    /**\r\n     * Returns the snapshot contents as JSON, including priorities of node.  Suitable for exporting\r\n     * the entire node contents.\r\n     * @return {*} JSON representation of the DataSnapshot contents, or null if empty.\r\n     */\r\n    DataSnapshot.prototype.exportVal = function () {\r\n        validateArgCount('DataSnapshot.exportVal', 0, 0, arguments.length);\r\n        return this.node_.val(true);\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users\r\n    DataSnapshot.prototype.toJSON = function () {\r\n        // Optional spacer argument is unnecessary because we're depending on recursion rather than stringifying the content\r\n        validateArgCount('DataSnapshot.toJSON', 0, 1, arguments.length);\r\n        return this.exportVal();\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a non-null value.\r\n     *\r\n     * @return {boolean} Whether the snapshot contains a non-null value, or is empty.\r\n     */\r\n    DataSnapshot.prototype.exists = function () {\r\n        validateArgCount('DataSnapshot.exists', 0, 0, arguments.length);\r\n        return !this.node_.isEmpty();\r\n    };\r\n    /**\r\n     * Returns a DataSnapshot of the specified child node's contents.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {!DataSnapshot} DataSnapshot for child node.\r\n     */\r\n    DataSnapshot.prototype.child = function (childPathString) {\r\n        validateArgCount('DataSnapshot.child', 0, 1, arguments.length);\r\n        // Ensure the childPath is a string (can be a number)\r\n        childPathString = String(childPathString);\r\n        validatePathString('DataSnapshot.child', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        var childRef = this.ref_.child(childPath);\r\n        return new DataSnapshot(this.node_.getChild(childPath), childRef, PRIORITY_INDEX);\r\n    };\r\n    /**\r\n     * Returns whether the snapshot contains a child at the specified path.\r\n     *\r\n     * @param {!string} childPathString Path to a child.\r\n     * @return {boolean} Whether the child exists.\r\n     */\r\n    DataSnapshot.prototype.hasChild = function (childPathString) {\r\n        validateArgCount('DataSnapshot.hasChild', 1, 1, arguments.length);\r\n        validatePathString('DataSnapshot.hasChild', 1, childPathString, false);\r\n        var childPath = new Path(childPathString);\r\n        return !this.node_.getChild(childPath).isEmpty();\r\n    };\r\n    /**\r\n     * Returns the priority of the object, or null if no priority was set.\r\n     *\r\n     * @return {string|number|null} The priority.\r\n     */\r\n    DataSnapshot.prototype.getPriority = function () {\r\n        validateArgCount('DataSnapshot.getPriority', 0, 0, arguments.length);\r\n        // typecast here because we never return deferred values or internal priorities (MAX_PRIORITY)\r\n        return this.node_.getPriority().val();\r\n    };\r\n    /**\r\n     * Iterates through child nodes and calls the specified action for each one.\r\n     *\r\n     * @param {function(!DataSnapshot)} action Callback function to be called\r\n     * for each child.\r\n     * @return {boolean} True if forEach was canceled by action returning true for\r\n     * one of the child nodes.\r\n     */\r\n    DataSnapshot.prototype.forEach = function (action) {\r\n        var _this = this;\r\n        validateArgCount('DataSnapshot.forEach', 1, 1, arguments.length);\r\n        validateCallback('DataSnapshot.forEach', 1, action, false);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        var childrenNode = this.node_;\r\n        // Sanitize the return value to a boolean. ChildrenNode.forEachChild has a weird return type...\r\n        return !!childrenNode.forEachChild(this.index_, function (key, node) {\r\n            return action(new DataSnapshot(node, _this.ref_.child(key), PRIORITY_INDEX));\r\n        });\r\n    };\r\n    /**\r\n     * Returns whether this DataSnapshot has children.\r\n     * @return {boolean} True if the DataSnapshot contains 1 or more child nodes.\r\n     */\r\n    DataSnapshot.prototype.hasChildren = function () {\r\n        validateArgCount('DataSnapshot.hasChildren', 0, 0, arguments.length);\r\n        if (this.node_.isLeafNode()) {\r\n            return false;\r\n        }\r\n        else {\r\n            return !this.node_.isEmpty();\r\n        }\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"key\", {\r\n        get: function () {\r\n            return this.ref_.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Returns the number of children for this DataSnapshot.\r\n     * @return {number} The number of children that this DataSnapshot contains.\r\n     */\r\n    DataSnapshot.prototype.numChildren = function () {\r\n        validateArgCount('DataSnapshot.numChildren', 0, 0, arguments.length);\r\n        return this.node_.numChildren();\r\n    };\r\n    /**\r\n     * @return {Reference} The Firebase reference for the location this snapshot's data came from.\r\n     */\r\n    DataSnapshot.prototype.getRef = function () {\r\n        validateArgCount('DataSnapshot.ref', 0, 0, arguments.length);\r\n        return this.ref_;\r\n    };\r\n    Object.defineProperty(DataSnapshot.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return DataSnapshot;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Encapsulates the data needed to raise an event\r\n * @implements {Event}\r\n */\r\nvar DataEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {!string} eventType One of: value, child_added, child_changed, child_moved, child_removed\r\n     * @param {!EventRegistration} eventRegistration The function to call to with the event data. User provided\r\n     * @param {!DataSnapshot} snapshot The data backing the event\r\n     * @param {?string=} prevName Optional, the name of the previous child for child_* events.\r\n     */\r\n    function DataEvent(eventType, eventRegistration, snapshot, prevName) {\r\n        this.eventType = eventType;\r\n        this.eventRegistration = eventRegistration;\r\n        this.snapshot = snapshot;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getPath = function () {\r\n        var ref = this.snapshot.getRef();\r\n        if (this.eventType === 'value') {\r\n            return ref.path;\r\n        }\r\n        else {\r\n            return ref.getParent().path;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventType = function () {\r\n        return this.eventType;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    DataEvent.prototype.toString = function () {\r\n        return (this.getPath().toString() +\r\n            ':' +\r\n            this.eventType +\r\n            ':' +\r\n            stringify(this.snapshot.exportVal()));\r\n    };\r\n    return DataEvent;\r\n}());\r\nvar CancelEvent = /** @class */ (function () {\r\n    /**\r\n     * @param {EventRegistration} eventRegistration\r\n     * @param {Error} error\r\n     * @param {!Path} path\r\n     */\r\n    function CancelEvent(eventRegistration, error, path) {\r\n        this.eventRegistration = eventRegistration;\r\n        this.error = error;\r\n        this.path = path;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getPath = function () {\r\n        return this.path;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventType = function () {\r\n        return 'cancel';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.getEventRunner = function () {\r\n        return this.eventRegistration.getEventRunner(this);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    CancelEvent.prototype.toString = function () {\r\n        return this.path.toString() + ':cancel';\r\n    };\r\n    return CancelEvent;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Represents registration for 'value' events.\r\n */\r\nvar ValueEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?function(!DataSnapshot)} callback_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {?Object} context_\r\n     */\r\n    function ValueEventRegistration(callback_, cancelCallback_, context_) {\r\n        this.callback_ = callback_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.respondsTo = function (eventType) {\r\n        return eventType === 'value';\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createEvent = function (change, query) {\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent('value', this, new DataSnapshot(change.snapshotNode, query.getRef(), index));\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_1 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_1.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_1 = this.callback_;\r\n            return function () {\r\n                cb_1.call(ctx, eventData.snapshot);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.matches = function (other) {\r\n        if (!(other instanceof ValueEventRegistration)) {\r\n            return false;\r\n        }\r\n        else if (!other.callback_ || !this.callback_) {\r\n            // If no callback specified, we consider it to match any callback.\r\n            return true;\r\n        }\r\n        else {\r\n            return (other.callback_ === this.callback_ && other.context_ === this.context_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ValueEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callback_ !== null;\r\n    };\r\n    return ValueEventRegistration;\r\n}());\r\n/**\r\n * Represents the registration of 1 or more child_xxx events.\r\n *\r\n * Currently, it is always exactly 1 child_xxx event, but the idea is we might let you\r\n * register a group of callbacks together in the future.\r\n *\r\n * @constructor\r\n * @implements {EventRegistration}\r\n */\r\nvar ChildEventRegistration = /** @class */ (function () {\r\n    /**\r\n     * @param {?Object.<string, function(!DataSnapshot, ?string=)>} callbacks_\r\n     * @param {?function(Error)} cancelCallback_\r\n     * @param {Object=} context_\r\n     */\r\n    function ChildEventRegistration(callbacks_, cancelCallback_, context_) {\r\n        this.callbacks_ = callbacks_;\r\n        this.cancelCallback_ = cancelCallback_;\r\n        this.context_ = context_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.respondsTo = function (eventType) {\r\n        var eventToCheck = eventType === 'children_added' ? 'child_added' : eventType;\r\n        eventToCheck =\r\n            eventToCheck === 'children_removed' ? 'child_removed' : eventToCheck;\r\n        return contains(this.callbacks_, eventToCheck);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createCancelEvent = function (error, path) {\r\n        if (this.cancelCallback_) {\r\n            return new CancelEvent(this, error, path);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.createEvent = function (change, query) {\r\n        assert(change.childName != null, 'Child events should have a childName.');\r\n        var ref = query.getRef().child(/** @type {!string} */ change.childName);\r\n        var index = query.getQueryParams().getIndex();\r\n        return new DataEvent(change.type, this, new DataSnapshot(change.snapshotNode, ref, index), change.prevName);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.getEventRunner = function (eventData) {\r\n        var ctx = this.context_;\r\n        if (eventData.getEventType() === 'cancel') {\r\n            assert(this.cancelCallback_, 'Raising a cancel event on a listener with no cancel callback');\r\n            var cancelCB_2 = this.cancelCallback_;\r\n            return function () {\r\n                // We know that error exists, we checked above that this is a cancel event\r\n                cancelCB_2.call(ctx, eventData.error);\r\n            };\r\n        }\r\n        else {\r\n            var cb_2 = this.callbacks_[eventData.eventType];\r\n            return function () {\r\n                cb_2.call(ctx, eventData.snapshot, eventData.prevName);\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.matches = function (other) {\r\n        var _this = this;\r\n        if (other instanceof ChildEventRegistration) {\r\n            if (!this.callbacks_ || !other.callbacks_) {\r\n                return true;\r\n            }\r\n            else if (this.context_ === other.context_) {\r\n                var otherKeys = Object.keys(other.callbacks_);\r\n                var thisKeys = Object.keys(this.callbacks_);\r\n                var otherCount = otherKeys.length;\r\n                var thisCount = thisKeys.length;\r\n                if (otherCount === thisCount) {\r\n                    // If count is 1, do an exact match on eventType, if either is defined but null, it's a match.\r\n                    // If event types don't match, not a match\r\n                    // If count is not 1, exact match across all\r\n                    if (otherCount === 1) {\r\n                        var otherKey = otherKeys[0];\r\n                        var thisKey = thisKeys[0];\r\n                        return (thisKey === otherKey &&\r\n                            (!other.callbacks_[otherKey] ||\r\n                                !this.callbacks_[thisKey] ||\r\n                                other.callbacks_[otherKey] === this.callbacks_[thisKey]));\r\n                    }\r\n                    else {\r\n                        // Exact match on each key.\r\n                        return thisKeys.every(function (eventType) {\r\n                            return other.callbacks_[eventType] === _this.callbacks_[eventType];\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    ChildEventRegistration.prototype.hasAnyCallback = function () {\r\n        return this.callbacks_ !== null;\r\n    };\r\n    return ChildEventRegistration;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor;\r\n/**\r\n * A Query represents a filter to be applied to a firebase location.  This object purely represents the\r\n * query expression (and exposes our public API to build the query).  The actual query logic is in ViewBase.js.\r\n *\r\n * Since every Firebase reference is a query, Firebase inherits from this object.\r\n */\r\nvar Query = /** @class */ (function () {\r\n    function Query(repo, path, queryParams_, orderByCalled_) {\r\n        this.repo = repo;\r\n        this.path = path;\r\n        this.queryParams_ = queryParams_;\r\n        this.orderByCalled_ = orderByCalled_;\r\n    }\r\n    Object.defineProperty(Query, \"__referenceConstructor\", {\r\n        get: function () {\r\n            assert(__referenceConstructor, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor;\r\n        },\r\n        set: function (val) {\r\n            __referenceConstructor = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Validates start/end values for queries.\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateQueryEndpoints_ = function (params) {\r\n        var startNode = null;\r\n        var endNode = null;\r\n        if (params.hasStart()) {\r\n            startNode = params.getIndexStartValue();\r\n        }\r\n        if (params.hasEnd()) {\r\n            endNode = params.getIndexEndValue();\r\n        }\r\n        if (params.getIndex() === KEY_INDEX) {\r\n            var tooManyArgsError = 'Query: When ordering by key, you may only pass one argument to ' +\r\n                'startAt(), endAt(), or equalTo().';\r\n            var wrongArgTypeError = 'Query: When ordering by key, the argument passed to startAt(), endAt(),' +\r\n                'or equalTo() must be a string.';\r\n            if (params.hasStart()) {\r\n                var startName = params.getIndexStartName();\r\n                if (startName !== MIN_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof startNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n            if (params.hasEnd()) {\r\n                var endName = params.getIndexEndName();\r\n                if (endName !== MAX_NAME) {\r\n                    throw new Error(tooManyArgsError);\r\n                }\r\n                else if (typeof endNode !== 'string') {\r\n                    throw new Error(wrongArgTypeError);\r\n                }\r\n            }\r\n        }\r\n        else if (params.getIndex() === PRIORITY_INDEX) {\r\n            if ((startNode != null && !isValidPriority(startNode)) ||\r\n                (endNode != null && !isValidPriority(endNode))) {\r\n                throw new Error('Query: When ordering by priority, the first argument passed to startAt(), ' +\r\n                    'endAt(), or equalTo() must be a valid priority value (null, a number, or a string).');\r\n            }\r\n        }\r\n        else {\r\n            assert(params.getIndex() instanceof PathIndex ||\r\n                params.getIndex() === VALUE_INDEX, 'unknown index type.');\r\n            if ((startNode != null && typeof startNode === 'object') ||\r\n                (endNode != null && typeof endNode === 'object')) {\r\n                throw new Error('Query: First argument passed to startAt(), endAt(), or equalTo() cannot be ' +\r\n                    'an object.');\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Validates that limit* has been called with the correct combination of parameters\r\n     * @param {!QueryParams} params\r\n     * @private\r\n     */\r\n    Query.validateLimit_ = function (params) {\r\n        if (params.hasStart() &&\r\n            params.hasEnd() &&\r\n            params.hasLimit() &&\r\n            !params.hasAnchoredLimit()) {\r\n            throw new Error(\"Query: Can't combine startAt(), endAt(), and limit(). Use limitToFirst() or limitToLast() instead.\");\r\n        }\r\n    };\r\n    /**\r\n     * Validates that no other order by call has been made\r\n     * @param {!string} fnName\r\n     * @private\r\n     */\r\n    Query.prototype.validateNoPreviousOrderByCall_ = function (fnName) {\r\n        if (this.orderByCalled_ === true) {\r\n            throw new Error(fnName + \": You can't combine multiple orderBy calls.\");\r\n        }\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     */\r\n    Query.prototype.getQueryParams = function () {\r\n        return this.queryParams_;\r\n    };\r\n    /**\r\n     * @return {!Reference}\r\n     */\r\n    Query.prototype.getRef = function () {\r\n        validateArgCount('Query.ref', 0, 0, arguments.length);\r\n        // This is a slight hack. We cannot goog.require('fb.api.Firebase'), since Firebase requires fb.api.Query.\r\n        // However, we will always export 'Firebase' to the global namespace, so it's guaranteed to exist by the time this\r\n        // method gets called.\r\n        return new Query.__referenceConstructor(this.repo, this.path);\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @param {!function(DataSnapshot, string=)} callback\r\n     * @param {(function(Error)|Object)=} cancelCallbackOrContext\r\n     * @param {Object=} context\r\n     * @return {!function(DataSnapshot, string=)}\r\n     */\r\n    Query.prototype.on = function (eventType, callback, cancelCallbackOrContext, context) {\r\n        validateArgCount('Query.on', 2, 4, arguments.length);\r\n        validateEventType('Query.on', 1, eventType, false);\r\n        validateCallback('Query.on', 2, callback, false);\r\n        var ret = Query.getCancelAndContextArgs_('Query.on', cancelCallbackOrContext, context);\r\n        if (eventType === 'value') {\r\n            this.onValueEvent(callback, ret.cancel, ret.context);\r\n        }\r\n        else {\r\n            var callbacks = {};\r\n            callbacks[eventType] = callback;\r\n            this.onChildEvent(callbacks, ret.cancel, ret.context);\r\n        }\r\n        return callback;\r\n    };\r\n    /**\r\n     * @param {!function(!DataSnapshot)} callback\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onValueEvent = function (callback, cancelCallback, context) {\r\n        var container = new ValueEventRegistration(callback, cancelCallback || null, context || null);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {!Object.<string, !function(!DataSnapshot, ?string)>} callbacks\r\n     * @param {?function(Error)} cancelCallback\r\n     * @param {?Object} context\r\n     * @protected\r\n     */\r\n    Query.prototype.onChildEvent = function (callbacks, cancelCallback, context) {\r\n        var container = new ChildEventRegistration(callbacks, cancelCallback, context);\r\n        this.repo.addEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * @param {string=} eventType\r\n     * @param {(function(!DataSnapshot, ?string=))=} callback\r\n     * @param {Object=} context\r\n     */\r\n    Query.prototype.off = function (eventType, callback, context) {\r\n        validateArgCount('Query.off', 0, 3, arguments.length);\r\n        validateEventType('Query.off', 1, eventType, true);\r\n        validateCallback('Query.off', 2, callback, true);\r\n        validateContextObject('Query.off', 3, context, true);\r\n        var container = null;\r\n        var callbacks = null;\r\n        if (eventType === 'value') {\r\n            var valueCallback = callback || null;\r\n            container = new ValueEventRegistration(valueCallback, null, context || null);\r\n        }\r\n        else if (eventType) {\r\n            if (callback) {\r\n                callbacks = {};\r\n                callbacks[eventType] = callback;\r\n            }\r\n            container = new ChildEventRegistration(callbacks, null, context || null);\r\n        }\r\n        this.repo.removeEventCallbackForQuery(this, container);\r\n    };\r\n    /**\r\n     * Get the server-value for this query, or return a cached value if not connected.\r\n     */\r\n    Query.prototype.get = function () {\r\n        return this.repo.getValue(this);\r\n    };\r\n    /**\r\n     * Attaches a listener, waits for the first event, and then removes the listener\r\n     * @param {!string} eventType\r\n     * @param {!function(!DataSnapshot, string=)} userCallback\r\n     * @param failureCallbackOrContext\r\n     * @param context\r\n     * @return {!firebase.Promise}\r\n     */\r\n    Query.prototype.once = function (eventType, userCallback, failureCallbackOrContext, context) {\r\n        var _this = this;\r\n        validateArgCount('Query.once', 1, 4, arguments.length);\r\n        validateEventType('Query.once', 1, eventType, false);\r\n        validateCallback('Query.once', 2, userCallback, true);\r\n        var ret = Query.getCancelAndContextArgs_('Query.once', failureCallbackOrContext, context);\r\n        // TODO: Implement this more efficiently (in particular, use 'get' wire protocol for 'value' event)\r\n        // TODO: consider actually wiring the callbacks into the promise. We cannot do this without a breaking change\r\n        // because the API currently expects callbacks will be called synchronously if the data is cached, but this is\r\n        // against the Promise specification.\r\n        var firstCall = true;\r\n        var deferred = new Deferred();\r\n        // A dummy error handler in case a user wasn't expecting promises\r\n        deferred.promise.catch(function () { });\r\n        var onceCallback = function (snapshot) {\r\n            // NOTE: Even though we unsubscribe, we may get called multiple times if a single action (e.g. set() with JSON)\r\n            // triggers multiple events (e.g. child_added or child_changed).\r\n            if (firstCall) {\r\n                firstCall = false;\r\n                _this.off(eventType, onceCallback);\r\n                if (userCallback) {\r\n                    userCallback.bind(ret.context)(snapshot);\r\n                }\r\n                deferred.resolve(snapshot);\r\n            }\r\n        };\r\n        this.on(eventType, onceCallback, \r\n        /*cancel=*/ function (err) {\r\n            _this.off(eventType, onceCallback);\r\n            if (ret.cancel) {\r\n                ret.cancel.bind(ret.context)(err);\r\n            }\r\n            deferred.reject(err);\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the start of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToFirst = function (limit) {\r\n        validateArgCount('Query.limitToFirst', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToFirst: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToFirst: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToFirst(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Set a limit and anchor it to the end of the window.\r\n     * @param {!number} limit\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.limitToLast = function (limit) {\r\n        validateArgCount('Query.limitToLast', 1, 1, arguments.length);\r\n        if (typeof limit !== 'number' ||\r\n            Math.floor(limit) !== limit ||\r\n            limit <= 0) {\r\n            throw new Error('Query.limitToLast: First argument must be a positive integer.');\r\n        }\r\n        if (this.queryParams_.hasLimit()) {\r\n            throw new Error('Query.limitToLast: Limit was already set (by another call to limit, ' +\r\n                'limitToFirst, or limitToLast).');\r\n        }\r\n        return new Query(this.repo, this.path, this.queryParams_.limitToLast(limit), this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Given a child path, return a new query ordered by the specified grandchild path.\r\n     * @param {!string} path\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByChild = function (path) {\r\n        validateArgCount('Query.orderByChild', 1, 1, arguments.length);\r\n        if (path === '$key') {\r\n            throw new Error('Query.orderByChild: \"$key\" is invalid.  Use Query.orderByKey() instead.');\r\n        }\r\n        else if (path === '$priority') {\r\n            throw new Error('Query.orderByChild: \"$priority\" is invalid.  Use Query.orderByPriority() instead.');\r\n        }\r\n        else if (path === '$value') {\r\n            throw new Error('Query.orderByChild: \"$value\" is invalid.  Use Query.orderByValue() instead.');\r\n        }\r\n        validatePathString('Query.orderByChild', 1, path, false);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByChild');\r\n        var parsedPath = new Path(path);\r\n        if (parsedPath.isEmpty()) {\r\n            throw new Error('Query.orderByChild: cannot pass in empty path.  Use Query.orderByValue() instead.');\r\n        }\r\n        var index = new PathIndex(parsedPath);\r\n        var newParams = this.queryParams_.orderBy(index);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the KeyIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByKey = function () {\r\n        validateArgCount('Query.orderByKey', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByKey');\r\n        var newParams = this.queryParams_.orderBy(KEY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the PriorityIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByPriority = function () {\r\n        validateArgCount('Query.orderByPriority', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByPriority');\r\n        var newParams = this.queryParams_.orderBy(PRIORITY_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * Return a new query ordered by the ValueIndex\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.orderByValue = function () {\r\n        validateArgCount('Query.orderByValue', 0, 0, arguments.length);\r\n        this.validateNoPreviousOrderByCall_('Query.orderByValue');\r\n        var newParams = this.queryParams_.orderBy(VALUE_INDEX);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        return new Query(this.repo, this.path, newParams, /*orderByCalled=*/ true);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.startAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.startAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.startAt', 1, value, this.path, true);\r\n        validateKey('Query.startAt', 2, name, true);\r\n        var newParams = this.queryParams_.startAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.startAt: Starting point was already set (by another call to startAt ' +\r\n                'or equalTo).');\r\n        }\r\n        // Calling with no params tells us to start at the beginning.\r\n        if (value === undefined) {\r\n            value = null;\r\n            name = null;\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * @param {number|string|boolean|null} value\r\n     * @param {?string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.endAt = function (value, name) {\r\n        if (value === void 0) { value = null; }\r\n        validateArgCount('Query.endAt', 0, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.endAt', 1, value, this.path, true);\r\n        validateKey('Query.endAt', 2, name, true);\r\n        var newParams = this.queryParams_.endAt(value, name);\r\n        Query.validateLimit_(newParams);\r\n        Query.validateQueryEndpoints_(newParams);\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.endAt: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return new Query(this.repo, this.path, newParams, this.orderByCalled_);\r\n    };\r\n    /**\r\n     * Load the selection of children with exactly the specified value, and, optionally,\r\n     * the specified name.\r\n     * @param {number|string|boolean|null} value\r\n     * @param {string=} name\r\n     * @return {!Query}\r\n     */\r\n    Query.prototype.equalTo = function (value, name) {\r\n        validateArgCount('Query.equalTo', 1, 2, arguments.length);\r\n        validateFirebaseDataArg('Query.equalTo', 1, value, this.path, false);\r\n        validateKey('Query.equalTo', 2, name, true);\r\n        if (this.queryParams_.hasStart()) {\r\n            throw new Error('Query.equalTo: Starting point was already set (by another call to startAt or ' +\r\n                'equalTo).');\r\n        }\r\n        if (this.queryParams_.hasEnd()) {\r\n            throw new Error('Query.equalTo: Ending point was already set (by another call to endAt or ' +\r\n                'equalTo).');\r\n        }\r\n        return this.startAt(value, name).endAt(value, name);\r\n    };\r\n    /**\r\n     * @return {!string} URL for this location.\r\n     */\r\n    Query.prototype.toString = function () {\r\n        validateArgCount('Query.toString', 0, 0, arguments.length);\r\n        return this.repo.toString() + this.path.toUrlEncodedString();\r\n    };\r\n    // Do not create public documentation. This is intended to make JSON serialization work but is otherwise unnecessary\r\n    // for end-users.\r\n    Query.prototype.toJSON = function () {\r\n        // An optional spacer argument is unnecessary for a string.\r\n        validateArgCount('Query.toJSON', 0, 1, arguments.length);\r\n        return this.toString();\r\n    };\r\n    /**\r\n     * An object representation of the query parameters used by this Query.\r\n     * @return {!Object}\r\n     */\r\n    Query.prototype.queryObject = function () {\r\n        return this.queryParams_.getQueryObject();\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     */\r\n    Query.prototype.queryIdentifier = function () {\r\n        var obj = this.queryObject();\r\n        var id = ObjectToUniqueKey(obj);\r\n        return id === '{}' ? 'default' : id;\r\n    };\r\n    /**\r\n     * Return true if this query and the provided query are equivalent; otherwise, return false.\r\n     * @param {Query} other\r\n     * @return {boolean}\r\n     */\r\n    Query.prototype.isEqual = function (other) {\r\n        validateArgCount('Query.isEqual', 1, 1, arguments.length);\r\n        if (!(other instanceof Query)) {\r\n            var error = 'Query.isEqual failed: First argument must be an instance of firebase.database.Query.';\r\n            throw new Error(error);\r\n        }\r\n        var sameRepo = this.repo === other.repo;\r\n        var samePath = this.path.equals(other.path);\r\n        var sameQueryIdentifier = this.queryIdentifier() === other.queryIdentifier();\r\n        return sameRepo && samePath && sameQueryIdentifier;\r\n    };\r\n    /**\r\n     * Helper used by .on and .once to extract the context and or cancel arguments.\r\n     * @param {!string} fnName The function name (on or once)\r\n     * @param {(function(Error)|Object)=} cancelOrContext\r\n     * @param {Object=} context\r\n     * @return {{cancel: ?function(Error), context: ?Object}}\r\n     * @private\r\n     */\r\n    Query.getCancelAndContextArgs_ = function (fnName, cancelOrContext, context) {\r\n        var ret = { cancel: null, context: null };\r\n        if (cancelOrContext && context) {\r\n            ret.cancel = cancelOrContext;\r\n            validateCallback(fnName, 3, ret.cancel, true);\r\n            ret.context = context;\r\n            validateContextObject(fnName, 4, ret.context, true);\r\n        }\r\n        else if (cancelOrContext) {\r\n            // we have either a cancel callback or a context.\r\n            if (typeof cancelOrContext === 'object' && cancelOrContext !== null) {\r\n                // it's a context!\r\n                ret.context = cancelOrContext;\r\n            }\r\n            else if (typeof cancelOrContext === 'function') {\r\n                ret.cancel = cancelOrContext;\r\n            }\r\n            else {\r\n                throw new Error(errorPrefix(fnName, 3, true) +\r\n                    ' must either be a cancel callback or a context object.');\r\n            }\r\n        }\r\n        return ret;\r\n    };\r\n    Object.defineProperty(Query.prototype, \"ref\", {\r\n        get: function () {\r\n            return this.getRef();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Query;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ExistingValueProvider = /** @class */ (function () {\r\n    function ExistingValueProvider(node_) {\r\n        this.node_ = node_;\r\n    }\r\n    ExistingValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var child = this.node_.getImmediateChild(childName);\r\n        return new ExistingValueProvider(child);\r\n    };\r\n    ExistingValueProvider.prototype.node = function () {\r\n        return this.node_;\r\n    };\r\n    return ExistingValueProvider;\r\n}());\r\nvar DeferredValueProvider = /** @class */ (function () {\r\n    function DeferredValueProvider(syncTree, path) {\r\n        this.syncTree_ = syncTree;\r\n        this.path_ = path;\r\n    }\r\n    DeferredValueProvider.prototype.getImmediateChild = function (childName) {\r\n        var childPath = this.path_.child(childName);\r\n        return new DeferredValueProvider(this.syncTree_, childPath);\r\n    };\r\n    DeferredValueProvider.prototype.node = function () {\r\n        return this.syncTree_.calcCompleteEventCache(this.path_);\r\n    };\r\n    return DeferredValueProvider;\r\n}());\r\n/**\r\n * Generate placeholders for deferred values.\r\n * @param {?Object} values\r\n * @return {!Object}\r\n */\r\nvar generateWithValues = function (values) {\r\n    values = values || {};\r\n    values['timestamp'] = values['timestamp'] || new Date().getTime();\r\n    return values;\r\n};\r\n/**\r\n * Value to use when firing local events. When writing server values, fire\r\n * local events with an approximate value, otherwise return value as-is.\r\n * @param {(Object|string|number|boolean)} value\r\n * @param {!Object} serverValues\r\n * @return {!(string|number|boolean)}\r\n */\r\nvar resolveDeferredLeafValue = function (value, existingVal, serverValues) {\r\n    if (!value || typeof value !== 'object') {\r\n        return value;\r\n    }\r\n    assert('.sv' in value, 'Unexpected leaf node or priority contents');\r\n    if (typeof value['.sv'] === 'string') {\r\n        return resolveScalarDeferredValue(value['.sv'], existingVal, serverValues);\r\n    }\r\n    else if (typeof value['.sv'] === 'object') {\r\n        return resolveComplexDeferredValue(value['.sv'], existingVal);\r\n    }\r\n    else {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(value, null, 2));\r\n    }\r\n};\r\nvar resolveScalarDeferredValue = function (op, existing, serverValues) {\r\n    switch (op) {\r\n        case 'timestamp':\r\n            return serverValues['timestamp'];\r\n        default:\r\n            assert(false, 'Unexpected server value: ' + op);\r\n    }\r\n};\r\nvar resolveComplexDeferredValue = function (op, existing, unused) {\r\n    if (!op.hasOwnProperty('increment')) {\r\n        assert(false, 'Unexpected server value: ' + JSON.stringify(op, null, 2));\r\n    }\r\n    var delta = op['increment'];\r\n    if (typeof delta !== 'number') {\r\n        assert(false, 'Unexpected increment value: ' + delta);\r\n    }\r\n    var existingNode = existing.node();\r\n    assert(existingNode !== null && typeof existingNode !== 'undefined', 'Expected ChildrenNode.EMPTY_NODE for nulls');\r\n    // Incrementing a non-number sets the value to the incremented amount\r\n    if (!existingNode.isLeafNode()) {\r\n        return delta;\r\n    }\r\n    var leaf = existingNode;\r\n    var existingVal = leaf.getValue();\r\n    if (typeof existingVal !== 'number') {\r\n        return delta;\r\n    }\r\n    // No need to do over/underflow arithmetic here because JS only handles floats under the covers\r\n    return existingVal + delta;\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the tree with the\r\n * specified generated replacement values.\r\n * @param {!Path} path path to which write is relative\r\n * @param {!Node} node new data written at path\r\n * @param {!SyncTree} syncTree current data\r\n * @param {!Object} serverValues\r\n * @return {!SparseSnapshotTree}\r\n */\r\nvar resolveDeferredValueTree = function (path, node, syncTree, serverValues) {\r\n    return resolveDeferredValue(node, new DeferredValueProvider(syncTree, path), serverValues);\r\n};\r\n/**\r\n * Recursively replace all deferred values and priorities in the node with the\r\n * specified generated replacement values.  If there are no server values in the node,\r\n * it'll be returned as-is.\r\n * @param {!Node} node\r\n * @param {!Object} serverValues\r\n * @return {!Node}\r\n */\r\nvar resolveDeferredValueSnapshot = function (node, existing, serverValues) {\r\n    return resolveDeferredValue(node, new ExistingValueProvider(existing), serverValues);\r\n};\r\nfunction resolveDeferredValue(node, existingVal, serverValues) {\r\n    var rawPri = node.getPriority().val();\r\n    var priority = resolveDeferredLeafValue(rawPri, existingVal.getImmediateChild('.priority'), serverValues);\r\n    var newNode;\r\n    if (node.isLeafNode()) {\r\n        var leafNode = node;\r\n        var value = resolveDeferredLeafValue(leafNode.getValue(), existingVal, serverValues);\r\n        if (value !== leafNode.getValue() ||\r\n            priority !== leafNode.getPriority().val()) {\r\n            return new LeafNode(value, nodeFromJSON$1(priority));\r\n        }\r\n        else {\r\n            return node;\r\n        }\r\n    }\r\n    else {\r\n        var childrenNode = node;\r\n        newNode = childrenNode;\r\n        if (priority !== childrenNode.getPriority().val()) {\r\n            newNode = newNode.updatePriority(new LeafNode(priority));\r\n        }\r\n        childrenNode.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n            var newChildNode = resolveDeferredValue(childNode, existingVal.getImmediateChild(childName), serverValues);\r\n            if (newChildNode !== childNode) {\r\n                newNode = newNode.updateImmediateChild(childName, newChildNode);\r\n            }\r\n        });\r\n        return newNode;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Helper class to store a sparse set of snapshots.\r\n */\r\nvar SparseSnapshotTree = /** @class */ (function () {\r\n    function SparseSnapshotTree() {\r\n        this.value = null;\r\n        this.children = new Map();\r\n    }\r\n    /**\r\n     * Gets the node stored at the given path if one exists.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return The retrieved node, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.find = function (path) {\r\n        if (this.value != null) {\r\n            return this.value.getChild(path);\r\n        }\r\n        else if (!path.isEmpty() && this.children.size > 0) {\r\n            var childKey = path.getFront();\r\n            path = path.popFront();\r\n            if (this.children.has(childKey)) {\r\n                var childTree = this.children.get(childKey);\r\n                return childTree.find(path);\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Stores the given node at the specified path. If there is already a node\r\n     * at a shallower path, it merges the new data into that snapshot node.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @param data The new data, or null.\r\n     */\r\n    SparseSnapshotTree.prototype.remember = function (path, data) {\r\n        if (path.isEmpty()) {\r\n            this.value = data;\r\n            this.children.clear();\r\n        }\r\n        else if (this.value !== null) {\r\n            this.value = this.value.updateChild(path, data);\r\n        }\r\n        else {\r\n            var childKey = path.getFront();\r\n            if (!this.children.has(childKey)) {\r\n                this.children.set(childKey, new SparseSnapshotTree());\r\n            }\r\n            var child = this.children.get(childKey);\r\n            path = path.popFront();\r\n            child.remember(path, data);\r\n        }\r\n    };\r\n    /**\r\n     * Purge the data at path from the cache.\r\n     *\r\n     * @param path Path to look up snapshot for.\r\n     * @return True if this node should now be removed.\r\n     */\r\n    SparseSnapshotTree.prototype.forget = function (path) {\r\n        if (path.isEmpty()) {\r\n            this.value = null;\r\n            this.children.clear();\r\n            return true;\r\n        }\r\n        else {\r\n            if (this.value !== null) {\r\n                if (this.value.isLeafNode()) {\r\n                    // We're trying to forget a node that doesn't exist\r\n                    return false;\r\n                }\r\n                else {\r\n                    var value = this.value;\r\n                    this.value = null;\r\n                    var self_1 = this;\r\n                    value.forEachChild(PRIORITY_INDEX, function (key, tree) {\r\n                        self_1.remember(new Path(key), tree);\r\n                    });\r\n                    return this.forget(path);\r\n                }\r\n            }\r\n            else if (this.children.size > 0) {\r\n                var childKey = path.getFront();\r\n                path = path.popFront();\r\n                if (this.children.has(childKey)) {\r\n                    var safeToRemove = this.children.get(childKey).forget(path);\r\n                    if (safeToRemove) {\r\n                        this.children.delete(childKey);\r\n                    }\r\n                }\r\n                return this.children.size === 0;\r\n            }\r\n            else {\r\n                return true;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Recursively iterates through all of the stored tree and calls the\r\n     * callback on each one.\r\n     *\r\n     * @param prefixPath Path to look up node for.\r\n     * @param func The function to invoke for each tree.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachTree = function (prefixPath, func) {\r\n        if (this.value !== null) {\r\n            func(prefixPath, this.value);\r\n        }\r\n        else {\r\n            this.forEachChild(function (key, tree) {\r\n                var path = new Path(prefixPath.toString() + '/' + key);\r\n                tree.forEachTree(path, func);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Iterates through each immediate child and triggers the callback.\r\n     *\r\n     * @param func The function to invoke for each child.\r\n     */\r\n    SparseSnapshotTree.prototype.forEachChild = function (func) {\r\n        this.children.forEach(function (tree, key) {\r\n            func(key, tree);\r\n        });\r\n    };\r\n    return SparseSnapshotTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n *\r\n * @enum\r\n */\r\nvar OperationType;\r\n(function (OperationType) {\r\n    OperationType[OperationType[\"OVERWRITE\"] = 0] = \"OVERWRITE\";\r\n    OperationType[OperationType[\"MERGE\"] = 1] = \"MERGE\";\r\n    OperationType[OperationType[\"ACK_USER_WRITE\"] = 2] = \"ACK_USER_WRITE\";\r\n    OperationType[OperationType[\"LISTEN_COMPLETE\"] = 3] = \"LISTEN_COMPLETE\";\r\n})(OperationType || (OperationType = {}));\r\n/**\r\n * @param {boolean} fromUser\r\n * @param {boolean} fromServer\r\n * @param {?string} queryId\r\n * @param {boolean} tagged\r\n * @constructor\r\n */\r\nvar OperationSource = /** @class */ (function () {\r\n    function OperationSource(fromUser, fromServer, queryId, tagged) {\r\n        this.fromUser = fromUser;\r\n        this.fromServer = fromServer;\r\n        this.queryId = queryId;\r\n        this.tagged = tagged;\r\n        assert(!tagged || fromServer, 'Tagged queries must be from server.');\r\n    }\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.User = new OperationSource(\r\n    /*fromUser=*/ true, false, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @const\r\n     * @type {!OperationSource}\r\n     */\r\n    OperationSource.Server = new OperationSource(false, \r\n    /*fromServer=*/ true, null, \r\n    /*tagged=*/ false);\r\n    /**\r\n     * @param {string} queryId\r\n     * @return {!OperationSource}\r\n     */\r\n    OperationSource.forServerTaggedQuery = function (queryId) {\r\n        return new OperationSource(false, \r\n        /*fromServer=*/ true, queryId, \r\n        /*tagged=*/ true);\r\n    };\r\n    return OperationSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar AckUserWrite = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree<!boolean>} affectedTree A tree containing true for each affected path. Affected paths can't overlap.\r\n     * @param {!boolean} revert\r\n     */\r\n    function AckUserWrite(\r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ affectedTree, \r\n    /** @inheritDoc */ revert) {\r\n        this.path = path;\r\n        this.affectedTree = affectedTree;\r\n        this.revert = revert;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.ACK_USER_WRITE;\r\n        /** @inheritDoc */\r\n        this.source = OperationSource.User;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    AckUserWrite.prototype.operationForChild = function (childName) {\r\n        if (!this.path.isEmpty()) {\r\n            assert(this.path.getFront() === childName, 'operationForChild called for unrelated child.');\r\n            return new AckUserWrite(this.path.popFront(), this.affectedTree, this.revert);\r\n        }\r\n        else if (this.affectedTree.value != null) {\r\n            assert(this.affectedTree.children.isEmpty(), 'affectedTree should not have overlapping affected paths.');\r\n            // All child locations are affected as well; just return same operation.\r\n            return this;\r\n        }\r\n        else {\r\n            var childTree = this.affectedTree.subtree(new Path(childName));\r\n            return new AckUserWrite(Path.Empty, childTree, this.revert);\r\n        }\r\n    };\r\n    return AckUserWrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar emptyChildrenSingleton;\r\n/**\r\n * Singleton empty children collection.\r\n *\r\n * @const\r\n * @type {!SortedMap.<string, !ImmutableTree.<?>>}\r\n */\r\nvar EmptyChildren = function () {\r\n    if (!emptyChildrenSingleton) {\r\n        emptyChildrenSingleton = new SortedMap(stringCompare);\r\n    }\r\n    return emptyChildrenSingleton;\r\n};\r\n/**\r\n * A tree with immutable elements.\r\n */\r\nvar ImmutableTree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {?T} value\r\n     * @param {SortedMap.<string, !ImmutableTree.<T>>=} children\r\n     */\r\n    function ImmutableTree(value, children) {\r\n        if (children === void 0) { children = EmptyChildren(); }\r\n        this.value = value;\r\n        this.children = children;\r\n    }\r\n    /**\r\n     * @template T\r\n     * @param {!Object.<string, !T>} obj\r\n     * @return {!ImmutableTree.<!T>}\r\n     */\r\n    ImmutableTree.fromObject = function (obj) {\r\n        var tree = ImmutableTree.Empty;\r\n        each(obj, function (childPath, childSnap) {\r\n            tree = tree.set(new Path(childPath), childSnap);\r\n        });\r\n        return tree;\r\n    };\r\n    /**\r\n     * True if the value is empty and there are no children\r\n     * @return {boolean}\r\n     */\r\n    ImmutableTree.prototype.isEmpty = function () {\r\n        return this.value === null && this.children.isEmpty();\r\n    };\r\n    /**\r\n     * Given a path and predicate, return the first node and the path to that node\r\n     * where the predicate returns true.\r\n     *\r\n     * TODO Do a perf test -- If we're creating a bunch of {path: value:} objects\r\n     * on the way back out, it may be better to pass down a pathSoFar obj.\r\n     *\r\n     * @param {!Path} relativePath The remainder of the path\r\n     * @param {function(T):boolean} predicate The predicate to satisfy to return a\r\n     *   node\r\n     * @return {?{path:!Path, value:!T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostMatchingPathAndValue = function (relativePath, predicate) {\r\n        if (this.value != null && predicate(this.value)) {\r\n            return { path: Path.Empty, value: this.value };\r\n        }\r\n        else {\r\n            if (relativePath.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = relativePath.getFront();\r\n                var child = this.children.get(front);\r\n                if (child !== null) {\r\n                    var childExistingPathAndValue = child.findRootMostMatchingPathAndValue(relativePath.popFront(), predicate);\r\n                    if (childExistingPathAndValue != null) {\r\n                        var fullPath = new Path(front).child(childExistingPathAndValue.path);\r\n                        return { path: fullPath, value: childExistingPathAndValue.value };\r\n                    }\r\n                    else {\r\n                        return null;\r\n                    }\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Find, if it exists, the shortest subpath of the given path that points a defined\r\n     * value in the tree\r\n     * @param {!Path} relativePath\r\n     * @return {?{path: !Path, value: !T}}\r\n     */\r\n    ImmutableTree.prototype.findRootMostValueAndPath = function (relativePath) {\r\n        return this.findRootMostMatchingPathAndValue(relativePath, function () { return true; });\r\n    };\r\n    /**\r\n     * @param {!Path} relativePath\r\n     * @return {!ImmutableTree.<T>} The subtree at the given path\r\n     */\r\n    ImmutableTree.prototype.subtree = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var childTree = this.children.get(front);\r\n            if (childTree !== null) {\r\n                return childTree.subtree(relativePath.popFront());\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sets a value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to set value at.\r\n     * @param {?T} toSet Value to set.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.set = function (relativePath, toSet) {\r\n        if (relativePath.isEmpty()) {\r\n            return new ImmutableTree(toSet, this.children);\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.set(relativePath.popFront(), toSet);\r\n            var newChildren = this.children.insert(front, newChild);\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Removes the value at the specified path.\r\n     *\r\n     * @param {!Path} relativePath Path to value to remove.\r\n     * @return {!ImmutableTree.<T>} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.remove = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            if (this.children.isEmpty()) {\r\n                return ImmutableTree.Empty;\r\n            }\r\n            else {\r\n                return new ImmutableTree(null, this.children);\r\n            }\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                var newChild = child.remove(relativePath.popFront());\r\n                var newChildren = void 0;\r\n                if (newChild.isEmpty()) {\r\n                    newChildren = this.children.remove(front);\r\n                }\r\n                else {\r\n                    newChildren = this.children.insert(front, newChild);\r\n                }\r\n                if (this.value === null && newChildren.isEmpty()) {\r\n                    return ImmutableTree.Empty;\r\n                }\r\n                else {\r\n                    return new ImmutableTree(this.value, newChildren);\r\n                }\r\n            }\r\n            else {\r\n                return this;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Gets a value from the tree.\r\n     *\r\n     * @param {!Path} relativePath Path to get value for.\r\n     * @return {?T} Value at path, or null.\r\n     */\r\n    ImmutableTree.prototype.get = function (relativePath) {\r\n        if (relativePath.isEmpty()) {\r\n            return this.value;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front);\r\n            if (child) {\r\n                return child.get(relativePath.popFront());\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Replace the subtree at the specified path with the given new tree.\r\n     *\r\n     * @param {!Path} relativePath Path to replace subtree for.\r\n     * @param {!ImmutableTree} newTree New tree.\r\n     * @return {!ImmutableTree} Resulting tree.\r\n     */\r\n    ImmutableTree.prototype.setTree = function (relativePath, newTree) {\r\n        if (relativePath.isEmpty()) {\r\n            return newTree;\r\n        }\r\n        else {\r\n            var front = relativePath.getFront();\r\n            var child = this.children.get(front) || ImmutableTree.Empty;\r\n            var newChild = child.setTree(relativePath.popFront(), newTree);\r\n            var newChildren = void 0;\r\n            if (newChild.isEmpty()) {\r\n                newChildren = this.children.remove(front);\r\n            }\r\n            else {\r\n                newChildren = this.children.insert(front, newChild);\r\n            }\r\n            return new ImmutableTree(this.value, newChildren);\r\n        }\r\n    };\r\n    /**\r\n     * Performs a depth first fold on this tree. Transforms a tree into a single\r\n     * value, given a function that operates on the path to a node, an optional\r\n     * current value, and a map of child names to folded subtrees\r\n     * @template V\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     */\r\n    ImmutableTree.prototype.fold = function (fn) {\r\n        return this.fold_(Path.Empty, fn);\r\n    };\r\n    /**\r\n     * Recursive helper for public-facing fold() method\r\n     * @template V\r\n     * @param {!Path} pathSoFar\r\n     * @param {function(Path, ?T, Object.<string, V>):V} fn\r\n     * @return {V}\r\n     * @private\r\n     */\r\n    ImmutableTree.prototype.fold_ = function (pathSoFar, fn) {\r\n        var accum = {};\r\n        this.children.inorderTraversal(function (childKey, childTree) {\r\n            accum[childKey] = childTree.fold_(pathSoFar.child(childKey), fn);\r\n        });\r\n        return fn(pathSoFar, this.value, accum);\r\n    };\r\n    /**\r\n     * Find the first matching value on the given path. Return the result of applying f to it.\r\n     * @template V\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T):?V} f\r\n     * @return {?V}\r\n     */\r\n    ImmutableTree.prototype.findOnPath = function (path, f) {\r\n        return this.findOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.findOnPath_ = function (pathToFollow, pathSoFar, f) {\r\n        var result = this.value ? f(pathSoFar, this.value) : false;\r\n        if (result) {\r\n            return result;\r\n        }\r\n        else {\r\n            if (pathToFollow.isEmpty()) {\r\n                return null;\r\n            }\r\n            else {\r\n                var front = pathToFollow.getFront();\r\n                var nextChild = this.children.get(front);\r\n                if (nextChild) {\r\n                    return nextChild.findOnPath_(pathToFollow.popFront(), pathSoFar.child(front), f);\r\n                }\r\n                else {\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!function(!Path, !T)} f\r\n     * @returns {!ImmutableTree.<T>}\r\n     */\r\n    ImmutableTree.prototype.foreachOnPath = function (path, f) {\r\n        return this.foreachOnPath_(path, Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreachOnPath_ = function (pathToFollow, currentRelativePath, f) {\r\n        if (pathToFollow.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            if (this.value) {\r\n                f(currentRelativePath, this.value);\r\n            }\r\n            var front = pathToFollow.getFront();\r\n            var nextChild = this.children.get(front);\r\n            if (nextChild) {\r\n                return nextChild.foreachOnPath_(pathToFollow.popFront(), currentRelativePath.child(front), f);\r\n            }\r\n            else {\r\n                return ImmutableTree.Empty;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Calls the given function for each node in the tree that has a value.\r\n     *\r\n     * @param {function(!Path, !T)} f A function to be called with\r\n     *   the path from the root of the tree to a node, and the value at that node.\r\n     *   Called in depth-first order.\r\n     */\r\n    ImmutableTree.prototype.foreach = function (f) {\r\n        this.foreach_(Path.Empty, f);\r\n    };\r\n    ImmutableTree.prototype.foreach_ = function (currentRelativePath, f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            childTree.foreach_(currentRelativePath.child(childName), f);\r\n        });\r\n        if (this.value) {\r\n            f(currentRelativePath, this.value);\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {function(string, !T)} f\r\n     */\r\n    ImmutableTree.prototype.foreachChild = function (f) {\r\n        this.children.inorderTraversal(function (childName, childTree) {\r\n            if (childTree.value) {\r\n                f(childName, childTree.value);\r\n            }\r\n        });\r\n    };\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ImmutableTree.Empty = new ImmutableTree(null);\r\n    return ImmutableTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar ListenComplete = /** @class */ (function () {\r\n    function ListenComplete(source, path) {\r\n        this.source = source;\r\n        this.path = path;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.LISTEN_COMPLETE;\r\n    }\r\n    ListenComplete.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new ListenComplete(this.source, Path.Empty);\r\n        }\r\n        else {\r\n            return new ListenComplete(this.source, this.path.popFront());\r\n        }\r\n    };\r\n    return ListenComplete;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!Node} snap\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Overwrite = /** @class */ (function () {\r\n    function Overwrite(source, path, snap) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.snap = snap;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.OVERWRITE;\r\n    }\r\n    Overwrite.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            return new Overwrite(this.source, Path.Empty, this.snap.getImmediateChild(childName));\r\n        }\r\n        else {\r\n            return new Overwrite(this.source, this.path.popFront(), this.snap);\r\n        }\r\n    };\r\n    return Overwrite;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @param {!OperationSource} source\r\n * @param {!Path} path\r\n * @param {!ImmutableTree.<!Node>} children\r\n * @constructor\r\n * @implements {Operation}\r\n */\r\nvar Merge = /** @class */ (function () {\r\n    function Merge(\r\n    /** @inheritDoc */ source, \r\n    /** @inheritDoc */ path, \r\n    /** @inheritDoc */ children) {\r\n        this.source = source;\r\n        this.path = path;\r\n        this.children = children;\r\n        /** @inheritDoc */\r\n        this.type = OperationType.MERGE;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.operationForChild = function (childName) {\r\n        if (this.path.isEmpty()) {\r\n            var childTree = this.children.subtree(new Path(childName));\r\n            if (childTree.isEmpty()) {\r\n                // This child is unaffected\r\n                return null;\r\n            }\r\n            else if (childTree.value) {\r\n                // We have a snapshot for the child in question.  This becomes an overwrite of the child.\r\n                return new Overwrite(this.source, Path.Empty, childTree.value);\r\n            }\r\n            else {\r\n                // This is a merge at a deeper level\r\n                return new Merge(this.source, Path.Empty, childTree);\r\n            }\r\n        }\r\n        else {\r\n            assert(this.path.getFront() === childName, \"Can't get a merge for a child not on the path of the operation\");\r\n            return new Merge(this.source, this.path.popFront(), this.children);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    Merge.prototype.toString = function () {\r\n        return ('Operation(' +\r\n            this.path +\r\n            ': ' +\r\n            this.source.toString() +\r\n            ' merge: ' +\r\n            this.children.toString() +\r\n            ')');\r\n    };\r\n    return Merge;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A cache node only stores complete children. Additionally it holds a flag whether the node can be considered fully\r\n * initialized in the sense that we know at one point in time this represented a valid state of the world, e.g.\r\n * initialized with data from the server, or a complete overwrite by the client. The filtered flag also tracks\r\n * whether a node potentially had children removed due to a filter.\r\n */\r\nvar CacheNode = /** @class */ (function () {\r\n    /**\r\n     * @param {!Node} node_\r\n     * @param {boolean} fullyInitialized_\r\n     * @param {boolean} filtered_\r\n     */\r\n    function CacheNode(node_, fullyInitialized_, filtered_) {\r\n        this.node_ = node_;\r\n        this.fullyInitialized_ = fullyInitialized_;\r\n        this.filtered_ = filtered_;\r\n    }\r\n    /**\r\n     * Returns whether this node was fully initialized with either server data or a complete overwrite by the client\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFullyInitialized = function () {\r\n        return this.fullyInitialized_;\r\n    };\r\n    /**\r\n     * Returns whether this node is potentially missing children due to a filter applied to the node\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isFiltered = function () {\r\n        return this.filtered_;\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForPath = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this.isFullyInitialized() && !this.filtered_;\r\n        }\r\n        var childKey = path.getFront();\r\n        return this.isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!string} key\r\n     * @return {boolean}\r\n     */\r\n    CacheNode.prototype.isCompleteForChild = function (key) {\r\n        return ((this.isFullyInitialized() && !this.filtered_) || this.node_.hasChild(key));\r\n    };\r\n    /**\r\n     * @return {!Node}\r\n     */\r\n    CacheNode.prototype.getNode = function () {\r\n        return this.node_;\r\n    };\r\n    return CacheNode;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Stores the data we have cached for a view.\r\n *\r\n * serverSnap is the cached server data, eventSnap is the cached event data (server data plus any local writes).\r\n *\r\n * @constructor\r\n */\r\nvar ViewCache = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!CacheNode} eventCache_\r\n     * @param {!CacheNode} serverCache_\r\n     */\r\n    function ViewCache(eventCache_, serverCache_) {\r\n        this.eventCache_ = eventCache_;\r\n        this.serverCache_ = serverCache_;\r\n    }\r\n    /**\r\n     * @param {!Node} eventSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateEventSnap = function (eventSnap, complete, filtered) {\r\n        return new ViewCache(new CacheNode(eventSnap, complete, filtered), this.serverCache_);\r\n    };\r\n    /**\r\n     * @param {!Node} serverSnap\r\n     * @param {boolean} complete\r\n     * @param {boolean} filtered\r\n     * @return {!ViewCache}\r\n     */\r\n    ViewCache.prototype.updateServerSnap = function (serverSnap, complete, filtered) {\r\n        return new ViewCache(this.eventCache_, new CacheNode(serverSnap, complete, filtered));\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getEventCache = function () {\r\n        return this.eventCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteEventSnap = function () {\r\n        return this.eventCache_.isFullyInitialized()\r\n            ? this.eventCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @return {!CacheNode}\r\n     */\r\n    ViewCache.prototype.getServerCache = function () {\r\n        return this.serverCache_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    ViewCache.prototype.getCompleteServerSnap = function () {\r\n        return this.serverCache_.isFullyInitialized()\r\n            ? this.serverCache_.getNode()\r\n            : null;\r\n    };\r\n    /**\r\n     * @const\r\n     * @type {ViewCache}\r\n     */\r\n    ViewCache.Empty = new ViewCache(new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false), new CacheNode(ChildrenNode.EMPTY_NODE, \r\n    /*fullyInitialized=*/ false, \r\n    /*filtered=*/ false));\r\n    return ViewCache;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n * @param {!string} type The event type\r\n * @param {!Node} snapshotNode The data\r\n * @param {string=} childName The name for this child, if it's a child event\r\n * @param {Node=} oldSnap Used for intermediate processing of child changed events\r\n * @param {string=} prevName The name for the previous child, if applicable\r\n */\r\nvar Change = /** @class */ (function () {\r\n    function Change(type, snapshotNode, childName, oldSnap, prevName) {\r\n        this.type = type;\r\n        this.snapshotNode = snapshotNode;\r\n        this.childName = childName;\r\n        this.oldSnap = oldSnap;\r\n        this.prevName = prevName;\r\n    }\r\n    /**\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.valueChange = function (snapshot) {\r\n        return new Change(Change.VALUE, snapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childAddedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_ADDED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childRemovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_REMOVED, snapshot, childKey);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} newSnapshot\r\n     * @param {!Node} oldSnapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childChangedChange = function (childKey, newSnapshot, oldSnapshot) {\r\n        return new Change(Change.CHILD_CHANGED, newSnapshot, childKey, oldSnapshot);\r\n    };\r\n    /**\r\n     * @param {string} childKey\r\n     * @param {!Node} snapshot\r\n     * @return {!Change}\r\n     */\r\n    Change.childMovedChange = function (childKey, snapshot) {\r\n        return new Change(Change.CHILD_MOVED, snapshot, childKey);\r\n    };\r\n    //event types\r\n    /** Event type for a child added */\r\n    Change.CHILD_ADDED = 'child_added';\r\n    /** Event type for a child removed */\r\n    Change.CHILD_REMOVED = 'child_removed';\r\n    /** Event type for a child changed */\r\n    Change.CHILD_CHANGED = 'child_changed';\r\n    /** Event type for a child moved */\r\n    Change.CHILD_MOVED = 'child_moved';\r\n    /** Event type for a value change */\r\n    Change.VALUE = 'value';\r\n    return Change;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Doesn't really filter nodes but applies an index to the node and keeps track of any changes\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n * @param {!Index} index\r\n */\r\nvar IndexedFilter = /** @class */ (function () {\r\n    function IndexedFilter(index_) {\r\n        this.index_ = index_;\r\n    }\r\n    IndexedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        assert(snap.isIndexed(this.index_), 'A node must be indexed if only a child is updated');\r\n        var oldChild = snap.getImmediateChild(key);\r\n        // Check if anything actually changed.\r\n        if (oldChild.getChild(affectedPath).equals(newChild.getChild(affectedPath))) {\r\n            // There's an edge case where a child can enter or leave the view because affectedPath was set to null.\r\n            // In this case, affectedPath will appear null in both the old and new snapshots.  So we need\r\n            // to avoid treating these cases as \"nothing changed.\"\r\n            if (oldChild.isEmpty() === newChild.isEmpty()) {\r\n                // Nothing changed.\r\n                // This assert should be valid, but it's expensive (can dominate perf testing) so don't actually do it.\r\n                //assert(oldChild.equals(newChild), 'Old and new snapshots should be equal.');\r\n                return snap;\r\n            }\r\n        }\r\n        if (optChangeAccumulator != null) {\r\n            if (newChild.isEmpty()) {\r\n                if (snap.hasChild(key)) {\r\n                    optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, oldChild));\r\n                }\r\n                else {\r\n                    assert(snap.isLeafNode(), 'A child remove without an old child only makes sense on a leaf node');\r\n                }\r\n            }\r\n            else if (oldChild.isEmpty()) {\r\n                optChangeAccumulator.trackChildChange(Change.childAddedChange(key, newChild));\r\n            }\r\n            else {\r\n                optChangeAccumulator.trackChildChange(Change.childChangedChange(key, newChild, oldChild));\r\n            }\r\n        }\r\n        if (snap.isLeafNode() && newChild.isEmpty()) {\r\n            return snap;\r\n        }\r\n        else {\r\n            // Make sure the node is indexed\r\n            return snap.updateImmediateChild(key, newChild).withIndex(this.index_);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (optChangeAccumulator != null) {\r\n            if (!oldSnap.isLeafNode()) {\r\n                oldSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (!newSnap.hasChild(key)) {\r\n                        optChangeAccumulator.trackChildChange(Change.childRemovedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n            if (!newSnap.isLeafNode()) {\r\n                newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                    if (oldSnap.hasChild(key)) {\r\n                        var oldChild = oldSnap.getImmediateChild(key);\r\n                        if (!oldChild.equals(childNode)) {\r\n                            optChangeAccumulator.trackChildChange(Change.childChangedChange(key, childNode, oldChild));\r\n                        }\r\n                    }\r\n                    else {\r\n                        optChangeAccumulator.trackChildChange(Change.childAddedChange(key, childNode));\r\n                    }\r\n                });\r\n            }\r\n        }\r\n        return newSnap.withIndex(this.index_);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        if (oldSnap.isEmpty()) {\r\n            return ChildrenNode.EMPTY_NODE;\r\n        }\r\n        else {\r\n            return oldSnap.updatePriority(newPriority);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.filtersNodes = function () {\r\n        return false;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndexedFilter = function () {\r\n        return this;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    IndexedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    return IndexedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ChildChangeAccumulator = /** @class */ (function () {\r\n    function ChildChangeAccumulator() {\r\n        this.changeMap = new Map();\r\n    }\r\n    ChildChangeAccumulator.prototype.trackChildChange = function (change) {\r\n        var type = change.type;\r\n        var childKey = change.childName;\r\n        assert(type === Change.CHILD_ADDED ||\r\n            type === Change.CHILD_CHANGED ||\r\n            type === Change.CHILD_REMOVED, 'Only child changes supported for tracking');\r\n        assert(childKey !== '.priority', 'Only non-priority child changes can be tracked.');\r\n        var oldChange = this.changeMap.get(childKey);\r\n        if (oldChange) {\r\n            var oldType = oldChange.type;\r\n            if (type === Change.CHILD_ADDED && oldType === Change.CHILD_REMOVED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.delete(childKey);\r\n            }\r\n            else if (type === Change.CHILD_REMOVED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childRemovedChange(childKey, oldChange.oldSnap));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_ADDED) {\r\n                this.changeMap.set(childKey, Change.childAddedChange(childKey, change.snapshotNode));\r\n            }\r\n            else if (type === Change.CHILD_CHANGED &&\r\n                oldType === Change.CHILD_CHANGED) {\r\n                this.changeMap.set(childKey, Change.childChangedChange(childKey, change.snapshotNode, oldChange.oldSnap));\r\n            }\r\n            else {\r\n                throw assertionError('Illegal combination of changes: ' +\r\n                    change +\r\n                    ' occurred after ' +\r\n                    oldChange);\r\n            }\r\n        }\r\n        else {\r\n            this.changeMap.set(childKey, change);\r\n        }\r\n    };\r\n    ChildChangeAccumulator.prototype.getChanges = function () {\r\n        return Array.from(this.changeMap.values());\r\n    };\r\n    return ChildChangeAccumulator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of CompleteChildSource that never returns any additional children\r\n *\r\n * @private\r\n * @constructor\r\n * @implements CompleteChildSource\r\n */\r\n// eslint-disable-next-line @typescript-eslint/naming-convention\r\nvar NoCompleteChildSource_ = /** @class */ (function () {\r\n    function NoCompleteChildSource_() {\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getCompleteChild = function (childKey) {\r\n        return null;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    NoCompleteChildSource_.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        return null;\r\n    };\r\n    return NoCompleteChildSource_;\r\n}());\r\n/**\r\n * Singleton instance.\r\n * @const\r\n * @type {!CompleteChildSource}\r\n */\r\nvar NO_COMPLETE_CHILD_SOURCE = new NoCompleteChildSource_();\r\n/**\r\n * An implementation of CompleteChildSource that uses a WriteTree in addition to any other server data or\r\n * old event caches available to calculate complete children.\r\n *\r\n *\r\n * @implements CompleteChildSource\r\n */\r\nvar WriteTreeCompleteChildSource = /** @class */ (function () {\r\n    /**\r\n     * @param {!WriteTreeRef} writes_\r\n     * @param {!ViewCache} viewCache_\r\n     * @param {?Node} optCompleteServerCache_\r\n     */\r\n    function WriteTreeCompleteChildSource(writes_, viewCache_, optCompleteServerCache_) {\r\n        if (optCompleteServerCache_ === void 0) { optCompleteServerCache_ = null; }\r\n        this.writes_ = writes_;\r\n        this.viewCache_ = viewCache_;\r\n        this.optCompleteServerCache_ = optCompleteServerCache_;\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getCompleteChild = function (childKey) {\r\n        var node = this.viewCache_.getEventCache();\r\n        if (node.isCompleteForChild(childKey)) {\r\n            return node.getNode().getImmediateChild(childKey);\r\n        }\r\n        else {\r\n            var serverNode = this.optCompleteServerCache_ != null\r\n                ? new CacheNode(this.optCompleteServerCache_, true, false)\r\n                : this.viewCache_.getServerCache();\r\n            return this.writes_.calcCompleteChild(childKey, serverNode);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    WriteTreeCompleteChildSource.prototype.getChildAfterChild = function (index, child, reverse) {\r\n        var completeServerData = this.optCompleteServerCache_ != null\r\n            ? this.optCompleteServerCache_\r\n            : this.viewCache_.getCompleteServerSnap();\r\n        var nodes = this.writes_.calcIndexedSlice(completeServerData, child, 1, reverse, index);\r\n        if (nodes.length === 0) {\r\n            return null;\r\n        }\r\n        else {\r\n            return nodes[0];\r\n        }\r\n    };\r\n    return WriteTreeCompleteChildSource;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @constructor\r\n * @struct\r\n */\r\nvar ProcessorResult = /** @class */ (function () {\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Array.<!Change>} changes\r\n     */\r\n    function ProcessorResult(viewCache, changes) {\r\n        this.viewCache = viewCache;\r\n        this.changes = changes;\r\n    }\r\n    return ProcessorResult;\r\n}());\r\n/**\r\n * @constructor\r\n */\r\nvar ViewProcessor = /** @class */ (function () {\r\n    /**\r\n     * @param {!NodeFilter} filter_\r\n     */\r\n    function ViewProcessor(filter_) {\r\n        this.filter_ = filter_;\r\n    }\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     */\r\n    ViewProcessor.prototype.assertIndexed = function (viewCache) {\r\n        assert(viewCache.getEventCache().getNode().isIndexed(this.filter_.getIndex()), 'Event snap not indexed');\r\n        assert(viewCache.getServerCache().getNode().isIndexed(this.filter_.getIndex()), 'Server snap not indexed');\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @return {!ProcessorResult}\r\n     */\r\n    ViewProcessor.prototype.applyOperation = function (oldViewCache, operation, writesCache, completeCache) {\r\n        var accumulator = new ChildChangeAccumulator();\r\n        var newViewCache, filterServerNode;\r\n        if (operation.type === OperationType.OVERWRITE) {\r\n            var overwrite = operation;\r\n            if (overwrite.source.fromUser) {\r\n                newViewCache = this.applyUserOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                assert(overwrite.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered  and the\r\n                // update is not at the root in which case it is ok (and necessary) to mark the node unfiltered\r\n                // again\r\n                filterServerNode =\r\n                    overwrite.source.tagged ||\r\n                        (oldViewCache.getServerCache().isFiltered() &&\r\n                            !overwrite.path.isEmpty());\r\n                newViewCache = this.applyServerOverwrite_(oldViewCache, overwrite.path, overwrite.snap, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.MERGE) {\r\n            var merge = operation;\r\n            if (merge.source.fromUser) {\r\n                newViewCache = this.applyUserMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                assert(merge.source.fromServer, 'Unknown source.');\r\n                // We filter the node if it's a tagged update or the node has been previously filtered\r\n                filterServerNode =\r\n                    merge.source.tagged || oldViewCache.getServerCache().isFiltered();\r\n                newViewCache = this.applyServerMerge_(oldViewCache, merge.path, merge.children, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.ACK_USER_WRITE) {\r\n            var ackUserWrite = operation;\r\n            if (!ackUserWrite.revert) {\r\n                newViewCache = this.ackUserWrite_(oldViewCache, ackUserWrite.path, ackUserWrite.affectedTree, writesCache, completeCache, accumulator);\r\n            }\r\n            else {\r\n                newViewCache = this.revertUserWrite_(oldViewCache, ackUserWrite.path, writesCache, completeCache, accumulator);\r\n            }\r\n        }\r\n        else if (operation.type === OperationType.LISTEN_COMPLETE) {\r\n            newViewCache = this.listenComplete_(oldViewCache, operation.path, writesCache, accumulator);\r\n        }\r\n        else {\r\n            throw assertionError('Unknown operation type: ' + operation.type);\r\n        }\r\n        var changes = accumulator.getChanges();\r\n        ViewProcessor.maybeAddValueEvent_(oldViewCache, newViewCache, changes);\r\n        return new ProcessorResult(newViewCache, changes);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!ViewCache} newViewCache\r\n     * @param {!Array.<!Change>} accumulator\r\n     * @private\r\n     */\r\n    ViewProcessor.maybeAddValueEvent_ = function (oldViewCache, newViewCache, accumulator) {\r\n        var eventSnap = newViewCache.getEventCache();\r\n        if (eventSnap.isFullyInitialized()) {\r\n            var isLeafOrEmpty = eventSnap.getNode().isLeafNode() || eventSnap.getNode().isEmpty();\r\n            var oldCompleteSnap = oldViewCache.getCompleteEventSnap();\r\n            if (accumulator.length > 0 ||\r\n                !oldViewCache.getEventCache().isFullyInitialized() ||\r\n                (isLeafOrEmpty &&\r\n                    !eventSnap.getNode().equals(/** @type {!Node} */ oldCompleteSnap)) ||\r\n                !eventSnap.getNode().getPriority().equals(oldCompleteSnap.getPriority())) {\r\n                accumulator.push(Change.valueChange(\r\n                /** @type {!Node} */ newViewCache.getCompleteEventSnap()));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} changePath\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!CompleteChildSource} source\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.generateEventCacheAfterServerEvent_ = function (viewCache, changePath, writesCache, source, accumulator) {\r\n        var oldEventSnap = viewCache.getEventCache();\r\n        if (writesCache.shadowingWrite(changePath) != null) {\r\n            // we have a shadowing write, ignore changes\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var newEventCache = void 0, serverNode = void 0;\r\n            if (changePath.isEmpty()) {\r\n                // TODO: figure out how this plays with \"sliding ack windows\"\r\n                assert(viewCache.getServerCache().isFullyInitialized(), 'If change path is empty, we must have complete server data');\r\n                if (viewCache.getServerCache().isFiltered()) {\r\n                    // We need to special case this, because we need to only apply writes to complete children, or\r\n                    // we might end up raising events for incomplete children. If the server data is filtered deep\r\n                    // writes cannot be guaranteed to be complete\r\n                    var serverCache = viewCache.getCompleteServerSnap();\r\n                    var completeChildren = serverCache instanceof ChildrenNode\r\n                        ? serverCache\r\n                        : ChildrenNode.EMPTY_NODE;\r\n                    var completeEventChildren = writesCache.calcCompleteEventChildren(completeChildren);\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeEventChildren, accumulator);\r\n                }\r\n                else {\r\n                    var completeNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    newEventCache = this.filter_.updateFullNode(viewCache.getEventCache().getNode(), completeNode, accumulator);\r\n                }\r\n            }\r\n            else {\r\n                var childKey = changePath.getFront();\r\n                if (childKey === '.priority') {\r\n                    assert(changePath.getLength() === 1, \"Can't have a priority with additional path components\");\r\n                    var oldEventNode = oldEventSnap.getNode();\r\n                    serverNode = viewCache.getServerCache().getNode();\r\n                    // we might have overwrites for this priority\r\n                    var updatedPriority = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventNode, serverNode);\r\n                    if (updatedPriority != null) {\r\n                        newEventCache = this.filter_.updatePriority(oldEventNode, updatedPriority);\r\n                    }\r\n                    else {\r\n                        // priority didn't change, keep old node\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n                else {\r\n                    var childChangePath = changePath.popFront();\r\n                    // update child\r\n                    var newEventChild = void 0;\r\n                    if (oldEventSnap.isCompleteForChild(childKey)) {\r\n                        serverNode = viewCache.getServerCache().getNode();\r\n                        var eventChildUpdate = writesCache.calcEventCacheAfterServerOverwrite(changePath, oldEventSnap.getNode(), serverNode);\r\n                        if (eventChildUpdate != null) {\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey)\r\n                                .updateChild(childChangePath, eventChildUpdate);\r\n                        }\r\n                        else {\r\n                            // Nothing changed, just keep the old child\r\n                            newEventChild = oldEventSnap\r\n                                .getNode()\r\n                                .getImmediateChild(childKey);\r\n                        }\r\n                    }\r\n                    else {\r\n                        newEventChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                    }\r\n                    if (newEventChild != null) {\r\n                        newEventCache = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newEventChild, childChangePath, source, accumulator);\r\n                    }\r\n                    else {\r\n                        // no complete child available or no change\r\n                        newEventCache = oldEventSnap.getNode();\r\n                    }\r\n                }\r\n            }\r\n            return viewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized() || changePath.isEmpty(), this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, filterServerNode, accumulator) {\r\n        var oldServerSnap = oldViewCache.getServerCache();\r\n        var newServerCache;\r\n        var serverFilter = filterServerNode\r\n            ? this.filter_\r\n            : this.filter_.getIndexedFilter();\r\n        if (changePath.isEmpty()) {\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), changedSnap, null);\r\n        }\r\n        else if (serverFilter.filtersNodes() && !oldServerSnap.isFiltered()) {\r\n            // we want to filter the server node, but we didn't filter the server node yet, so simulate a full update\r\n            var newServerNode = oldServerSnap\r\n                .getNode()\r\n                .updateChild(changePath, changedSnap);\r\n            newServerCache = serverFilter.updateFullNode(oldServerSnap.getNode(), newServerNode, null);\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (!oldServerSnap.isCompleteForPath(changePath) &&\r\n                changePath.getLength() > 1) {\r\n                // We don't update incomplete nodes with updates intended for other listeners\r\n                return oldViewCache;\r\n            }\r\n            var childChangePath = changePath.popFront();\r\n            var childNode = oldServerSnap.getNode().getImmediateChild(childKey);\r\n            var newChildNode = childNode.updateChild(childChangePath, changedSnap);\r\n            if (childKey === '.priority') {\r\n                newServerCache = serverFilter.updatePriority(oldServerSnap.getNode(), newChildNode);\r\n            }\r\n            else {\r\n                newServerCache = serverFilter.updateChild(oldServerSnap.getNode(), childKey, newChildNode, childChangePath, NO_COMPLETE_CHILD_SOURCE, null);\r\n            }\r\n        }\r\n        var newViewCache = oldViewCache.updateServerSnap(newServerCache, oldServerSnap.isFullyInitialized() || changePath.isEmpty(), serverFilter.filtersNodes());\r\n        var source = new WriteTreeCompleteChildSource(writesCache, newViewCache, completeCache);\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, changePath, writesCache, source, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} oldViewCache\r\n     * @param {!Path} changePath\r\n     * @param {!Node} changedSnap\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserOverwrite_ = function (oldViewCache, changePath, changedSnap, writesCache, completeCache, accumulator) {\r\n        var oldEventSnap = oldViewCache.getEventCache();\r\n        var newViewCache, newEventCache;\r\n        var source = new WriteTreeCompleteChildSource(writesCache, oldViewCache, completeCache);\r\n        if (changePath.isEmpty()) {\r\n            newEventCache = this.filter_.updateFullNode(oldViewCache.getEventCache().getNode(), changedSnap, accumulator);\r\n            newViewCache = oldViewCache.updateEventSnap(newEventCache, true, this.filter_.filtersNodes());\r\n        }\r\n        else {\r\n            var childKey = changePath.getFront();\r\n            if (childKey === '.priority') {\r\n                newEventCache = this.filter_.updatePriority(oldViewCache.getEventCache().getNode(), changedSnap);\r\n                newViewCache = oldViewCache.updateEventSnap(newEventCache, oldEventSnap.isFullyInitialized(), oldEventSnap.isFiltered());\r\n            }\r\n            else {\r\n                var childChangePath = changePath.popFront();\r\n                var oldChild = oldEventSnap.getNode().getImmediateChild(childKey);\r\n                var newChild = void 0;\r\n                if (childChangePath.isEmpty()) {\r\n                    // Child overwrite, we can replace the child\r\n                    newChild = changedSnap;\r\n                }\r\n                else {\r\n                    var childNode = source.getCompleteChild(childKey);\r\n                    if (childNode != null) {\r\n                        if (childChangePath.getBack() === '.priority' &&\r\n                            childNode.getChild(childChangePath.parent()).isEmpty()) {\r\n                            // This is a priority update on an empty node. If this node exists on the server, the\r\n                            // server will send down the priority in the update, so ignore for now\r\n                            newChild = childNode;\r\n                        }\r\n                        else {\r\n                            newChild = childNode.updateChild(childChangePath, changedSnap);\r\n                        }\r\n                    }\r\n                    else {\r\n                        // There is no complete child node available\r\n                        newChild = ChildrenNode.EMPTY_NODE;\r\n                    }\r\n                }\r\n                if (!oldChild.equals(newChild)) {\r\n                    var newEventSnap = this.filter_.updateChild(oldEventSnap.getNode(), childKey, newChild, childChangePath, source, accumulator);\r\n                    newViewCache = oldViewCache.updateEventSnap(newEventSnap, oldEventSnap.isFullyInitialized(), this.filter_.filtersNodes());\r\n                }\r\n                else {\r\n                    newViewCache = oldViewCache;\r\n                }\r\n            }\r\n        }\r\n        return newViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {string} childKey\r\n     * @return {boolean}\r\n     * @private\r\n     */\r\n    ViewProcessor.cacheHasChild_ = function (viewCache, childKey) {\r\n        return viewCache.getEventCache().isCompleteForChild(childKey);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyUserMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, accumulator) {\r\n        var _this = this;\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        changedChildren.foreach(function (relativePath, childNode) {\r\n            var writePath = path.child(relativePath);\r\n            if (!ViewProcessor.cacheHasChild_(viewCache, writePath.getFront())) {\r\n                curViewCache = _this.applyUserOverwrite_(curViewCache, writePath, childNode, writesCache, serverCache, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!Node} node\r\n     * @param {ImmutableTree.<!Node>} merge\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyMerge_ = function (node, merge) {\r\n        merge.foreach(function (relativePath, childNode) {\r\n            node = node.updateChild(relativePath, childNode);\r\n        });\r\n        return node;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!ImmutableTree.<!Node>} changedChildren\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache\r\n     * @param {boolean} filterServerNode\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.applyServerMerge_ = function (viewCache, path, changedChildren, writesCache, serverCache, filterServerNode, accumulator) {\r\n        var _this = this;\r\n        // If we don't have a cache yet, this merge was intended for a previously listen in the same location. Ignore it and\r\n        // wait for the complete data update coming soon.\r\n        if (viewCache.getServerCache().getNode().isEmpty() &&\r\n            !viewCache.getServerCache().isFullyInitialized()) {\r\n            return viewCache;\r\n        }\r\n        // HACK: In the case of a limit query, there may be some changes that bump things out of the\r\n        // window leaving room for new items.  It's important we process these changes first, so we\r\n        // iterate the changes twice, first processing any that affect items currently in view.\r\n        // TODO: I consider an item \"in view\" if cacheHasChild is true, which checks both the server\r\n        // and event snap.  I'm not sure if this will result in edge cases when a child is in one but\r\n        // not the other.\r\n        var curViewCache = viewCache;\r\n        var viewMergeTree;\r\n        if (path.isEmpty()) {\r\n            viewMergeTree = changedChildren;\r\n        }\r\n        else {\r\n            viewMergeTree = ImmutableTree.Empty.setTree(path, changedChildren);\r\n        }\r\n        var serverNode = viewCache.getServerCache().getNode();\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (serverNode.hasChild(childKey)) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        viewMergeTree.children.inorderTraversal(function (childKey, childMergeTree) {\r\n            var isUnknownDeepMerge = !viewCache.getServerCache().isCompleteForChild(childKey) &&\r\n                childMergeTree.value == null;\r\n            if (!serverNode.hasChild(childKey) && !isUnknownDeepMerge) {\r\n                var serverChild = viewCache\r\n                    .getServerCache()\r\n                    .getNode()\r\n                    .getImmediateChild(childKey);\r\n                var newChild = _this.applyMerge_(serverChild, childMergeTree);\r\n                curViewCache = _this.applyServerOverwrite_(curViewCache, new Path(childKey), newChild, writesCache, serverCache, filterServerNode, accumulator);\r\n            }\r\n        });\r\n        return curViewCache;\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} ackPath\r\n     * @param {!ImmutableTree<!boolean>} affectedTree\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.ackUserWrite_ = function (viewCache, ackPath, affectedTree, writesCache, completeCache, accumulator) {\r\n        if (writesCache.shadowingWrite(ackPath) != null) {\r\n            return viewCache;\r\n        }\r\n        // Only filter server node if it is currently filtered\r\n        var filterServerNode = viewCache.getServerCache().isFiltered();\r\n        // Essentially we'll just get our existing server cache for the affected paths and re-apply it as a server update\r\n        // now that it won't be shadowed.\r\n        var serverCache = viewCache.getServerCache();\r\n        if (affectedTree.value != null) {\r\n            // This is an overwrite.\r\n            if ((ackPath.isEmpty() && serverCache.isFullyInitialized()) ||\r\n                serverCache.isCompleteForPath(ackPath)) {\r\n                return this.applyServerOverwrite_(viewCache, ackPath, serverCache.getNode().getChild(ackPath), writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else if (ackPath.isEmpty()) {\r\n                // This is a goofy edge case where we are acking data at this location but don't have full data.  We\r\n                // should just re-apply whatever we have in our cache as a merge.\r\n                var changedChildren_1 = ImmutableTree.Empty;\r\n                serverCache.getNode().forEachChild(KEY_INDEX, function (name, node) {\r\n                    changedChildren_1 = changedChildren_1.set(new Path(name), node);\r\n                });\r\n                return this.applyServerMerge_(viewCache, ackPath, changedChildren_1, writesCache, completeCache, filterServerNode, accumulator);\r\n            }\r\n            else {\r\n                return viewCache;\r\n            }\r\n        }\r\n        else {\r\n            // This is a merge.\r\n            var changedChildren_2 = ImmutableTree.Empty;\r\n            affectedTree.foreach(function (mergePath, value) {\r\n                var serverCachePath = ackPath.child(mergePath);\r\n                if (serverCache.isCompleteForPath(serverCachePath)) {\r\n                    changedChildren_2 = changedChildren_2.set(mergePath, serverCache.getNode().getChild(serverCachePath));\r\n                }\r\n            });\r\n            return this.applyServerMerge_(viewCache, ackPath, changedChildren_2, writesCache, completeCache, filterServerNode, accumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.listenComplete_ = function (viewCache, path, writesCache, accumulator) {\r\n        var oldServerNode = viewCache.getServerCache();\r\n        var newViewCache = viewCache.updateServerSnap(oldServerNode.getNode(), oldServerNode.isFullyInitialized() || path.isEmpty(), oldServerNode.isFiltered());\r\n        return this.generateEventCacheAfterServerEvent_(newViewCache, path, writesCache, NO_COMPLETE_CHILD_SOURCE, accumulator);\r\n    };\r\n    /**\r\n     * @param {!ViewCache} viewCache\r\n     * @param {!Path} path\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @param {!ChildChangeAccumulator} accumulator\r\n     * @return {!ViewCache}\r\n     * @private\r\n     */\r\n    ViewProcessor.prototype.revertUserWrite_ = function (viewCache, path, writesCache, completeServerCache, accumulator) {\r\n        var complete;\r\n        if (writesCache.shadowingWrite(path) != null) {\r\n            return viewCache;\r\n        }\r\n        else {\r\n            var source = new WriteTreeCompleteChildSource(writesCache, viewCache, completeServerCache);\r\n            var oldEventCache = viewCache.getEventCache().getNode();\r\n            var newEventCache = void 0;\r\n            if (path.isEmpty() || path.getFront() === '.priority') {\r\n                var newNode = void 0;\r\n                if (viewCache.getServerCache().isFullyInitialized()) {\r\n                    newNode = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                }\r\n                else {\r\n                    var serverChildren = viewCache.getServerCache().getNode();\r\n                    assert(serverChildren instanceof ChildrenNode, 'serverChildren would be complete if leaf node');\r\n                    newNode = writesCache.calcCompleteEventChildren(serverChildren);\r\n                }\r\n                newNode = newNode;\r\n                newEventCache = this.filter_.updateFullNode(oldEventCache, newNode, accumulator);\r\n            }\r\n            else {\r\n                var childKey = path.getFront();\r\n                var newChild = writesCache.calcCompleteChild(childKey, viewCache.getServerCache());\r\n                if (newChild == null &&\r\n                    viewCache.getServerCache().isCompleteForChild(childKey)) {\r\n                    newChild = oldEventCache.getImmediateChild(childKey);\r\n                }\r\n                if (newChild != null) {\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, newChild, path.popFront(), source, accumulator);\r\n                }\r\n                else if (viewCache.getEventCache().getNode().hasChild(childKey)) {\r\n                    // No complete child available, delete the existing one, if any\r\n                    newEventCache = this.filter_.updateChild(oldEventCache, childKey, ChildrenNode.EMPTY_NODE, path.popFront(), source, accumulator);\r\n                }\r\n                else {\r\n                    newEventCache = oldEventCache;\r\n                }\r\n                if (newEventCache.isEmpty() &&\r\n                    viewCache.getServerCache().isFullyInitialized()) {\r\n                    // We might have reverted all child writes. Maybe the old event was a leaf node\r\n                    complete = writesCache.calcCompleteEventCache(viewCache.getCompleteServerSnap());\r\n                    if (complete.isLeafNode()) {\r\n                        newEventCache = this.filter_.updateFullNode(newEventCache, complete, accumulator);\r\n                    }\r\n                }\r\n            }\r\n            complete =\r\n                viewCache.getServerCache().isFullyInitialized() ||\r\n                    writesCache.shadowingWrite(Path.Empty) != null;\r\n            return viewCache.updateEventSnap(newEventCache, complete, this.filter_.filtersNodes());\r\n        }\r\n    };\r\n    return ViewProcessor;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An EventGenerator is used to convert \"raw\" changes (Change) as computed by the\r\n * CacheDiffer into actual events (Event) that can be raised.  See generateEventsForChanges()\r\n * for details.\r\n *\r\n * @constructor\r\n */\r\nvar EventGenerator = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     */\r\n    function EventGenerator(query_) {\r\n        this.query_ = query_;\r\n        /**\r\n         * @private\r\n         * @type {!Index}\r\n         */\r\n        this.index_ = this.query_.getQueryParams().getIndex();\r\n    }\r\n    /**\r\n     * Given a set of raw changes (no moved events and prevName not specified yet), and a set of\r\n     * EventRegistrations that should be notified of these changes, generate the actual events to be raised.\r\n     *\r\n     * Notes:\r\n     *  - child_moved events will be synthesized at this time for any child_changed events that affect\r\n     *    our index.\r\n     *  - prevName will be calculated based on the index ordering.\r\n     *\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {!Array.<!EventRegistration>} eventRegistrations\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    EventGenerator.prototype.generateEventsForChanges = function (changes, eventCache, eventRegistrations) {\r\n        var _this = this;\r\n        var events = [];\r\n        var moves = [];\r\n        changes.forEach(function (change) {\r\n            if (change.type === Change.CHILD_CHANGED &&\r\n                _this.index_.indexedValueChanged(change.oldSnap, change.snapshotNode)) {\r\n                moves.push(Change.childMovedChange(change.childName, change.snapshotNode));\r\n            }\r\n        });\r\n        this.generateEventsForType_(events, Change.CHILD_REMOVED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_ADDED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_MOVED, moves, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.CHILD_CHANGED, changes, eventRegistrations, eventCache);\r\n        this.generateEventsForType_(events, Change.VALUE, changes, eventRegistrations, eventCache);\r\n        return events;\r\n    };\r\n    /**\r\n     * Given changes of a single change type, generate the corresponding events.\r\n     *\r\n     * @param {!Array.<!Event>} events\r\n     * @param {!string} eventType\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Array.<!EventRegistration>} registrations\r\n     * @param {!Node} eventCache\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.generateEventsForType_ = function (events, eventType, changes, registrations, eventCache) {\r\n        var _this = this;\r\n        var filteredChanges = changes.filter(function (change) { return change.type === eventType; });\r\n        filteredChanges.sort(this.compareChanges_.bind(this));\r\n        filteredChanges.forEach(function (change) {\r\n            var materializedChange = _this.materializeSingleChange_(change, eventCache);\r\n            registrations.forEach(function (registration) {\r\n                if (registration.respondsTo(change.type)) {\r\n                    events.push(registration.createEvent(materializedChange, _this.query_));\r\n                }\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * @param {!Change} change\r\n     * @param {!Node} eventCache\r\n     * @return {!Change}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.materializeSingleChange_ = function (change, eventCache) {\r\n        if (change.type === 'value' || change.type === 'child_removed') {\r\n            return change;\r\n        }\r\n        else {\r\n            change.prevName = eventCache.getPredecessorChildName(\r\n            /** @type {!string} */\r\n            change.childName, change.snapshotNode, this.index_);\r\n            return change;\r\n        }\r\n    };\r\n    /**\r\n     * @param {!Change} a\r\n     * @param {!Change} b\r\n     * @return {number}\r\n     * @private\r\n     */\r\n    EventGenerator.prototype.compareChanges_ = function (a, b) {\r\n        if (a.childName == null || b.childName == null) {\r\n            throw assertionError('Should only compare child_ events.');\r\n        }\r\n        var aWrapped = new NamedNode(a.childName, a.snapshotNode);\r\n        var bWrapped = new NamedNode(b.childName, b.snapshotNode);\r\n        return this.index_.compare(aWrapped, bWrapped);\r\n    };\r\n    return EventGenerator;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * A view represents a specific location and query that has 1 or more event registrations.\r\n *\r\n * It does several things:\r\n *  - Maintains the list of event registrations for this location/query.\r\n *  - Maintains a cache of the data visible for this location/query.\r\n *  - Applies new operations (via applyOperation), updates the cache, and based on the event\r\n *    registrations returns the set of events to be raised.\r\n * @constructor\r\n */\r\nvar View = /** @class */ (function () {\r\n    /**\r\n     *\r\n     * @param {!Query} query_\r\n     * @param {!ViewCache} initialViewCache\r\n     */\r\n    function View(query_, initialViewCache) {\r\n        this.query_ = query_;\r\n        this.eventRegistrations_ = [];\r\n        var params = this.query_.getQueryParams();\r\n        var indexFilter = new IndexedFilter(params.getIndex());\r\n        var filter = params.getNodeFilter();\r\n        /**\r\n         * @type {ViewProcessor}\r\n         * @private\r\n         */\r\n        this.processor_ = new ViewProcessor(filter);\r\n        var initialServerCache = initialViewCache.getServerCache();\r\n        var initialEventCache = initialViewCache.getEventCache();\r\n        // Don't filter server node with other filter than index, wait for tagged listen\r\n        var serverSnap = indexFilter.updateFullNode(ChildrenNode.EMPTY_NODE, initialServerCache.getNode(), null);\r\n        var eventSnap = filter.updateFullNode(ChildrenNode.EMPTY_NODE, initialEventCache.getNode(), null);\r\n        var newServerCache = new CacheNode(serverSnap, initialServerCache.isFullyInitialized(), indexFilter.filtersNodes());\r\n        var newEventCache = new CacheNode(eventSnap, initialEventCache.isFullyInitialized(), filter.filtersNodes());\r\n        /**\r\n         * @type {!ViewCache}\r\n         * @private\r\n         */\r\n        this.viewCache_ = new ViewCache(newEventCache, newServerCache);\r\n        /**\r\n         * @type {!EventGenerator}\r\n         * @private\r\n         */\r\n        this.eventGenerator_ = new EventGenerator(this.query_);\r\n    }\r\n    /**\r\n     * @return {!Query}\r\n     */\r\n    View.prototype.getQuery = function () {\r\n        return this.query_;\r\n    };\r\n    /**\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getServerCache = function () {\r\n        return this.viewCache_.getServerCache().getNode();\r\n    };\r\n    /**\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    View.prototype.getCompleteServerCache = function (path) {\r\n        var cache = this.viewCache_.getCompleteServerSnap();\r\n        if (cache) {\r\n            // If this isn't a \"loadsAllData\" view, then cache isn't actually a complete cache and\r\n            // we need to see if it contains the child we're interested in.\r\n            if (this.query_.getQueryParams().loadsAllData() ||\r\n                (!path.isEmpty() && !cache.getImmediateChild(path.getFront()).isEmpty())) {\r\n                return cache.getChild(path);\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    View.prototype.isEmpty = function () {\r\n        return this.eventRegistrations_.length === 0;\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} eventRegistration\r\n     */\r\n    View.prototype.addEventRegistration = function (eventRegistration) {\r\n        this.eventRegistrations_.push(eventRegistration);\r\n    };\r\n    /**\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {!Array.<!Event>} Cancel events, if cancelError was provided.\r\n     */\r\n    View.prototype.removeEventRegistration = function (eventRegistration, cancelError) {\r\n        var cancelEvents = [];\r\n        if (cancelError) {\r\n            assert(eventRegistration == null, 'A cancel should cancel all event registrations.');\r\n            var path_1 = this.query_.path;\r\n            this.eventRegistrations_.forEach(function (registration) {\r\n                cancelError /** @type {!Error} */ = cancelError;\r\n                var maybeEvent = registration.createCancelEvent(cancelError, path_1);\r\n                if (maybeEvent) {\r\n                    cancelEvents.push(maybeEvent);\r\n                }\r\n            });\r\n        }\r\n        if (eventRegistration) {\r\n            var remaining = [];\r\n            for (var i = 0; i < this.eventRegistrations_.length; ++i) {\r\n                var existing = this.eventRegistrations_[i];\r\n                if (!existing.matches(eventRegistration)) {\r\n                    remaining.push(existing);\r\n                }\r\n                else if (eventRegistration.hasAnyCallback()) {\r\n                    // We're removing just this one\r\n                    remaining = remaining.concat(this.eventRegistrations_.slice(i + 1));\r\n                    break;\r\n                }\r\n            }\r\n            this.eventRegistrations_ = remaining;\r\n        }\r\n        else {\r\n            this.eventRegistrations_ = [];\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Applies the given Operation, updates our cache, and returns the appropriate events.\r\n     *\r\n     * @param {!Operation} operation\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} completeServerCache\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.applyOperation = function (operation, writesCache, completeServerCache) {\r\n        if (operation.type === OperationType.MERGE &&\r\n            operation.source.queryId !== null) {\r\n            assert(this.viewCache_.getCompleteServerSnap(), 'We should always have a full cache before handling merges');\r\n            assert(this.viewCache_.getCompleteEventSnap(), 'Missing event cache, even though we have a server cache');\r\n        }\r\n        var oldViewCache = this.viewCache_;\r\n        var result = this.processor_.applyOperation(oldViewCache, operation, writesCache, completeServerCache);\r\n        this.processor_.assertIndexed(result.viewCache);\r\n        assert(result.viewCache.getServerCache().isFullyInitialized() ||\r\n            !oldViewCache.getServerCache().isFullyInitialized(), 'Once a server snap is complete, it should never go back');\r\n        this.viewCache_ = result.viewCache;\r\n        return this.generateEventsForChanges_(result.changes, result.viewCache.getEventCache().getNode(), null);\r\n    };\r\n    /**\r\n     * @param {!EventRegistration} registration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.getInitialEvents = function (registration) {\r\n        var eventSnap = this.viewCache_.getEventCache();\r\n        var initialChanges = [];\r\n        if (!eventSnap.getNode().isLeafNode()) {\r\n            var eventNode = eventSnap.getNode();\r\n            eventNode.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n                initialChanges.push(Change.childAddedChange(key, childNode));\r\n            });\r\n        }\r\n        if (eventSnap.isFullyInitialized()) {\r\n            initialChanges.push(Change.valueChange(eventSnap.getNode()));\r\n        }\r\n        return this.generateEventsForChanges_(initialChanges, eventSnap.getNode(), registration);\r\n    };\r\n    /**\r\n     * @private\r\n     * @param {!Array.<!Change>} changes\r\n     * @param {!Node} eventCache\r\n     * @param {EventRegistration=} eventRegistration\r\n     * @return {!Array.<!Event>}\r\n     */\r\n    View.prototype.generateEventsForChanges_ = function (changes, eventCache, eventRegistration) {\r\n        var registrations = eventRegistration\r\n            ? [eventRegistration]\r\n            : this.eventRegistrations_;\r\n        return this.eventGenerator_.generateEventsForChanges(changes, eventCache, registrations);\r\n    };\r\n    return View;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar __referenceConstructor$1;\r\n/**\r\n * SyncPoint represents a single location in a SyncTree with 1 or more event registrations, meaning we need to\r\n * maintain 1 or more Views at this location to cache server data and raise appropriate events for server changes\r\n * and user writes (set, transaction, update).\r\n *\r\n * It's responsible for:\r\n *  - Maintaining the set of 1 or more views necessary at this location (a SyncPoint with 0 views should be removed).\r\n *  - Proxying user / server operations to the views as appropriate (i.e. applyServerOverwrite,\r\n *    applyUserOverwrite, etc.)\r\n */\r\nvar SyncPoint = /** @class */ (function () {\r\n    function SyncPoint() {\r\n        /**\r\n         * The Views being tracked at this location in the tree, stored as a map where the key is a\r\n         * queryId and the value is the View for that query.\r\n         *\r\n         * NOTE: This list will be quite small (usually 1, but perhaps 2 or 3; any more is an odd use case).\r\n         */\r\n        this.views = new Map();\r\n    }\r\n    Object.defineProperty(SyncPoint, \"__referenceConstructor\", {\r\n        get: function () {\r\n            assert(__referenceConstructor$1, 'Reference.ts has not been loaded');\r\n            return __referenceConstructor$1;\r\n        },\r\n        set: function (val) {\r\n            assert(!__referenceConstructor$1, '__referenceConstructor has already been defined');\r\n            __referenceConstructor$1 = val;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    SyncPoint.prototype.isEmpty = function () {\r\n        return this.views.size === 0;\r\n    };\r\n    SyncPoint.prototype.applyOperation = function (operation, writesCache, optCompleteServerCache) {\r\n        var e_1, _a;\r\n        var queryId = operation.source.queryId;\r\n        if (queryId !== null) {\r\n            var view = this.views.get(queryId);\r\n            assert(view != null, 'SyncTree gave us an op for an invalid query.');\r\n            return view.applyOperation(operation, writesCache, optCompleteServerCache);\r\n        }\r\n        else {\r\n            var events = [];\r\n            try {\r\n                for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var view = _c.value;\r\n                    events = events.concat(view.applyOperation(operation, writesCache, optCompleteServerCache));\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @param {!Query} query\r\n     * @param {!EventRegistration} eventRegistration\r\n     * @param {!WriteTreeRef} writesCache\r\n     * @param {?Node} serverCache Complete server cache, if we have it.\r\n     * @param {boolean} serverCacheComplete\r\n     * @return {!Array.<!Event>} Events to raise.\r\n     */\r\n    SyncPoint.prototype.addEventRegistration = function (query, eventRegistration, writesCache, serverCache, serverCacheComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var view = this.views.get(queryId);\r\n        if (!view) {\r\n            // TODO: make writesCache take flag for complete server node\r\n            var eventCache = writesCache.calcCompleteEventCache(serverCacheComplete ? serverCache : null);\r\n            var eventCacheComplete = false;\r\n            if (eventCache) {\r\n                eventCacheComplete = true;\r\n            }\r\n            else if (serverCache instanceof ChildrenNode) {\r\n                eventCache = writesCache.calcCompleteEventChildren(serverCache);\r\n                eventCacheComplete = false;\r\n            }\r\n            else {\r\n                eventCache = ChildrenNode.EMPTY_NODE;\r\n                eventCacheComplete = false;\r\n            }\r\n            var viewCache = new ViewCache(new CacheNode(\r\n            /** @type {!Node} */ eventCache, eventCacheComplete, false), new CacheNode(\r\n            /** @type {!Node} */ serverCache, serverCacheComplete, false));\r\n            view = new View(query, viewCache);\r\n            this.views.set(queryId, view);\r\n        }\r\n        // This is guaranteed to exist now, we just created anything that was missing\r\n        view.addEventRegistration(eventRegistration);\r\n        return view.getInitialEvents(eventRegistration);\r\n    };\r\n    /**\r\n     * Remove event callback(s).  Return cancelEvents if a cancelError is specified.\r\n     *\r\n     * If query is the default query, we'll check all views for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified view(s).\r\n     *\r\n     * @param {!Query} query\r\n     * @param {?EventRegistration} eventRegistration If null, remove all callbacks.\r\n     * @param {Error=} cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return {{removed:!Array.<!Query>, events:!Array.<!Event>}} removed queries and any cancel events\r\n     */\r\n    SyncPoint.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var e_2, _a;\r\n        var queryId = query.queryIdentifier();\r\n        var removed = [];\r\n        var cancelEvents = [];\r\n        var hadCompleteView = this.hasCompleteView();\r\n        if (queryId === 'default') {\r\n            try {\r\n                // When you do ref.off(...), we search all views for the registration to remove.\r\n                for (var _b = __values(this.views.entries()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var _d = __read(_c.value, 2), viewQueryId = _d[0], view = _d[1];\r\n                    cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                    if (view.isEmpty()) {\r\n                        this.views.delete(viewQueryId);\r\n                        // We'll deal with complete views later.\r\n                        if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                            removed.push(view.getQuery());\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_2) throw e_2.error; }\r\n            }\r\n        }\r\n        else {\r\n            // remove the callback from the specific view.\r\n            var view = this.views.get(queryId);\r\n            if (view) {\r\n                cancelEvents = cancelEvents.concat(view.removeEventRegistration(eventRegistration, cancelError));\r\n                if (view.isEmpty()) {\r\n                    this.views.delete(queryId);\r\n                    // We'll deal with complete views later.\r\n                    if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                        removed.push(view.getQuery());\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (hadCompleteView && !this.hasCompleteView()) {\r\n            // We removed our last complete view.\r\n            removed.push(new SyncPoint.__referenceConstructor(query.repo, query.path));\r\n        }\r\n        return { removed: removed, events: cancelEvents };\r\n    };\r\n    SyncPoint.prototype.getQueryViews = function () {\r\n        var e_3, _a;\r\n        var result = [];\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (!view.getQuery().getQueryParams().loadsAllData()) {\r\n                    result.push(view);\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n        return result;\r\n    };\r\n    /**\r\n     * @param path The path to the desired complete snapshot\r\n     * @return A complete cache, if it exists\r\n     */\r\n    SyncPoint.prototype.getCompleteServerCache = function (path) {\r\n        var e_4, _a;\r\n        var serverCache = null;\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                serverCache = serverCache || view.getCompleteServerCache(path);\r\n            }\r\n        }\r\n        catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_4) throw e_4.error; }\r\n        }\r\n        return serverCache;\r\n    };\r\n    SyncPoint.prototype.viewForQuery = function (query) {\r\n        var params = query.getQueryParams();\r\n        if (params.loadsAllData()) {\r\n            return this.getCompleteView();\r\n        }\r\n        else {\r\n            var queryId = query.queryIdentifier();\r\n            return this.views.get(queryId);\r\n        }\r\n    };\r\n    SyncPoint.prototype.viewExistsForQuery = function (query) {\r\n        return this.viewForQuery(query) != null;\r\n    };\r\n    SyncPoint.prototype.hasCompleteView = function () {\r\n        return this.getCompleteView() != null;\r\n    };\r\n    SyncPoint.prototype.getCompleteView = function () {\r\n        var e_5, _a;\r\n        try {\r\n            for (var _b = __values(this.views.values()), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                var view = _c.value;\r\n                if (view.getQuery().getQueryParams().loadsAllData()) {\r\n                    return view;\r\n                }\r\n            }\r\n        }\r\n        catch (e_5_1) { e_5 = { error: e_5_1 }; }\r\n        finally {\r\n            try {\r\n                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n            }\r\n            finally { if (e_5) throw e_5.error; }\r\n        }\r\n        return null;\r\n    };\r\n    return SyncPoint;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class holds a collection of writes that can be applied to nodes in unison. It abstracts away the logic with\r\n * dealing with priority writes and multiple nested writes. At any given path there is only allowed to be one write\r\n * modifying that path. Any write to an existing path or shadowing an existing path will modify that existing write\r\n * to reflect the write added.\r\n */\r\nvar CompoundWrite = /** @class */ (function () {\r\n    function CompoundWrite(writeTree_) {\r\n        this.writeTree_ = writeTree_;\r\n    }\r\n    CompoundWrite.prototype.addWrite = function (path, node) {\r\n        if (path.isEmpty()) {\r\n            return new CompoundWrite(new ImmutableTree(node));\r\n        }\r\n        else {\r\n            var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n            if (rootmost != null) {\r\n                var rootMostPath = rootmost.path;\r\n                var value = rootmost.value;\r\n                var relativePath = Path.relativePath(rootMostPath, path);\r\n                value = value.updateChild(relativePath, node);\r\n                return new CompoundWrite(this.writeTree_.set(rootMostPath, value));\r\n            }\r\n            else {\r\n                var subtree = new ImmutableTree(node);\r\n                var newWriteTree = this.writeTree_.setTree(path, subtree);\r\n                return new CompoundWrite(newWriteTree);\r\n            }\r\n        }\r\n    };\r\n    CompoundWrite.prototype.addWrites = function (path, updates) {\r\n        var newWrite = this;\r\n        each(updates, function (childKey, node) {\r\n            newWrite = newWrite.addWrite(path.child(childKey), node);\r\n        });\r\n        return newWrite;\r\n    };\r\n    /**\r\n     * Will remove a write at the given path and deeper paths. This will <em>not</em> modify a write at a higher\r\n     * location, which must be removed by calling this method with that path.\r\n     *\r\n     * @param path The path at which a write and all deeper writes should be removed\r\n     * @return {!CompoundWrite} The new CompoundWrite with the removed path\r\n     */\r\n    CompoundWrite.prototype.removeWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return CompoundWrite.Empty;\r\n        }\r\n        else {\r\n            var newWriteTree = this.writeTree_.setTree(path, ImmutableTree.Empty);\r\n            return new CompoundWrite(newWriteTree);\r\n        }\r\n    };\r\n    /**\r\n     * Returns whether this CompoundWrite will fully overwrite a node at a given location and can therefore be\r\n     * considered \"complete\".\r\n     *\r\n     * @param path The path to check for\r\n     * @return Whether there is a complete write at that path\r\n     */\r\n    CompoundWrite.prototype.hasCompleteWrite = function (path) {\r\n        return this.getCompleteNode(path) != null;\r\n    };\r\n    /**\r\n     * Returns a node for a path if and only if the node is a \"complete\" overwrite at that path. This will not aggregate\r\n     * writes from deeper paths, but will return child nodes from a more shallow path.\r\n     *\r\n     * @param path The path to get a complete write\r\n     * @return The node if complete at that path, or null otherwise.\r\n     */\r\n    CompoundWrite.prototype.getCompleteNode = function (path) {\r\n        var rootmost = this.writeTree_.findRootMostValueAndPath(path);\r\n        if (rootmost != null) {\r\n            return this.writeTree_\r\n                .get(rootmost.path)\r\n                .getChild(Path.relativePath(rootmost.path, path));\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    /**\r\n     * Returns all children that are guaranteed to be a complete overwrite.\r\n     *\r\n     * @return A list of all complete children.\r\n     */\r\n    CompoundWrite.prototype.getCompleteChildren = function () {\r\n        var children = [];\r\n        var node = this.writeTree_.value;\r\n        if (node != null) {\r\n            // If it's a leaf node, it has no children; so nothing to do.\r\n            if (!node.isLeafNode()) {\r\n                node.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                    children.push(new NamedNode(childName, childNode));\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            this.writeTree_.children.inorderTraversal(function (childName, childTree) {\r\n                if (childTree.value != null) {\r\n                    children.push(new NamedNode(childName, childTree.value));\r\n                }\r\n            });\r\n        }\r\n        return children;\r\n    };\r\n    CompoundWrite.prototype.childCompoundWrite = function (path) {\r\n        if (path.isEmpty()) {\r\n            return this;\r\n        }\r\n        else {\r\n            var shadowingNode = this.getCompleteNode(path);\r\n            if (shadowingNode != null) {\r\n                return new CompoundWrite(new ImmutableTree(shadowingNode));\r\n            }\r\n            else {\r\n                return new CompoundWrite(this.writeTree_.subtree(path));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns true if this CompoundWrite is empty and therefore does not modify any nodes.\r\n     * @return Whether this CompoundWrite is empty\r\n     */\r\n    CompoundWrite.prototype.isEmpty = function () {\r\n        return this.writeTree_.isEmpty();\r\n    };\r\n    /**\r\n     * Applies this CompoundWrite to a node. The node is returned with all writes from this CompoundWrite applied to the\r\n     * node\r\n     * @param node The node to apply this CompoundWrite to\r\n     * @return The node with all writes applied\r\n     */\r\n    CompoundWrite.prototype.apply = function (node) {\r\n        return applySubtreeWrite(Path.Empty, this.writeTree_, node);\r\n    };\r\n    CompoundWrite.Empty = new CompoundWrite(new ImmutableTree(null));\r\n    return CompoundWrite;\r\n}());\r\nfunction applySubtreeWrite(relativePath, writeTree, node) {\r\n    if (writeTree.value != null) {\r\n        // Since there a write is always a leaf, we're done here\r\n        return node.updateChild(relativePath, writeTree.value);\r\n    }\r\n    else {\r\n        var priorityWrite_1 = null;\r\n        writeTree.children.inorderTraversal(function (childKey, childTree) {\r\n            if (childKey === '.priority') {\r\n                // Apply priorities at the end so we don't update priorities for either empty nodes or forget\r\n                // to apply priorities to empty nodes that are later filled\r\n                assert(childTree.value !== null, 'Priority writes must always be leaf nodes');\r\n                priorityWrite_1 = childTree.value;\r\n            }\r\n            else {\r\n                node = applySubtreeWrite(relativePath.child(childKey), childTree, node);\r\n            }\r\n        });\r\n        // If there was a priority write, we only apply it if the node is not empty\r\n        if (!node.getChild(relativePath).isEmpty() && priorityWrite_1 !== null) {\r\n            node = node.updateChild(relativePath.child('.priority'), priorityWrite_1);\r\n        }\r\n        return node;\r\n    }\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * WriteTree tracks all pending user-initiated writes and has methods to calculate the result of merging them\r\n * with underlying server data (to create \"event cache\" data).  Pending writes are added with addOverwrite()\r\n * and addMerge(), and removed with removeWrite().\r\n *\r\n * @constructor\r\n */\r\nvar WriteTree = /** @class */ (function () {\r\n    function WriteTree() {\r\n        /**\r\n         * A tree tracking the result of applying all visible writes.  This does not include transactions with\r\n         * applyLocally=false or writes that are completely shadowed by other writes.\r\n         *\r\n         * @type {!CompoundWrite}\r\n         * @private\r\n         */\r\n        this.visibleWrites_ = CompoundWrite.Empty;\r\n        /**\r\n         * A list of all pending writes, regardless of visibility and shadowed-ness.  Used to calculate arbitrary\r\n         * sets of the changed data, such as hidden writes (from transactions) or changes with certain writes excluded (also\r\n         * used by transactions).\r\n         *\r\n         * @type {!Array.<!WriteRecord>}\r\n         * @private\r\n         */\r\n        this.allWrites_ = [];\r\n        this.lastWriteId_ = -1;\r\n    }\r\n    /**\r\n     * Create a new WriteTreeRef for the given path. For use with a new sync point at the given path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTree.prototype.childWrites = function (path) {\r\n        return new WriteTreeRef(path, this);\r\n    };\r\n    /**\r\n     * Record a new overwrite from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Node} snap\r\n     * @param {!number} writeId\r\n     * @param {boolean=} visible This is set to false by some transactions. It should be excluded from event caches\r\n     */\r\n    WriteTree.prototype.addOverwrite = function (path, snap, writeId, visible) {\r\n        assert(writeId > this.lastWriteId_, 'Stacking an older write on top of newer ones');\r\n        if (visible === undefined) {\r\n            visible = true;\r\n        }\r\n        this.allWrites_.push({\r\n            path: path,\r\n            snap: snap,\r\n            writeId: writeId,\r\n            visible: visible\r\n        });\r\n        if (visible) {\r\n            this.visibleWrites_ = this.visibleWrites_.addWrite(path, snap);\r\n        }\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * Record a new merge from user code.\r\n     *\r\n     * @param {!Path} path\r\n     * @param {!Object.<string, !Node>} changedChildren\r\n     * @param {!number} writeId\r\n     */\r\n    WriteTree.prototype.addMerge = function (path, changedChildren, writeId) {\r\n        assert(writeId > this.lastWriteId_, 'Stacking an older merge on top of newer ones');\r\n        this.allWrites_.push({\r\n            path: path,\r\n            children: changedChildren,\r\n            writeId: writeId,\r\n            visible: true\r\n        });\r\n        this.visibleWrites_ = this.visibleWrites_.addWrites(path, changedChildren);\r\n        this.lastWriteId_ = writeId;\r\n    };\r\n    /**\r\n     * @param {!number} writeId\r\n     * @return {?WriteRecord}\r\n     */\r\n    WriteTree.prototype.getWrite = function (writeId) {\r\n        for (var i = 0; i < this.allWrites_.length; i++) {\r\n            var record = this.allWrites_[i];\r\n            if (record.writeId === writeId) {\r\n                return record;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n    /**\r\n     * Remove a write (either an overwrite or merge) that has been successfully acknowledge by the server. Recalculates\r\n     * the tree if necessary.  We return true if it may have been visible, meaning views need to reevaluate.\r\n     *\r\n     * @param {!number} writeId\r\n     * @return {boolean} true if the write may have been visible (meaning we'll need to reevaluate / raise\r\n     * events as a result).\r\n     */\r\n    WriteTree.prototype.removeWrite = function (writeId) {\r\n        // Note: disabling this check. It could be a transaction that preempted another transaction, and thus was applied\r\n        // out of order.\r\n        //const validClear = revert || this.allWrites_.length === 0 || writeId <= this.allWrites_[0].writeId;\r\n        //assert(validClear, \"Either we don't have this write, or it's the first one in the queue\");\r\n        var _this = this;\r\n        var idx = this.allWrites_.findIndex(function (s) {\r\n            return s.writeId === writeId;\r\n        });\r\n        assert(idx >= 0, 'removeWrite called with nonexistent writeId.');\r\n        var writeToRemove = this.allWrites_[idx];\r\n        this.allWrites_.splice(idx, 1);\r\n        var removedWriteWasVisible = writeToRemove.visible;\r\n        var removedWriteOverlapsWithOtherWrites = false;\r\n        var i = this.allWrites_.length - 1;\r\n        while (removedWriteWasVisible && i >= 0) {\r\n            var currentWrite = this.allWrites_[i];\r\n            if (currentWrite.visible) {\r\n                if (i >= idx &&\r\n                    this.recordContainsPath_(currentWrite, writeToRemove.path)) {\r\n                    // The removed write was completely shadowed by a subsequent write.\r\n                    removedWriteWasVisible = false;\r\n                }\r\n                else if (writeToRemove.path.contains(currentWrite.path)) {\r\n                    // Either we're covering some writes or they're covering part of us (depending on which came first).\r\n                    removedWriteOverlapsWithOtherWrites = true;\r\n                }\r\n            }\r\n            i--;\r\n        }\r\n        if (!removedWriteWasVisible) {\r\n            return false;\r\n        }\r\n        else if (removedWriteOverlapsWithOtherWrites) {\r\n            // There's some shadowing going on. Just rebuild the visible writes from scratch.\r\n            this.resetTree_();\r\n            return true;\r\n        }\r\n        else {\r\n            // There's no shadowing.  We can safely just remove the write(s) from visibleWrites.\r\n            if (writeToRemove.snap) {\r\n                this.visibleWrites_ = this.visibleWrites_.removeWrite(writeToRemove.path);\r\n            }\r\n            else {\r\n                var children = writeToRemove.children;\r\n                each(children, function (childName) {\r\n                    _this.visibleWrites_ = _this.visibleWrites_.removeWrite(writeToRemove.path.child(childName));\r\n                });\r\n            }\r\n            return true;\r\n        }\r\n    };\r\n    /**\r\n     * Return a complete snapshot for the given path if there's visible write data at that path, else null.\r\n     * No server data is considered.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.getCompleteWriteData = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * Given optional, underlying server data, and an optional set of constraints (exclude some sets, include hidden\r\n     * writes), attempt to calculate a complete snapshot for the given path\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude An optional set to be excluded\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventCache = function (treePath, completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        if (!writeIdsToExclude && !includeHiddenWrites) {\r\n            var shadowingNode = this.visibleWrites_.getCompleteNode(treePath);\r\n            if (shadowingNode != null) {\r\n                return shadowingNode;\r\n            }\r\n            else {\r\n                var subMerge = this.visibleWrites_.childCompoundWrite(treePath);\r\n                if (subMerge.isEmpty()) {\r\n                    return completeServerCache;\r\n                }\r\n                else if (completeServerCache == null &&\r\n                    !subMerge.hasCompleteWrite(Path.Empty)) {\r\n                    // We wouldn't have a complete snapshot, since there's no underlying data and no complete shadow\r\n                    return null;\r\n                }\r\n                else {\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return subMerge.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            if (!includeHiddenWrites && merge.isEmpty()) {\r\n                return completeServerCache;\r\n            }\r\n            else {\r\n                // If the server cache is null, and we don't have a complete cache, we need to return null\r\n                if (!includeHiddenWrites &&\r\n                    completeServerCache == null &&\r\n                    !merge.hasCompleteWrite(Path.Empty)) {\r\n                    return null;\r\n                }\r\n                else {\r\n                    var filter = function (write) {\r\n                        return ((write.visible || includeHiddenWrites) &&\r\n                            (!writeIdsToExclude ||\r\n                                !~writeIdsToExclude.indexOf(write.writeId)) &&\r\n                            (write.path.contains(treePath) || treePath.contains(write.path)));\r\n                    };\r\n                    var mergeAtPath = WriteTree.layerTree_(this.allWrites_, filter, treePath);\r\n                    var layeredCache = completeServerCache || ChildrenNode.EMPTY_NODE;\r\n                    return mergeAtPath.apply(layeredCache);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * With optional, underlying server data, attempt to return a children node of children that we have complete data for.\r\n     * Used when creating new views, to pre-fill their complete event children snapshot.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTree.prototype.calcCompleteEventChildren = function (treePath, completeServerChildren) {\r\n        var completeChildren = ChildrenNode.EMPTY_NODE;\r\n        var topLevelSet = this.visibleWrites_.getCompleteNode(treePath);\r\n        if (topLevelSet) {\r\n            if (!topLevelSet.isLeafNode()) {\r\n                // we're shadowing everything. Return the children.\r\n                topLevelSet.forEachChild(PRIORITY_INDEX, function (childName, childSnap) {\r\n                    completeChildren = completeChildren.updateImmediateChild(childName, childSnap);\r\n                });\r\n            }\r\n            return completeChildren;\r\n        }\r\n        else if (completeServerChildren) {\r\n            // Layer any children we have on top of this\r\n            // We know we don't have a top-level set, so just enumerate existing children\r\n            var merge_1 = this.visibleWrites_.childCompoundWrite(treePath);\r\n            completeServerChildren.forEachChild(PRIORITY_INDEX, function (childName, childNode) {\r\n                var node = merge_1\r\n                    .childCompoundWrite(new Path(childName))\r\n                    .apply(childNode);\r\n                completeChildren = completeChildren.updateImmediateChild(childName, node);\r\n            });\r\n            // Add any complete children we have from the set\r\n            merge_1.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n        else {\r\n            // We don't have anything to layer on top of. Layer on any children we have\r\n            // Note that we can return an empty snap if we have a defined delete\r\n            var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n            merge.getCompleteChildren().forEach(function (namedNode) {\r\n                completeChildren = completeChildren.updateImmediateChild(namedNode.name, namedNode.node);\r\n            });\r\n            return completeChildren;\r\n        }\r\n    };\r\n    /**\r\n     * Given that the underlying server data has updated, determine what, if anything, needs to be\r\n     * applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!Path} childPath\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcEventCacheAfterServerOverwrite = function (treePath, childPath, existingEventSnap, existingServerSnap) {\r\n        assert(existingEventSnap || existingServerSnap, 'Either existingEventSnap or existingServerSnap must exist');\r\n        var path = treePath.child(childPath);\r\n        if (this.visibleWrites_.hasCompleteWrite(path)) {\r\n            // At this point we can probably guarantee that we're in case 2, meaning no events\r\n            // May need to check visibility while doing the findRootMostValueAndPath call\r\n            return null;\r\n        }\r\n        else {\r\n            // No complete shadowing. We're either partially shadowing or not shadowing at all.\r\n            var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n            if (childMerge.isEmpty()) {\r\n                // We're not shadowing at all. Case 1\r\n                return existingServerSnap.getChild(childPath);\r\n            }\r\n            else {\r\n                // This could be more efficient if the serverNode + updates doesn't change the eventSnap\r\n                // However this is tricky to find out, since user updates don't necessary change the server\r\n                // snap, e.g. priority updates on empty nodes, or deep deletes. Another special case is if the server\r\n                // adds nodes, but doesn't change any existing writes. It is therefore not enough to\r\n                // only check if the updates change the serverNode.\r\n                // Maybe check if the merge tree contains these special cases and only do a full overwrite in that case?\r\n                return childMerge.apply(existingServerSnap.getChild(childPath));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!Path} treePath\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTree.prototype.calcCompleteChild = function (treePath, childKey, existingServerSnap) {\r\n        var path = treePath.child(childKey);\r\n        var shadowingNode = this.visibleWrites_.getCompleteNode(path);\r\n        if (shadowingNode != null) {\r\n            return shadowingNode;\r\n        }\r\n        else {\r\n            if (existingServerSnap.isCompleteForChild(childKey)) {\r\n                var childMerge = this.visibleWrites_.childCompoundWrite(path);\r\n                return childMerge.apply(existingServerSnap.getNode().getImmediateChild(childKey));\r\n            }\r\n            else {\r\n                return null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     */\r\n    WriteTree.prototype.shadowingWrite = function (path) {\r\n        return this.visibleWrites_.getCompleteNode(path);\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window.\r\n     */\r\n    WriteTree.prototype.calcIndexedSlice = function (treePath, completeServerData, startPost, count, reverse, index) {\r\n        var toIterate;\r\n        var merge = this.visibleWrites_.childCompoundWrite(treePath);\r\n        var shadowingNode = merge.getCompleteNode(Path.Empty);\r\n        if (shadowingNode != null) {\r\n            toIterate = shadowingNode;\r\n        }\r\n        else if (completeServerData != null) {\r\n            toIterate = merge.apply(completeServerData);\r\n        }\r\n        else {\r\n            // no children to iterate on\r\n            return [];\r\n        }\r\n        toIterate = toIterate.withIndex(index);\r\n        if (!toIterate.isEmpty() && !toIterate.isLeafNode()) {\r\n            var nodes = [];\r\n            var cmp = index.getCompare();\r\n            var iter = reverse\r\n                ? toIterate.getReverseIteratorFrom(startPost, index)\r\n                : toIterate.getIteratorFrom(startPost, index);\r\n            var next = iter.getNext();\r\n            while (next && nodes.length < count) {\r\n                if (cmp(next, startPost) !== 0) {\r\n                    nodes.push(next);\r\n                }\r\n                next = iter.getNext();\r\n            }\r\n            return nodes;\r\n        }\r\n        else {\r\n            return [];\r\n        }\r\n    };\r\n    WriteTree.prototype.recordContainsPath_ = function (writeRecord, path) {\r\n        if (writeRecord.snap) {\r\n            return writeRecord.path.contains(path);\r\n        }\r\n        else {\r\n            for (var childName in writeRecord.children) {\r\n                if (writeRecord.children.hasOwnProperty(childName) &&\r\n                    writeRecord.path.child(childName).contains(path)) {\r\n                    return true;\r\n                }\r\n            }\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Re-layer the writes and merges into a tree so we can efficiently calculate event snapshots\r\n     */\r\n    WriteTree.prototype.resetTree_ = function () {\r\n        this.visibleWrites_ = WriteTree.layerTree_(this.allWrites_, WriteTree.DefaultFilter_, Path.Empty);\r\n        if (this.allWrites_.length > 0) {\r\n            this.lastWriteId_ = this.allWrites_[this.allWrites_.length - 1].writeId;\r\n        }\r\n        else {\r\n            this.lastWriteId_ = -1;\r\n        }\r\n    };\r\n    /**\r\n     * The default filter used when constructing the tree. Keep everything that's visible.\r\n     */\r\n    WriteTree.DefaultFilter_ = function (write) {\r\n        return write.visible;\r\n    };\r\n    /**\r\n     * Static method. Given an array of WriteRecords, a filter for which ones to include, and a path, construct the tree of\r\n     * event data at that path.\r\n     */\r\n    WriteTree.layerTree_ = function (writes, filter, treeRoot) {\r\n        var compoundWrite = CompoundWrite.Empty;\r\n        for (var i = 0; i < writes.length; ++i) {\r\n            var write = writes[i];\r\n            // Theory, a later set will either:\r\n            // a) abort a relevant transaction, so no need to worry about excluding it from calculating that transaction\r\n            // b) not be relevant to a transaction (separate branch), so again will not affect the data for that transaction\r\n            if (filter(write)) {\r\n                var writePath = write.path;\r\n                var relativePath = void 0;\r\n                if (write.snap) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrite(relativePath, write.snap);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        compoundWrite = compoundWrite.addWrite(Path.Empty, write.snap.getChild(relativePath));\r\n                    }\r\n                    else ;\r\n                }\r\n                else if (write.children) {\r\n                    if (treeRoot.contains(writePath)) {\r\n                        relativePath = Path.relativePath(treeRoot, writePath);\r\n                        compoundWrite = compoundWrite.addWrites(relativePath, write.children);\r\n                    }\r\n                    else if (writePath.contains(treeRoot)) {\r\n                        relativePath = Path.relativePath(writePath, treeRoot);\r\n                        if (relativePath.isEmpty()) {\r\n                            compoundWrite = compoundWrite.addWrites(Path.Empty, write.children);\r\n                        }\r\n                        else {\r\n                            var child = safeGet(write.children, relativePath.getFront());\r\n                            if (child) {\r\n                                // There exists a child in this node that matches the root path\r\n                                var deepNode = child.getChild(relativePath.popFront());\r\n                                compoundWrite = compoundWrite.addWrite(Path.Empty, deepNode);\r\n                            }\r\n                        }\r\n                    }\r\n                    else ;\r\n                }\r\n                else {\r\n                    throw assertionError('WriteRecord should have .snap or .children');\r\n                }\r\n            }\r\n        }\r\n        return compoundWrite;\r\n    };\r\n    return WriteTree;\r\n}());\r\n/**\r\n * A WriteTreeRef wraps a WriteTree and a path, for convenient access to a particular subtree.  All of the methods\r\n * just proxy to the underlying WriteTree.\r\n *\r\n * @constructor\r\n */\r\nvar WriteTreeRef = /** @class */ (function () {\r\n    /**\r\n     * @param {!Path} path\r\n     * @param {!WriteTree} writeTree\r\n     */\r\n    function WriteTreeRef(path, writeTree) {\r\n        this.treePath_ = path;\r\n        this.writeTree_ = writeTree;\r\n    }\r\n    /**\r\n     * If possible, returns a complete event cache, using the underlying server data if possible. In addition, can be used\r\n     * to get a cache that includes hidden writes, and excludes arbitrary writes. Note that customizing the returned node\r\n     * can lead to a more expensive calculation.\r\n     *\r\n     * @param {?Node} completeServerCache\r\n     * @param {Array.<number>=} writeIdsToExclude Optional writes to exclude.\r\n     * @param {boolean=} includeHiddenWrites Defaults to false, whether or not to layer on writes with visible set to false\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventCache = function (completeServerCache, writeIdsToExclude, includeHiddenWrites) {\r\n        return this.writeTree_.calcCompleteEventCache(this.treePath_, completeServerCache, writeIdsToExclude, includeHiddenWrites);\r\n    };\r\n    /**\r\n     * If possible, returns a children node containing all of the complete children we have data for. The returned data is a\r\n     * mix of the given server data and write data.\r\n     *\r\n     * @param {?ChildrenNode} completeServerChildren\r\n     * @return {!ChildrenNode}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteEventChildren = function (completeServerChildren) {\r\n        return this.writeTree_.calcCompleteEventChildren(this.treePath_, completeServerChildren);\r\n    };\r\n    /**\r\n     * Given that either the underlying server data has updated or the outstanding writes have updated, determine what,\r\n     * if anything, needs to be applied to the event cache.\r\n     *\r\n     * Possibilities:\r\n     *\r\n     * 1. No writes are shadowing. Events should be raised, the snap to be applied comes from the server data\r\n     *\r\n     * 2. Some write is completely shadowing. No events to be raised\r\n     *\r\n     * 3. Is partially shadowed. Events should be raised\r\n     *\r\n     * Either existingEventSnap or existingServerSnap must exist, this is validated via an assert\r\n     *\r\n     * @param {!Path} path\r\n     * @param {?Node} existingEventSnap\r\n     * @param {?Node} existingServerSnap\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcEventCacheAfterServerOverwrite = function (path, existingEventSnap, existingServerSnap) {\r\n        return this.writeTree_.calcEventCacheAfterServerOverwrite(this.treePath_, path, existingEventSnap, existingServerSnap);\r\n    };\r\n    /**\r\n     * Returns a node if there is a complete overwrite for this path. More specifically, if there is a write at\r\n     * a higher path, this will return the child of that write relative to the write and this path.\r\n     * Returns null if there is no write at this path.\r\n     *\r\n     * @param {!Path} path\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.shadowingWrite = function (path) {\r\n        return this.writeTree_.shadowingWrite(this.treePath_.child(path));\r\n    };\r\n    /**\r\n     * This method is used when processing child remove events on a query. If we can, we pull in children that were outside\r\n     * the window, but may now be in the window\r\n     *\r\n     * @param {?Node} completeServerData\r\n     * @param {!NamedNode} startPost\r\n     * @param {!number} count\r\n     * @param {boolean} reverse\r\n     * @param {!Index} index\r\n     * @return {!Array.<!NamedNode>}\r\n     */\r\n    WriteTreeRef.prototype.calcIndexedSlice = function (completeServerData, startPost, count, reverse, index) {\r\n        return this.writeTree_.calcIndexedSlice(this.treePath_, completeServerData, startPost, count, reverse, index);\r\n    };\r\n    /**\r\n     * Returns a complete child for a given server snap after applying all user writes or null if there is no\r\n     * complete child for this ChildKey.\r\n     *\r\n     * @param {!string} childKey\r\n     * @param {!CacheNode} existingServerCache\r\n     * @return {?Node}\r\n     */\r\n    WriteTreeRef.prototype.calcCompleteChild = function (childKey, existingServerCache) {\r\n        return this.writeTree_.calcCompleteChild(this.treePath_, childKey, existingServerCache);\r\n    };\r\n    /**\r\n     * Return a WriteTreeRef for a child.\r\n     *\r\n     * @param {string} childName\r\n     * @return {!WriteTreeRef}\r\n     */\r\n    WriteTreeRef.prototype.child = function (childName) {\r\n        return new WriteTreeRef(this.treePath_.child(childName), this.writeTree_);\r\n    };\r\n    return WriteTreeRef;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * SyncTree is the central class for managing event callback registration, data caching, views\r\n * (query processing), and event generation.  There are typically two SyncTree instances for\r\n * each Repo, one for the normal Firebase data, and one for the .info data.\r\n *\r\n * It has a number of responsibilities, including:\r\n *  - Tracking all user event callbacks (registered via addEventRegistration() and removeEventRegistration()).\r\n *  - Applying and caching data changes for user set(), transaction(), and update() calls\r\n *    (applyUserOverwrite(), applyUserMerge()).\r\n *  - Applying and caching data changes for server data changes (applyServerOverwrite(),\r\n *    applyServerMerge()).\r\n *  - Generating user-facing events for server and user changes (all of the apply* methods\r\n *    return the set of events that need to be raised as a result).\r\n *  - Maintaining the appropriate set of server listens to ensure we are always subscribed\r\n *    to the correct set of paths and queries to satisfy the current set of user event\r\n *    callbacks (listens are started/stopped using the provided listenProvider).\r\n *\r\n * NOTE: Although SyncTree tracks event callbacks and calculates events to raise, the actual\r\n * events are returned to the caller rather than raised synchronously.\r\n *\r\n * @constructor\r\n */\r\nvar SyncTree = /** @class */ (function () {\r\n    /**\r\n     * @param {!ListenProvider} listenProvider_ Used by SyncTree to start / stop listening\r\n     *   to server data.\r\n     */\r\n    function SyncTree(listenProvider_) {\r\n        this.listenProvider_ = listenProvider_;\r\n        /**\r\n         * Tree of SyncPoints.  There's a SyncPoint at any location that has 1 or more views.\r\n         */\r\n        this.syncPointTree_ = ImmutableTree.Empty;\r\n        /**\r\n         * A tree of all pending user writes (user-initiated set()'s, transaction()'s, update()'s, etc.).\r\n         */\r\n        this.pendingWriteTree_ = new WriteTree();\r\n        this.tagToQueryMap = new Map();\r\n        this.queryToTagMap = new Map();\r\n    }\r\n    /**\r\n     * Apply the data changes for a user-generated set() or transaction() call.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserOverwrite = function (path, newData, writeId, visible) {\r\n        // Record pending write.\r\n        this.pendingWriteTree_.addOverwrite(path, newData, writeId, visible);\r\n        if (!visible) {\r\n            return [];\r\n        }\r\n        else {\r\n            return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.User, path, newData));\r\n        }\r\n    };\r\n    /**\r\n     * Apply the data from a user-generated update() call\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyUserMerge = function (path, changedChildren, writeId) {\r\n        // Record pending merge.\r\n        this.pendingWriteTree_.addMerge(path, changedChildren, writeId);\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.User, path, changeTree));\r\n    };\r\n    /**\r\n     * Acknowledge a pending user write that was previously registered with applyUserOverwrite() or applyUserMerge().\r\n     *\r\n     * @param revert True if the given write failed and needs to be reverted\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.ackUserWrite = function (writeId, revert) {\r\n        if (revert === void 0) { revert = false; }\r\n        var write = this.pendingWriteTree_.getWrite(writeId);\r\n        var needToReevaluate = this.pendingWriteTree_.removeWrite(writeId);\r\n        if (!needToReevaluate) {\r\n            return [];\r\n        }\r\n        else {\r\n            var affectedTree_1 = ImmutableTree.Empty;\r\n            if (write.snap != null) {\r\n                // overwrite\r\n                affectedTree_1 = affectedTree_1.set(Path.Empty, true);\r\n            }\r\n            else {\r\n                each(write.children, function (pathString, node) {\r\n                    affectedTree_1 = affectedTree_1.set(new Path(pathString), node);\r\n                });\r\n            }\r\n            return this.applyOperationToSyncPoints_(new AckUserWrite(write.path, affectedTree_1, revert));\r\n        }\r\n    };\r\n    /**\r\n     * Apply new server data for the specified path..\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerOverwrite = function (path, newData) {\r\n        return this.applyOperationToSyncPoints_(new Overwrite(OperationSource.Server, path, newData));\r\n    };\r\n    /**\r\n     * Apply new server data to be merged in at the specified path.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyServerMerge = function (path, changedChildren) {\r\n        var changeTree = ImmutableTree.fromObject(changedChildren);\r\n        return this.applyOperationToSyncPoints_(new Merge(OperationSource.Server, path, changeTree));\r\n    };\r\n    /**\r\n     * Apply a listen complete for a query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyListenComplete = function (path) {\r\n        return this.applyOperationToSyncPoints_(new ListenComplete(OperationSource.Server, path));\r\n    };\r\n    /**\r\n     * Apply new server data for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryOverwrite = function (path, snap, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey != null) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new Overwrite(OperationSource.forServerTaggedQuery(queryId), relativePath, snap);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // Query must have been removed already\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply server data to be merged in for the specified tagged query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedQueryMerge = function (path, changedChildren, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var changeTree = ImmutableTree.fromObject(changedChildren);\r\n            var op = new Merge(OperationSource.forServerTaggedQuery(queryId), relativePath, changeTree);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Apply a listen complete for a tagged query\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.applyTaggedListenComplete = function (path, tag) {\r\n        var queryKey = this.queryKeyForTag_(tag);\r\n        if (queryKey) {\r\n            var r = SyncTree.parseQueryKey_(queryKey);\r\n            var queryPath = r.path, queryId = r.queryId;\r\n            var relativePath = Path.relativePath(queryPath, path);\r\n            var op = new ListenComplete(OperationSource.forServerTaggedQuery(queryId), relativePath);\r\n            return this.applyTaggedOperation_(queryPath, op);\r\n        }\r\n        else {\r\n            // We've already removed the query. No big deal, ignore the update\r\n            return [];\r\n        }\r\n    };\r\n    /**\r\n     * Add an event callback for the specified query.\r\n     *\r\n     * @return Events to raise.\r\n     */\r\n    SyncTree.prototype.addEventRegistration = function (query, eventRegistration) {\r\n        var path = query.path;\r\n        var serverCache = null;\r\n        var foundAncestorDefaultView = false;\r\n        // Any covering writes will necessarily be at the root, so really all we need to find is the server cache.\r\n        // Consider optimizing this once there's a better understanding of what actual behavior will be.\r\n        this.syncPointTree_.foreachOnPath(path, function (pathToSyncPoint, sp) {\r\n            var relativePath = Path.relativePath(pathToSyncPoint, path);\r\n            serverCache = serverCache || sp.getCompleteServerCache(relativePath);\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || sp.hasCompleteView();\r\n        });\r\n        var syncPoint = this.syncPointTree_.get(path);\r\n        if (!syncPoint) {\r\n            syncPoint = new SyncPoint();\r\n            this.syncPointTree_ = this.syncPointTree_.set(path, syncPoint);\r\n        }\r\n        else {\r\n            foundAncestorDefaultView =\r\n                foundAncestorDefaultView || syncPoint.hasCompleteView();\r\n            serverCache = serverCache || syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var serverCacheComplete;\r\n        if (serverCache != null) {\r\n            serverCacheComplete = true;\r\n        }\r\n        else {\r\n            serverCacheComplete = false;\r\n            serverCache = ChildrenNode.EMPTY_NODE;\r\n            var subtree = this.syncPointTree_.subtree(path);\r\n            subtree.foreachChild(function (childName, childSyncPoint) {\r\n                var completeCache = childSyncPoint.getCompleteServerCache(Path.Empty);\r\n                if (completeCache) {\r\n                    serverCache = serverCache.updateImmediateChild(childName, completeCache);\r\n                }\r\n            });\r\n        }\r\n        var viewAlreadyExists = syncPoint.viewExistsForQuery(query);\r\n        if (!viewAlreadyExists && !query.getQueryParams().loadsAllData()) {\r\n            // We need to track a tag for this query\r\n            var queryKey = SyncTree.makeQueryKey_(query);\r\n            assert(!this.queryToTagMap.has(queryKey), 'View does not exist, but we have a tag');\r\n            var tag = SyncTree.getNextQueryTag_();\r\n            this.queryToTagMap.set(queryKey, tag);\r\n            this.tagToQueryMap.set(tag, queryKey);\r\n        }\r\n        var writesCache = this.pendingWriteTree_.childWrites(path);\r\n        var events = syncPoint.addEventRegistration(query, eventRegistration, writesCache, serverCache, serverCacheComplete);\r\n        if (!viewAlreadyExists && !foundAncestorDefaultView) {\r\n            var view /** @type !View */ = syncPoint.viewForQuery(query);\r\n            events = events.concat(this.setupListener_(query, view));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Remove event callback(s).\r\n     *\r\n     * If query is the default query, we'll check all queries for the specified eventRegistration.\r\n     * If eventRegistration is null, we'll remove all callbacks for the specified query/queries.\r\n     *\r\n     * @param eventRegistration If null, all callbacks are removed.\r\n     * @param cancelError If a cancelError is provided, appropriate cancel events will be returned.\r\n     * @return Cancel events, if cancelError was provided.\r\n     */\r\n    SyncTree.prototype.removeEventRegistration = function (query, eventRegistration, cancelError) {\r\n        var _this = this;\r\n        // Find the syncPoint first. Then deal with whether or not it has matching listeners\r\n        var path = query.path;\r\n        var maybeSyncPoint = this.syncPointTree_.get(path);\r\n        var cancelEvents = [];\r\n        // A removal on a default query affects all queries at that location. A removal on an indexed query, even one without\r\n        // other query constraints, does *not* affect all queries at that location. So this check must be for 'default', and\r\n        // not loadsAllData().\r\n        if (maybeSyncPoint &&\r\n            (query.queryIdentifier() === 'default' ||\r\n                maybeSyncPoint.viewExistsForQuery(query))) {\r\n            /**\r\n             * @type {{removed: !Array.<!Query>, events: !Array.<!Event>}}\r\n             */\r\n            var removedAndEvents = maybeSyncPoint.removeEventRegistration(query, eventRegistration, cancelError);\r\n            if (maybeSyncPoint.isEmpty()) {\r\n                this.syncPointTree_ = this.syncPointTree_.remove(path);\r\n            }\r\n            var removed = removedAndEvents.removed;\r\n            cancelEvents = removedAndEvents.events;\r\n            // We may have just removed one of many listeners and can short-circuit this whole process\r\n            // We may also not have removed a default listener, in which case all of the descendant listeners should already be\r\n            // properly set up.\r\n            //\r\n            // Since indexed queries can shadow if they don't have other query constraints, check for loadsAllData(), instead of\r\n            // queryId === 'default'\r\n            var removingDefault = -1 !==\r\n                removed.findIndex(function (query) {\r\n                    return query.getQueryParams().loadsAllData();\r\n                });\r\n            var covered = this.syncPointTree_.findOnPath(path, function (relativePath, parentSyncPoint) {\r\n                return parentSyncPoint.hasCompleteView();\r\n            });\r\n            if (removingDefault && !covered) {\r\n                var subtree = this.syncPointTree_.subtree(path);\r\n                // There are potentially child listeners. Determine what if any listens we need to send before executing the\r\n                // removal\r\n                if (!subtree.isEmpty()) {\r\n                    // We need to fold over our subtree and collect the listeners to send\r\n                    var newViews = this.collectDistinctViewsForSubTree_(subtree);\r\n                    // Ok, we've collected all the listens we need. Set them up.\r\n                    for (var i = 0; i < newViews.length; ++i) {\r\n                        var view = newViews[i], newQuery = view.getQuery();\r\n                        var listener = this.createListenerForView_(view);\r\n                        this.listenProvider_.startListening(SyncTree.queryForListening_(newQuery), this.tagForQuery_(newQuery), listener.hashFn, listener.onComplete);\r\n                    }\r\n                }\r\n            }\r\n            // If we removed anything and we're not covered by a higher up listen, we need to stop listening on this query\r\n            // The above block has us covered in terms of making sure we're set up on listens lower in the tree.\r\n            // Also, note that if we have a cancelError, it's already been removed at the provider level.\r\n            if (!covered && removed.length > 0 && !cancelError) {\r\n                // If we removed a default, then we weren't listening on any of the other queries here. Just cancel the one\r\n                // default. Otherwise, we need to iterate through and cancel each individual query\r\n                if (removingDefault) {\r\n                    // We don't tag default listeners\r\n                    var defaultTag = null;\r\n                    this.listenProvider_.stopListening(SyncTree.queryForListening_(query), defaultTag);\r\n                }\r\n                else {\r\n                    removed.forEach(function (queryToRemove) {\r\n                        var tagToRemove = _this.queryToTagMap.get(SyncTree.makeQueryKey_(queryToRemove));\r\n                        _this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToRemove), tagToRemove);\r\n                    });\r\n                }\r\n            }\r\n            // Now, clear all of the tags we're tracking for the removed listens\r\n            this.removeTags_(removed);\r\n        }\r\n        return cancelEvents;\r\n    };\r\n    /**\r\n     * Returns a complete cache, if we have one, of the data at a particular path. If the location does not have a\r\n     * listener above it, we will get a false \"null\". This shouldn't be a problem because transactions will always\r\n     * have a listener above, and atomic operations would correctly show a jitter of <increment value> ->\r\n     *     <incremented total> as the write is applied locally and then acknowledged at the server.\r\n     *\r\n     * Note: this method will *include* hidden writes from transaction with applyLocally set to false.\r\n     *\r\n     * @param path The path to the data we want\r\n     * @param writeIdsToExclude A specific set to be excluded\r\n     */\r\n    SyncTree.prototype.calcCompleteEventCache = function (path, writeIdsToExclude) {\r\n        var includeHiddenSets = true;\r\n        var writeTree = this.pendingWriteTree_;\r\n        var serverCache = this.syncPointTree_.findOnPath(path, function (pathSoFar, syncPoint) {\r\n            var relativePath = Path.relativePath(pathSoFar, path);\r\n            var serverCache = syncPoint.getCompleteServerCache(relativePath);\r\n            if (serverCache) {\r\n                return serverCache;\r\n            }\r\n        });\r\n        return writeTree.calcCompleteEventCache(path, serverCache, writeIdsToExclude, includeHiddenSets);\r\n    };\r\n    /**\r\n     * This collapses multiple unfiltered views into a single view, since we only need a single\r\n     * listener for them.\r\n     */\r\n    SyncTree.prototype.collectDistinctViewsForSubTree_ = function (subtree) {\r\n        return subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n            if (maybeChildSyncPoint && maybeChildSyncPoint.hasCompleteView()) {\r\n                var completeView = maybeChildSyncPoint.getCompleteView();\r\n                return [completeView];\r\n            }\r\n            else {\r\n                // No complete view here, flatten any deeper listens into an array\r\n                var views_1 = [];\r\n                if (maybeChildSyncPoint) {\r\n                    views_1 = maybeChildSyncPoint.getQueryViews();\r\n                }\r\n                each(childMap, function (_key, childViews) {\r\n                    views_1 = views_1.concat(childViews);\r\n                });\r\n                return views_1;\r\n            }\r\n        });\r\n    };\r\n    SyncTree.prototype.removeTags_ = function (queries) {\r\n        for (var j = 0; j < queries.length; ++j) {\r\n            var removedQuery = queries[j];\r\n            if (!removedQuery.getQueryParams().loadsAllData()) {\r\n                // We should have a tag for this\r\n                var removedQueryKey = SyncTree.makeQueryKey_(removedQuery);\r\n                var removedQueryTag = this.queryToTagMap.get(removedQueryKey);\r\n                this.queryToTagMap.delete(removedQueryKey);\r\n                this.tagToQueryMap.delete(removedQueryTag);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Normalizes a query to a query we send the server for listening\r\n     *\r\n     * @return The normalized query\r\n     */\r\n    SyncTree.queryForListening_ = function (query) {\r\n        if (query.getQueryParams().loadsAllData() &&\r\n            !query.getQueryParams().isDefault()) {\r\n            // We treat queries that load all data as default queries\r\n            // Cast is necessary because ref() technically returns Firebase which is actually fb.api.Firebase which inherits\r\n            // from Query\r\n            return query.getRef();\r\n        }\r\n        else {\r\n            return query;\r\n        }\r\n    };\r\n    /**\r\n     * For a given new listen, manage the de-duplication of outstanding subscriptions.\r\n     *\r\n     * @return This method can return events to support synchronous data sources\r\n     */\r\n    SyncTree.prototype.setupListener_ = function (query, view) {\r\n        var path = query.path;\r\n        var tag = this.tagForQuery_(query);\r\n        var listener = this.createListenerForView_(view);\r\n        var events = this.listenProvider_.startListening(SyncTree.queryForListening_(query), tag, listener.hashFn, listener.onComplete);\r\n        var subtree = this.syncPointTree_.subtree(path);\r\n        // The root of this subtree has our query. We're here because we definitely need to send a listen for that, but we\r\n        // may need to shadow other listens as well.\r\n        if (tag) {\r\n            assert(!subtree.value.hasCompleteView(), \"If we're adding a query, it shouldn't be shadowed\");\r\n        }\r\n        else {\r\n            // Shadow everything at or below this location, this is a default listener.\r\n            var queriesToStop = subtree.fold(function (relativePath, maybeChildSyncPoint, childMap) {\r\n                if (!relativePath.isEmpty() &&\r\n                    maybeChildSyncPoint &&\r\n                    maybeChildSyncPoint.hasCompleteView()) {\r\n                    return [maybeChildSyncPoint.getCompleteView().getQuery()];\r\n                }\r\n                else {\r\n                    // No default listener here, flatten any deeper queries into an array\r\n                    var queries_1 = [];\r\n                    if (maybeChildSyncPoint) {\r\n                        queries_1 = queries_1.concat(maybeChildSyncPoint.getQueryViews().map(function (view) { return view.getQuery(); }));\r\n                    }\r\n                    each(childMap, function (_key, childQueries) {\r\n                        queries_1 = queries_1.concat(childQueries);\r\n                    });\r\n                    return queries_1;\r\n                }\r\n            });\r\n            for (var i = 0; i < queriesToStop.length; ++i) {\r\n                var queryToStop = queriesToStop[i];\r\n                this.listenProvider_.stopListening(SyncTree.queryForListening_(queryToStop), this.tagForQuery_(queryToStop));\r\n            }\r\n        }\r\n        return events;\r\n    };\r\n    SyncTree.prototype.createListenerForView_ = function (view) {\r\n        var _this = this;\r\n        var query = view.getQuery();\r\n        var tag = this.tagForQuery_(query);\r\n        return {\r\n            hashFn: function () {\r\n                var cache = view.getServerCache() || ChildrenNode.EMPTY_NODE;\r\n                return cache.hash();\r\n            },\r\n            onComplete: function (status) {\r\n                if (status === 'ok') {\r\n                    if (tag) {\r\n                        return _this.applyTaggedListenComplete(query.path, tag);\r\n                    }\r\n                    else {\r\n                        return _this.applyListenComplete(query.path);\r\n                    }\r\n                }\r\n                else {\r\n                    // If a listen failed, kill all of the listeners here, not just the one that triggered the error.\r\n                    // Note that this may need to be scoped to just this listener if we change permissions on filtered children\r\n                    var error = errorForServerCode(status, query);\r\n                    return _this.removeEventRegistration(query, \r\n                    /*eventRegistration*/ null, error);\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     * Given a query, computes a \"queryKey\" suitable for use in our queryToTagMap_.\r\n     */\r\n    SyncTree.makeQueryKey_ = function (query) {\r\n        return query.path.toString() + '$' + query.queryIdentifier();\r\n    };\r\n    /**\r\n     * Given a queryKey (created by makeQueryKey), parse it back into a path and queryId.\r\n     */\r\n    SyncTree.parseQueryKey_ = function (queryKey) {\r\n        var splitIndex = queryKey.indexOf('$');\r\n        assert(splitIndex !== -1 && splitIndex < queryKey.length - 1, 'Bad queryKey.');\r\n        return {\r\n            queryId: queryKey.substr(splitIndex + 1),\r\n            path: new Path(queryKey.substr(0, splitIndex))\r\n        };\r\n    };\r\n    /**\r\n     * Return the query associated with the given tag, if we have one\r\n     */\r\n    SyncTree.prototype.queryKeyForTag_ = function (tag) {\r\n        return this.tagToQueryMap.get(tag);\r\n    };\r\n    /**\r\n     * Return the tag associated with the given query.\r\n     */\r\n    SyncTree.prototype.tagForQuery_ = function (query) {\r\n        var queryKey = SyncTree.makeQueryKey_(query);\r\n        return this.queryToTagMap.get(queryKey);\r\n    };\r\n    /**\r\n     * Static accessor for query tags.\r\n     */\r\n    SyncTree.getNextQueryTag_ = function () {\r\n        return SyncTree.nextQueryTag_++;\r\n    };\r\n    /**\r\n     * A helper method to apply tagged operations\r\n     */\r\n    SyncTree.prototype.applyTaggedOperation_ = function (queryPath, operation) {\r\n        var syncPoint = this.syncPointTree_.get(queryPath);\r\n        assert(syncPoint, \"Missing sync point for query tag that we're tracking\");\r\n        var writesCache = this.pendingWriteTree_.childWrites(queryPath);\r\n        return syncPoint.applyOperation(operation, writesCache, \r\n        /*serverCache=*/ null);\r\n    };\r\n    /**\r\n     * A helper method that visits all descendant and ancestor SyncPoints, applying the operation.\r\n     *\r\n     * NOTES:\r\n     * - Descendant SyncPoints will be visited first (since we raise events depth-first).\r\n     *\r\n     * - We call applyOperation() on each SyncPoint passing three things:\r\n     *   1. A version of the Operation that has been made relative to the SyncPoint location.\r\n     *   2. A WriteTreeRef of any writes we have cached at the SyncPoint location.\r\n     *   3. A snapshot Node with cached server data, if we have it.\r\n     *\r\n     * - We concatenate all of the events returned by each SyncPoint and return the result.\r\n     */\r\n    SyncTree.prototype.applyOperationToSyncPoints_ = function (operation) {\r\n        return this.applyOperationHelper_(operation, this.syncPointTree_, \r\n        /*serverCache=*/ null, this.pendingWriteTree_.childWrites(Path.Empty));\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        if (operation.path.isEmpty()) {\r\n            return this.applyOperationDescendantsHelper_(operation, syncPointTree, serverCache, writesCache);\r\n        }\r\n        else {\r\n            var syncPoint = syncPointTree.get(Path.Empty);\r\n            // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n            if (serverCache == null && syncPoint != null) {\r\n                serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n            }\r\n            var events = [];\r\n            var childName = operation.path.getFront();\r\n            var childOperation = operation.operationForChild(childName);\r\n            var childTree = syncPointTree.children.get(childName);\r\n            if (childTree && childOperation) {\r\n                var childServerCache = serverCache\r\n                    ? serverCache.getImmediateChild(childName)\r\n                    : null;\r\n                var childWritesCache = writesCache.child(childName);\r\n                events = events.concat(this.applyOperationHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n            if (syncPoint) {\r\n                events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n            }\r\n            return events;\r\n        }\r\n    };\r\n    /**\r\n     * Recursive helper for applyOperationToSyncPoints_\r\n     */\r\n    SyncTree.prototype.applyOperationDescendantsHelper_ = function (operation, syncPointTree, serverCache, writesCache) {\r\n        var _this = this;\r\n        var syncPoint = syncPointTree.get(Path.Empty);\r\n        // If we don't have cached server data, see if we can get it from this SyncPoint.\r\n        if (serverCache == null && syncPoint != null) {\r\n            serverCache = syncPoint.getCompleteServerCache(Path.Empty);\r\n        }\r\n        var events = [];\r\n        syncPointTree.children.inorderTraversal(function (childName, childTree) {\r\n            var childServerCache = serverCache\r\n                ? serverCache.getImmediateChild(childName)\r\n                : null;\r\n            var childWritesCache = writesCache.child(childName);\r\n            var childOperation = operation.operationForChild(childName);\r\n            if (childOperation) {\r\n                events = events.concat(_this.applyOperationDescendantsHelper_(childOperation, childTree, childServerCache, childWritesCache));\r\n            }\r\n        });\r\n        if (syncPoint) {\r\n            events = events.concat(syncPoint.applyOperation(operation, writesCache, serverCache));\r\n        }\r\n        return events;\r\n    };\r\n    /**\r\n     * Static tracker for next query tag.\r\n     */\r\n    SyncTree.nextQueryTag_ = 1;\r\n    return SyncTree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Mutable object which basically just stores a reference to the \"latest\" immutable snapshot.\r\n *\r\n * @constructor\r\n */\r\nvar SnapshotHolder = /** @class */ (function () {\r\n    function SnapshotHolder() {\r\n        this.rootNode_ = ChildrenNode.EMPTY_NODE;\r\n    }\r\n    SnapshotHolder.prototype.getNode = function (path) {\r\n        return this.rootNode_.getChild(path);\r\n    };\r\n    SnapshotHolder.prototype.updateSnapshot = function (path, newSnapshotNode) {\r\n        this.rootNode_ = this.rootNode_.updateChild(path, newSnapshotNode);\r\n    };\r\n    return SnapshotHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Tracks a collection of stats.\r\n *\r\n * @constructor\r\n */\r\nvar StatsCollection = /** @class */ (function () {\r\n    function StatsCollection() {\r\n        this.counters_ = {};\r\n    }\r\n    StatsCollection.prototype.incrementCounter = function (name, amount) {\r\n        if (amount === void 0) { amount = 1; }\r\n        if (!contains(this.counters_, name)) {\r\n            this.counters_[name] = 0;\r\n        }\r\n        this.counters_[name] += amount;\r\n    };\r\n    StatsCollection.prototype.get = function () {\r\n        return deepCopy(this.counters_);\r\n    };\r\n    return StatsCollection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar StatsManager = /** @class */ (function () {\r\n    function StatsManager() {\r\n    }\r\n    StatsManager.getCollection = function (repoInfo) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.collections_[hashString]) {\r\n            this.collections_[hashString] = new StatsCollection();\r\n        }\r\n        return this.collections_[hashString];\r\n    };\r\n    StatsManager.getOrCreateReporter = function (repoInfo, creatorFunction) {\r\n        var hashString = repoInfo.toString();\r\n        if (!this.reporters_[hashString]) {\r\n            this.reporters_[hashString] = creatorFunction();\r\n        }\r\n        return this.reporters_[hashString];\r\n    };\r\n    StatsManager.collections_ = {};\r\n    StatsManager.reporters_ = {};\r\n    return StatsManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Returns the delta from the previous call to get stats.\r\n *\r\n * @param collection_ The collection to \"listen\" to.\r\n * @constructor\r\n */\r\nvar StatsListener = /** @class */ (function () {\r\n    function StatsListener(collection_) {\r\n        this.collection_ = collection_;\r\n        this.last_ = null;\r\n    }\r\n    StatsListener.prototype.get = function () {\r\n        var newStats = this.collection_.get();\r\n        var delta = __assign({}, newStats);\r\n        if (this.last_) {\r\n            each(this.last_, function (stat, value) {\r\n                delta[stat] = delta[stat] - value;\r\n            });\r\n        }\r\n        this.last_ = newStats;\r\n        return delta;\r\n    };\r\n    return StatsListener;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Assuming some apps may have a short amount of time on page, and a bulk of firebase operations probably\r\n// happen on page load, we try to report our first set of stats pretty quickly, but we wait at least 10\r\n// seconds to try to ensure the Firebase connection is established / settled.\r\nvar FIRST_STATS_MIN_TIME = 10 * 1000;\r\nvar FIRST_STATS_MAX_TIME = 30 * 1000;\r\n// We'll continue to report stats on average every 5 minutes.\r\nvar REPORT_STATS_INTERVAL = 5 * 60 * 1000;\r\n/**\r\n * @constructor\r\n */\r\nvar StatsReporter = /** @class */ (function () {\r\n    /**\r\n     * @param collection\r\n     * @param server_\r\n     */\r\n    function StatsReporter(collection, server_) {\r\n        this.server_ = server_;\r\n        this.statsToReport_ = {};\r\n        this.statsListener_ = new StatsListener(collection);\r\n        var timeout = FIRST_STATS_MIN_TIME +\r\n            (FIRST_STATS_MAX_TIME - FIRST_STATS_MIN_TIME) * Math.random();\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(timeout));\r\n    }\r\n    StatsReporter.prototype.includeStat = function (stat) {\r\n        this.statsToReport_[stat] = true;\r\n    };\r\n    StatsReporter.prototype.reportStats_ = function () {\r\n        var _this = this;\r\n        var stats = this.statsListener_.get();\r\n        var reportedStats = {};\r\n        var haveStatsToReport = false;\r\n        each(stats, function (stat, value) {\r\n            if (value > 0 && contains(_this.statsToReport_, stat)) {\r\n                reportedStats[stat] = value;\r\n                haveStatsToReport = true;\r\n            }\r\n        });\r\n        if (haveStatsToReport) {\r\n            this.server_.reportStats(reportedStats);\r\n        }\r\n        // queue our next run.\r\n        setTimeoutNonBlocking(this.reportStats_.bind(this), Math.floor(Math.random() * 2 * REPORT_STATS_INTERVAL));\r\n    };\r\n    return StatsReporter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * The event queue serves a few purposes:\r\n * 1. It ensures we maintain event order in the face of event callbacks doing operations that result in more\r\n *    events being queued.\r\n * 2. raiseQueuedEvents() handles being called reentrantly nicely.  That is, if in the course of raising events,\r\n *    raiseQueuedEvents() is called again, the \"inner\" call will pick up raising events where the \"outer\" call\r\n *    left off, ensuring that the events are still raised synchronously and in order.\r\n * 3. You can use raiseEventsAtPath and raiseEventsForChangedPath to ensure only relevant previously-queued\r\n *    events are raised synchronously.\r\n *\r\n * NOTE: This can all go away if/when we move to async events.\r\n *\r\n * @constructor\r\n */\r\nvar EventQueue = /** @class */ (function () {\r\n    function EventQueue() {\r\n        /**\r\n         * @private\r\n         * @type {!Array.<EventList>}\r\n         */\r\n        this.eventLists_ = [];\r\n        /**\r\n         * Tracks recursion depth of raiseQueuedEvents_, for debugging purposes.\r\n         * @private\r\n         * @type {!number}\r\n         */\r\n        this.recursionDepth_ = 0;\r\n    }\r\n    /**\r\n     * @param {!Array.<Event>} eventDataList The new events to queue.\r\n     */\r\n    EventQueue.prototype.queueEvents = function (eventDataList) {\r\n        // We group events by path, storing them in a single EventList, to make it easier to skip over them quickly.\r\n        var currList = null;\r\n        for (var i = 0; i < eventDataList.length; i++) {\r\n            var eventData = eventDataList[i];\r\n            var eventPath = eventData.getPath();\r\n            if (currList !== null && !eventPath.equals(currList.getPath())) {\r\n                this.eventLists_.push(currList);\r\n                currList = null;\r\n            }\r\n            if (currList === null) {\r\n                currList = new EventList(eventPath);\r\n            }\r\n            currList.add(eventData);\r\n        }\r\n        if (currList) {\r\n            this.eventLists_.push(currList);\r\n        }\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones)\r\n     * for the specified path.\r\n     *\r\n     * It is assumed that the new events are all for the specified path.\r\n     *\r\n     * @param {!Path} path The path to raise events for.\r\n     * @param {!Array.<Event>} eventDataList The new events to raise.\r\n     */\r\n    EventQueue.prototype.raiseEventsAtPath = function (path, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.equals(path);\r\n        });\r\n    };\r\n    /**\r\n     * Queues the specified events and synchronously raises all events (including previously queued ones) for\r\n     * locations related to the specified change path (i.e. all ancestors and descendants).\r\n     *\r\n     * It is assumed that the new events are all related (ancestor or descendant) to the specified path.\r\n     *\r\n     * @param {!Path} changedPath The path to raise events for.\r\n     * @param {!Array.<!Event>} eventDataList The events to raise\r\n     */\r\n    EventQueue.prototype.raiseEventsForChangedPath = function (changedPath, eventDataList) {\r\n        this.queueEvents(eventDataList);\r\n        this.raiseQueuedEventsMatchingPredicate_(function (eventPath) {\r\n            return eventPath.contains(changedPath) || changedPath.contains(eventPath);\r\n        });\r\n    };\r\n    /**\r\n     * @param {!function(!Path):boolean} predicate\r\n     * @private\r\n     */\r\n    EventQueue.prototype.raiseQueuedEventsMatchingPredicate_ = function (predicate) {\r\n        this.recursionDepth_++;\r\n        var sentAll = true;\r\n        for (var i = 0; i < this.eventLists_.length; i++) {\r\n            var eventList = this.eventLists_[i];\r\n            if (eventList) {\r\n                var eventPath = eventList.getPath();\r\n                if (predicate(eventPath)) {\r\n                    this.eventLists_[i].raise();\r\n                    this.eventLists_[i] = null;\r\n                }\r\n                else {\r\n                    sentAll = false;\r\n                }\r\n            }\r\n        }\r\n        if (sentAll) {\r\n            this.eventLists_ = [];\r\n        }\r\n        this.recursionDepth_--;\r\n    };\r\n    return EventQueue;\r\n}());\r\n/**\r\n * @param {!Path} path\r\n * @constructor\r\n */\r\nvar EventList = /** @class */ (function () {\r\n    function EventList(path_) {\r\n        this.path_ = path_;\r\n        /**\r\n         * @type {!Array.<Event>}\r\n         * @private\r\n         */\r\n        this.events_ = [];\r\n    }\r\n    /**\r\n     * @param {!Event} eventData\r\n     */\r\n    EventList.prototype.add = function (eventData) {\r\n        this.events_.push(eventData);\r\n    };\r\n    /**\r\n     * Iterates through the list and raises each event\r\n     */\r\n    EventList.prototype.raise = function () {\r\n        for (var i = 0; i < this.events_.length; i++) {\r\n            var eventData = this.events_[i];\r\n            if (eventData !== null) {\r\n                this.events_[i] = null;\r\n                var eventFn = eventData.getEventRunner();\r\n                if (logger) {\r\n                    log('event: ' + eventData.toString());\r\n                }\r\n                exceptionGuard(eventFn);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {!Path}\r\n     */\r\n    EventList.prototype.getPath = function () {\r\n        return this.path_;\r\n    };\r\n    return EventList;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Base class to be used if you want to emit events. Call the constructor with\r\n * the set of allowed event names.\r\n */\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * @param {!Array.<string>} allowedEvents_\r\n     */\r\n    function EventEmitter(allowedEvents_) {\r\n        this.allowedEvents_ = allowedEvents_;\r\n        this.listeners_ = {};\r\n        assert(Array.isArray(allowedEvents_) && allowedEvents_.length > 0, 'Requires a non-empty array');\r\n    }\r\n    /**\r\n     * To be called by derived classes to trigger events.\r\n     * @param {!string} eventType\r\n     * @param {...*} varArgs\r\n     */\r\n    EventEmitter.prototype.trigger = function (eventType) {\r\n        var varArgs = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            varArgs[_i - 1] = arguments[_i];\r\n        }\r\n        if (Array.isArray(this.listeners_[eventType])) {\r\n            // Clone the list, since callbacks could add/remove listeners.\r\n            var listeners = __spread(this.listeners_[eventType]);\r\n            for (var i = 0; i < listeners.length; i++) {\r\n                listeners[i].callback.apply(listeners[i].context, varArgs);\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.on = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        this.listeners_[eventType] = this.listeners_[eventType] || [];\r\n        this.listeners_[eventType].push({ callback: callback, context: context });\r\n        var eventData = this.getInitialEvent(eventType);\r\n        if (eventData) {\r\n            callback.apply(context, eventData);\r\n        }\r\n    };\r\n    EventEmitter.prototype.off = function (eventType, callback, context) {\r\n        this.validateEventType_(eventType);\r\n        var listeners = this.listeners_[eventType] || [];\r\n        for (var i = 0; i < listeners.length; i++) {\r\n            if (listeners[i].callback === callback &&\r\n                (!context || context === listeners[i].context)) {\r\n                listeners.splice(i, 1);\r\n                return;\r\n            }\r\n        }\r\n    };\r\n    EventEmitter.prototype.validateEventType_ = function (eventType) {\r\n        assert(this.allowedEvents_.find(function (et) {\r\n            return et === eventType;\r\n        }), 'Unknown event: ' + eventType);\r\n    };\r\n    return EventEmitter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * @extends {EventEmitter}\r\n */\r\nvar VisibilityMonitor = /** @class */ (function (_super) {\r\n    __extends(VisibilityMonitor, _super);\r\n    function VisibilityMonitor() {\r\n        var _this = _super.call(this, ['visible']) || this;\r\n        var hidden;\r\n        var visibilityChange;\r\n        if (typeof document !== 'undefined' &&\r\n            typeof document.addEventListener !== 'undefined') {\r\n            if (typeof document['hidden'] !== 'undefined') {\r\n                // Opera 12.10 and Firefox 18 and later support\r\n                visibilityChange = 'visibilitychange';\r\n                hidden = 'hidden';\r\n            }\r\n            else if (typeof document['mozHidden'] !== 'undefined') {\r\n                visibilityChange = 'mozvisibilitychange';\r\n                hidden = 'mozHidden';\r\n            }\r\n            else if (typeof document['msHidden'] !== 'undefined') {\r\n                visibilityChange = 'msvisibilitychange';\r\n                hidden = 'msHidden';\r\n            }\r\n            else if (typeof document['webkitHidden'] !== 'undefined') {\r\n                visibilityChange = 'webkitvisibilitychange';\r\n                hidden = 'webkitHidden';\r\n            }\r\n        }\r\n        // Initially, we always assume we are visible. This ensures that in browsers\r\n        // without page visibility support or in cases where we are never visible\r\n        // (e.g. chrome extension), we act as if we are visible, i.e. don't delay\r\n        // reconnects\r\n        _this.visible_ = true;\r\n        if (visibilityChange) {\r\n            document.addEventListener(visibilityChange, function () {\r\n                var visible = !document[hidden];\r\n                if (visible !== _this.visible_) {\r\n                    _this.visible_ = visible;\r\n                    _this.trigger('visible', visible);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    VisibilityMonitor.getInstance = function () {\r\n        return new VisibilityMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    VisibilityMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'visible', 'Unknown event type: ' + eventType);\r\n        return [this.visible_];\r\n    };\r\n    return VisibilityMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Monitors online state (as reported by window.online/offline events).\r\n *\r\n * The expectation is that this could have many false positives (thinks we are online\r\n * when we're not), but no false negatives.  So we can safely use it to determine when\r\n * we definitely cannot reach the internet.\r\n *\r\n * @extends {EventEmitter}\r\n */\r\nvar OnlineMonitor = /** @class */ (function (_super) {\r\n    __extends(OnlineMonitor, _super);\r\n    function OnlineMonitor() {\r\n        var _this = _super.call(this, ['online']) || this;\r\n        _this.online_ = true;\r\n        // We've had repeated complaints that Cordova apps can get stuck \"offline\", e.g.\r\n        // https://forum.ionicframework.com/t/firebase-connection-is-lost-and-never-come-back/43810\r\n        // It would seem that the 'online' event does not always fire consistently. So we disable it\r\n        // for Cordova.\r\n        if (typeof window !== 'undefined' &&\r\n            typeof window.addEventListener !== 'undefined' &&\r\n            !isMobileCordova()) {\r\n            window.addEventListener('online', function () {\r\n                if (!_this.online_) {\r\n                    _this.online_ = true;\r\n                    _this.trigger('online', true);\r\n                }\r\n            }, false);\r\n            window.addEventListener('offline', function () {\r\n                if (_this.online_) {\r\n                    _this.online_ = false;\r\n                    _this.trigger('online', false);\r\n                }\r\n            }, false);\r\n        }\r\n        return _this;\r\n    }\r\n    OnlineMonitor.getInstance = function () {\r\n        return new OnlineMonitor();\r\n    };\r\n    /**\r\n     * @param {!string} eventType\r\n     * @return {Array.<boolean>}\r\n     */\r\n    OnlineMonitor.prototype.getInitialEvent = function (eventType) {\r\n        assert(eventType === 'online', 'Unknown event type: ' + eventType);\r\n        return [this.online_];\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    OnlineMonitor.prototype.currentlyOnline = function () {\r\n        return this.online_;\r\n    };\r\n    return OnlineMonitor;\r\n}(EventEmitter));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class ensures the packets from the server arrive in order\r\n * This class takes data from the server and ensures it gets passed into the callbacks in order.\r\n * @constructor\r\n */\r\nvar PacketReceiver = /** @class */ (function () {\r\n    /**\r\n     * @param onMessage_\r\n     */\r\n    function PacketReceiver(onMessage_) {\r\n        this.onMessage_ = onMessage_;\r\n        this.pendingResponses = [];\r\n        this.currentResponseNum = 0;\r\n        this.closeAfterResponse = -1;\r\n        this.onClose = null;\r\n    }\r\n    PacketReceiver.prototype.closeAfter = function (responseNum, callback) {\r\n        this.closeAfterResponse = responseNum;\r\n        this.onClose = callback;\r\n        if (this.closeAfterResponse < this.currentResponseNum) {\r\n            this.onClose();\r\n            this.onClose = null;\r\n        }\r\n    };\r\n    /**\r\n     * Each message from the server comes with a response number, and an array of data. The responseNumber\r\n     * allows us to ensure that we process them in the right order, since we can't be guaranteed that all\r\n     * browsers will respond in the same order as the requests we sent\r\n     * @param {number} requestNum\r\n     * @param {Array} data\r\n     */\r\n    PacketReceiver.prototype.handleResponse = function (requestNum, data) {\r\n        var _this = this;\r\n        this.pendingResponses[requestNum] = data;\r\n        var _loop_1 = function () {\r\n            var toProcess = this_1.pendingResponses[this_1.currentResponseNum];\r\n            delete this_1.pendingResponses[this_1.currentResponseNum];\r\n            var _loop_2 = function (i) {\r\n                if (toProcess[i]) {\r\n                    exceptionGuard(function () {\r\n                        _this.onMessage_(toProcess[i]);\r\n                    });\r\n                }\r\n            };\r\n            for (var i = 0; i < toProcess.length; ++i) {\r\n                _loop_2(i);\r\n            }\r\n            if (this_1.currentResponseNum === this_1.closeAfterResponse) {\r\n                if (this_1.onClose) {\r\n                    this_1.onClose();\r\n                    this_1.onClose = null;\r\n                }\r\n                return \"break\";\r\n            }\r\n            this_1.currentResponseNum++;\r\n        };\r\n        var this_1 = this;\r\n        while (this.pendingResponses[this.currentResponseNum]) {\r\n            var state_1 = _loop_1();\r\n            if (state_1 === \"break\")\r\n                break;\r\n        }\r\n    };\r\n    return PacketReceiver;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// URL query parameters associated with longpolling\r\nvar FIREBASE_LONGPOLL_START_PARAM = 'start';\r\nvar FIREBASE_LONGPOLL_CLOSE_COMMAND = 'close';\r\nvar FIREBASE_LONGPOLL_COMMAND_CB_NAME = 'pLPCommand';\r\nvar FIREBASE_LONGPOLL_DATA_CB_NAME = 'pRTLPCB';\r\nvar FIREBASE_LONGPOLL_ID_PARAM = 'id';\r\nvar FIREBASE_LONGPOLL_PW_PARAM = 'pw';\r\nvar FIREBASE_LONGPOLL_SERIAL_PARAM = 'ser';\r\nvar FIREBASE_LONGPOLL_CALLBACK_ID_PARAM = 'cb';\r\nvar FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM = 'seg';\r\nvar FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET = 'ts';\r\nvar FIREBASE_LONGPOLL_DATA_PARAM = 'd';\r\nvar FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM = 'dframe';\r\n//Data size constants.\r\n//TODO: Perf: the maximum length actually differs from browser to browser.\r\n// We should check what browser we're on and set accordingly.\r\nvar MAX_URL_DATA_SIZE = 1870;\r\nvar SEG_HEADER_SIZE = 30; //ie: &seg=8299234&ts=982389123&d=\r\nvar MAX_PAYLOAD_SIZE = MAX_URL_DATA_SIZE - SEG_HEADER_SIZE;\r\n/**\r\n * Keepalive period\r\n * send a fresh request at minimum every 25 seconds. Opera has a maximum request\r\n * length of 30 seconds that we can't exceed.\r\n * @const\r\n * @type {number}\r\n */\r\nvar KEEPALIVE_REQUEST_INTERVAL = 25000;\r\n/**\r\n * How long to wait before aborting a long-polling connection attempt.\r\n * @const\r\n * @type {number}\r\n */\r\nvar LP_CONNECT_TIMEOUT = 30000;\r\n/**\r\n * This class manages a single long-polling connection.\r\n *\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar BrowserPollConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId An identifier for this connection, used for logging\r\n     * @param repoInfo The info for the endpoint to send data to.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionid if we are reconnecting for an existing\r\n     *                                         transport session\r\n     * @param lastSessionId Optional lastSessionId if the PersistentConnection has already created a\r\n     *                                     connection previously\r\n     */\r\n    function BrowserPollConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.repoInfo = repoInfo;\r\n        this.applicationId = applicationId;\r\n        this.transportSessionId = transportSessionId;\r\n        this.lastSessionId = lastSessionId;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.everConnected_ = false;\r\n        this.log_ = logWrapper(connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.urlFn = function (params) {\r\n            return repoInfo.connectionURL(LONG_POLLING, params);\r\n        };\r\n    }\r\n    /**\r\n     *\r\n     * @param {function(Object)} onMessage Callback when messages arrive\r\n     * @param {function()} onDisconnect Callback with connection lost.\r\n     */\r\n    BrowserPollConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.curSegmentNum = 0;\r\n        this.onDisconnect_ = onDisconnect;\r\n        this.myPacketOrderer = new PacketReceiver(onMessage);\r\n        this.isClosed_ = false;\r\n        this.connectTimeoutTimer_ = setTimeout(function () {\r\n            _this.log_('Timed out trying to connect.');\r\n            // Make sure we clear the host cache\r\n            _this.onClosed_();\r\n            _this.connectTimeoutTimer_ = null;\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(LP_CONNECT_TIMEOUT));\r\n        // Ensure we delay the creation of the iframe until the DOM is loaded.\r\n        executeWhenDOMReady(function () {\r\n            if (_this.isClosed_) {\r\n                return;\r\n            }\r\n            //Set up a callback that gets triggered once a connection is set up.\r\n            _this.scriptTagHolder = new FirebaseIFrameScriptHolder(function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 5), command = _a[0], arg1 = _a[1], arg2 = _a[2], arg3 = _a[3], arg4 = _a[4];\r\n                _this.incrementIncomingBytes_(args);\r\n                if (!_this.scriptTagHolder) {\r\n                    return; // we closed the connection.\r\n                }\r\n                if (_this.connectTimeoutTimer_) {\r\n                    clearTimeout(_this.connectTimeoutTimer_);\r\n                    _this.connectTimeoutTimer_ = null;\r\n                }\r\n                _this.everConnected_ = true;\r\n                if (command === FIREBASE_LONGPOLL_START_PARAM) {\r\n                    _this.id = arg1;\r\n                    _this.password = arg2;\r\n                }\r\n                else if (command === FIREBASE_LONGPOLL_CLOSE_COMMAND) {\r\n                    // Don't clear the host cache. We got a response from the server, so we know it's reachable\r\n                    if (arg1) {\r\n                        // We aren't expecting any more data (other than what the server's already in the process of sending us\r\n                        // through our already open polls), so don't send any more.\r\n                        _this.scriptTagHolder.sendNewPolls = false;\r\n                        // arg1 in this case is the last response number sent by the server. We should try to receive\r\n                        // all of the responses up to this one before closing\r\n                        _this.myPacketOrderer.closeAfter(arg1, function () {\r\n                            _this.onClosed_();\r\n                        });\r\n                    }\r\n                    else {\r\n                        _this.onClosed_();\r\n                    }\r\n                }\r\n                else {\r\n                    throw new Error('Unrecognized command received: ' + command);\r\n                }\r\n            }, function () {\r\n                var args = [];\r\n                for (var _i = 0; _i < arguments.length; _i++) {\r\n                    args[_i] = arguments[_i];\r\n                }\r\n                var _a = __read(args, 2), pN = _a[0], data = _a[1];\r\n                _this.incrementIncomingBytes_(args);\r\n                _this.myPacketOrderer.handleResponse(pN, data);\r\n            }, function () {\r\n                _this.onClosed_();\r\n            }, _this.urlFn);\r\n            //Send the initial request to connect. The serial number is simply to keep the browser from pulling previous results\r\n            //from cache.\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_START_PARAM] = 't';\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = Math.floor(Math.random() * 100000000);\r\n            if (_this.scriptTagHolder.uniqueCallbackIdentifier) {\r\n                urlParams[FIREBASE_LONGPOLL_CALLBACK_ID_PARAM] = _this.scriptTagHolder.uniqueCallbackIdentifier;\r\n            }\r\n            urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n            if (_this.transportSessionId) {\r\n                urlParams[TRANSPORT_SESSION_PARAM] = _this.transportSessionId;\r\n            }\r\n            if (_this.lastSessionId) {\r\n                urlParams[LAST_SESSION_PARAM] = _this.lastSessionId;\r\n            }\r\n            if (_this.applicationId) {\r\n                urlParams[APPLICATION_ID_PARAM] = _this.applicationId;\r\n            }\r\n            if (typeof location !== 'undefined' &&\r\n                location.href &&\r\n                location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n                urlParams[REFERER_PARAM] = FORGE_REF;\r\n            }\r\n            var connectURL = _this.urlFn(urlParams);\r\n            _this.log_('Connecting via long-poll to ' + connectURL);\r\n            _this.scriptTagHolder.addTag(connectURL, function () {\r\n                /* do nothing */\r\n            });\r\n        });\r\n    };\r\n    /**\r\n     * Call this when a handshake has completed successfully and we want to consider the connection established\r\n     */\r\n    BrowserPollConnection.prototype.start = function () {\r\n        this.scriptTagHolder.startLongPoll(this.id, this.password);\r\n        this.addDisconnectPingFrame(this.id, this.password);\r\n    };\r\n    /**\r\n     * Forces long polling to be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceAllow = function () {\r\n        BrowserPollConnection.forceAllow_ = true;\r\n    };\r\n    /**\r\n     * Forces longpolling to not be considered as a potential transport\r\n     */\r\n    BrowserPollConnection.forceDisallow = function () {\r\n        BrowserPollConnection.forceDisallow_ = true;\r\n    };\r\n    // Static method, use string literal so it can be accessed in a generic way\r\n    BrowserPollConnection.isAvailable = function () {\r\n        if (isNodeSdk()) {\r\n            return false;\r\n        }\r\n        else if (BrowserPollConnection.forceAllow_) {\r\n            return true;\r\n        }\r\n        else {\r\n            // NOTE: In React-Native there's normally no 'document', but if you debug a React-Native app in\r\n            // the Chrome debugger, 'document' is defined, but document.createElement is null (2015/06/08).\r\n            return (!BrowserPollConnection.forceDisallow_ &&\r\n                typeof document !== 'undefined' &&\r\n                document.createElement != null &&\r\n                !isChromeExtensionContentScript() &&\r\n                !isWindowsStoreApp());\r\n        }\r\n    };\r\n    /**\r\n     * No-op for polling\r\n     */\r\n    BrowserPollConnection.prototype.markConnectionHealthy = function () { };\r\n    /**\r\n     * Stops polling and cleans up the iframe\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.scriptTagHolder) {\r\n            this.scriptTagHolder.close();\r\n            this.scriptTagHolder = null;\r\n        }\r\n        //remove the disconnect frame, which will trigger an XHR call to the server to tell it we're leaving.\r\n        if (this.myDisconnFrame) {\r\n            document.body.removeChild(this.myDisconnFrame);\r\n            this.myDisconnFrame = null;\r\n        }\r\n        if (this.connectTimeoutTimer_) {\r\n            clearTimeout(this.connectTimeoutTimer_);\r\n            this.connectTimeoutTimer_ = null;\r\n        }\r\n    };\r\n    /**\r\n     * Triggered when this transport is closed\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is closing itself');\r\n            this.shutdown_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_(this.everConnected_);\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler. RealTime has requested we shut down. Kill our connection and tell the server\r\n     * that we've left.\r\n     */\r\n    BrowserPollConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('Longpoll is being closed.');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Send the JSON object down to the server. It will need to be stringified, base64 encoded, and then\r\n     * broken into chunks (since URLs have a small maximum length).\r\n     * @param {!Object} data The JSON data to transmit.\r\n     */\r\n    BrowserPollConnection.prototype.send = function (data) {\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //first, lets get the base64-encoded data\r\n        var base64data = base64Encode(dataStr);\r\n        //We can only fit a certain amount in each URL, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(base64data, MAX_PAYLOAD_SIZE);\r\n        //Enqueue each segment for transmission. We assign each chunk a sequential ID and a total number\r\n        //of segments so that we can reassemble the packet on the server.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.scriptTagHolder.enqueueSegment(this.curSegmentNum, dataSegs.length, dataSegs[i]);\r\n            this.curSegmentNum++;\r\n        }\r\n    };\r\n    /**\r\n     * This is how we notify the server that we're leaving.\r\n     * We aren't able to send requests with DHTML on a window close event, but we can\r\n     * trigger XHR requests in some browsers (everything but Opera basically).\r\n     * @param {!string} id\r\n     * @param {!string} pw\r\n     */\r\n    BrowserPollConnection.prototype.addDisconnectPingFrame = function (id, pw) {\r\n        if (isNodeSdk()) {\r\n            return;\r\n        }\r\n        this.myDisconnFrame = document.createElement('iframe');\r\n        var urlParams = {};\r\n        urlParams[FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM] = 't';\r\n        urlParams[FIREBASE_LONGPOLL_ID_PARAM] = id;\r\n        urlParams[FIREBASE_LONGPOLL_PW_PARAM] = pw;\r\n        this.myDisconnFrame.src = this.urlFn(urlParams);\r\n        this.myDisconnFrame.style.display = 'none';\r\n        document.body.appendChild(this.myDisconnFrame);\r\n    };\r\n    /**\r\n     * Used to track the bytes received by this client\r\n     * @param {*} args\r\n     * @private\r\n     */\r\n    BrowserPollConnection.prototype.incrementIncomingBytes_ = function (args) {\r\n        // TODO: This is an annoying perf hit just to track the number of incoming bytes.  Maybe it should be opt-in.\r\n        var bytesReceived = stringify(args).length;\r\n        this.bytesReceived += bytesReceived;\r\n        this.stats_.incrementCounter('bytes_received', bytesReceived);\r\n    };\r\n    return BrowserPollConnection;\r\n}());\r\n/*********************************************************************************************\r\n * A wrapper around an iframe that is used as a long-polling script holder.\r\n * @constructor\r\n *********************************************************************************************/\r\nvar FirebaseIFrameScriptHolder = /** @class */ (function () {\r\n    /**\r\n     * @param commandCB - The callback to be called when control commands are recevied from the server.\r\n     * @param onMessageCB - The callback to be triggered when responses arrive from the server.\r\n     * @param onDisconnect - The callback to be triggered when this tag holder is closed\r\n     * @param urlFn - A function that provides the URL of the endpoint to send data to.\r\n     */\r\n    function FirebaseIFrameScriptHolder(commandCB, onMessageCB, onDisconnect, urlFn) {\r\n        this.onDisconnect = onDisconnect;\r\n        this.urlFn = urlFn;\r\n        //We maintain a count of all of the outstanding requests, because if we have too many active at once it can cause\r\n        //problems in some browsers.\r\n        this.outstandingRequests = new Set();\r\n        //A queue of the pending segments waiting for transmission to the server.\r\n        this.pendingSegs = [];\r\n        //A serial number. We use this for two things:\r\n        // 1) A way to ensure the browser doesn't cache responses to polls\r\n        // 2) A way to make the server aware when long-polls arrive in a different order than we started them. The\r\n        //    server needs to release both polls in this case or it will cause problems in Opera since Opera can only execute\r\n        //    JSONP code in the order it was added to the iframe.\r\n        this.currentSerial = Math.floor(Math.random() * 100000000);\r\n        // This gets set to false when we're \"closing down\" the connection (e.g. we're switching transports but there's still\r\n        // incoming data from the server that we're waiting for).\r\n        this.sendNewPolls = true;\r\n        if (!isNodeSdk()) {\r\n            //Each script holder registers a couple of uniquely named callbacks with the window. These are called from the\r\n            //iframes where we put the long-polling script tags. We have two callbacks:\r\n            //   1) Command Callback - Triggered for control issues, like starting a connection.\r\n            //   2) Message Callback - Triggered when new data arrives.\r\n            this.uniqueCallbackIdentifier = LUIDGenerator();\r\n            window[FIREBASE_LONGPOLL_COMMAND_CB_NAME + this.uniqueCallbackIdentifier] = commandCB;\r\n            window[FIREBASE_LONGPOLL_DATA_CB_NAME + this.uniqueCallbackIdentifier] = onMessageCB;\r\n            //Create an iframe for us to add script tags to.\r\n            this.myIFrame = FirebaseIFrameScriptHolder.createIFrame_();\r\n            // Set the iframe's contents.\r\n            var script = '';\r\n            // if we set a javascript url, it's IE and we need to set the document domain. The javascript url is sufficient\r\n            // for ie9, but ie8 needs to do it again in the document itself.\r\n            if (this.myIFrame.src &&\r\n                this.myIFrame.src.substr(0, 'javascript:'.length) === 'javascript:') {\r\n                var currentDomain = document.domain;\r\n                script = '<script>document.domain=\"' + currentDomain + '\";</script>';\r\n            }\r\n            var iframeContents = '<html><body>' + script + '</body></html>';\r\n            try {\r\n                this.myIFrame.doc.open();\r\n                this.myIFrame.doc.write(iframeContents);\r\n                this.myIFrame.doc.close();\r\n            }\r\n            catch (e) {\r\n                log('frame writing exception');\r\n                if (e.stack) {\r\n                    log(e.stack);\r\n                }\r\n                log(e);\r\n            }\r\n        }\r\n        else {\r\n            this.commandCB = commandCB;\r\n            this.onMessageCB = onMessageCB;\r\n        }\r\n    }\r\n    /**\r\n     * Each browser has its own funny way to handle iframes. Here we mush them all together into one object that I can\r\n     * actually use.\r\n     * @private\r\n     * @return {Element}\r\n     */\r\n    FirebaseIFrameScriptHolder.createIFrame_ = function () {\r\n        var iframe = document.createElement('iframe');\r\n        iframe.style.display = 'none';\r\n        // This is necessary in order to initialize the document inside the iframe\r\n        if (document.body) {\r\n            document.body.appendChild(iframe);\r\n            try {\r\n                // If document.domain has been modified in IE, this will throw an error, and we need to set the\r\n                // domain of the iframe's document manually. We can do this via a javascript: url as the src attribute\r\n                // Also note that we must do this *after* the iframe has been appended to the page. Otherwise it doesn't work.\r\n                var a = iframe.contentWindow.document;\r\n                if (!a) {\r\n                    // Apologies for the log-spam, I need to do something to keep closure from optimizing out the assignment above.\r\n                    log('No IE domain setting required');\r\n                }\r\n            }\r\n            catch (e) {\r\n                var domain = document.domain;\r\n                iframe.src =\r\n                    \"javascript:void((function(){document.open();document.domain='\" +\r\n                        domain +\r\n                        \"';document.close();})())\";\r\n            }\r\n        }\r\n        else {\r\n            // LongPollConnection attempts to delay initialization until the document is ready, so hopefully this\r\n            // never gets hit.\r\n            throw 'Document body has not initialized. Wait to initialize Firebase until after the document is ready.';\r\n        }\r\n        // Get the document of the iframe in a browser-specific way.\r\n        if (iframe.contentDocument) {\r\n            iframe.doc = iframe.contentDocument; // Firefox, Opera, Safari\r\n        }\r\n        else if (iframe.contentWindow) {\r\n            iframe.doc = iframe.contentWindow.document; // Internet Explorer\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }\r\n        else if (iframe.document) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            iframe.doc = iframe.document; //others?\r\n        }\r\n        return iframe;\r\n    };\r\n    /**\r\n     * Cancel all outstanding queries and remove the frame.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.close = function () {\r\n        var _this = this;\r\n        //Mark this iframe as dead, so no new requests are sent.\r\n        this.alive = false;\r\n        if (this.myIFrame) {\r\n            //We have to actually remove all of the html inside this iframe before removing it from the\r\n            //window, or IE will continue loading and executing the script tags we've already added, which\r\n            //can lead to some errors being thrown. Setting innerHTML seems to be the easiest way to do this.\r\n            this.myIFrame.doc.body.innerHTML = '';\r\n            setTimeout(function () {\r\n                if (_this.myIFrame !== null) {\r\n                    document.body.removeChild(_this.myIFrame);\r\n                    _this.myIFrame = null;\r\n                }\r\n            }, Math.floor(0));\r\n        }\r\n        // Protect from being called recursively.\r\n        var onDisconnect = this.onDisconnect;\r\n        if (onDisconnect) {\r\n            this.onDisconnect = null;\r\n            onDisconnect();\r\n        }\r\n    };\r\n    /**\r\n     * Actually start the long-polling session by adding the first script tag(s) to the iframe.\r\n     * @param {!string} id - The ID of this connection\r\n     * @param {!string} pw - The password for this connection\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.startLongPoll = function (id, pw) {\r\n        this.myID = id;\r\n        this.myPW = pw;\r\n        this.alive = true;\r\n        //send the initial request. If there are requests queued, make sure that we transmit as many as we are currently able to.\r\n        while (this.newRequest_()) { }\r\n    };\r\n    /**\r\n     * This is called any time someone might want a script tag to be added. It adds a script tag when there aren't\r\n     * too many outstanding requests and we are still alive.\r\n     *\r\n     * If there are outstanding packet segments to send, it sends one. If there aren't, it sends a long-poll anyways if\r\n     * needed.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.newRequest_ = function () {\r\n        // We keep one outstanding request open all the time to receive data, but if we need to send data\r\n        // (pendingSegs.length > 0) then we create a new request to send the data.  The server will automatically\r\n        // close the old request.\r\n        if (this.alive &&\r\n            this.sendNewPolls &&\r\n            this.outstandingRequests.size < (this.pendingSegs.length > 0 ? 2 : 1)) {\r\n            //construct our url\r\n            this.currentSerial++;\r\n            var urlParams = {};\r\n            urlParams[FIREBASE_LONGPOLL_ID_PARAM] = this.myID;\r\n            urlParams[FIREBASE_LONGPOLL_PW_PARAM] = this.myPW;\r\n            urlParams[FIREBASE_LONGPOLL_SERIAL_PARAM] = this.currentSerial;\r\n            var theURL = this.urlFn(urlParams);\r\n            //Now add as much data as we can.\r\n            var curDataString = '';\r\n            var i = 0;\r\n            while (this.pendingSegs.length > 0) {\r\n                //first, lets see if the next segment will fit.\r\n                var nextSeg = this.pendingSegs[0];\r\n                if (nextSeg.d.length +\r\n                    SEG_HEADER_SIZE +\r\n                    curDataString.length <=\r\n                    MAX_URL_DATA_SIZE) {\r\n                    //great, the segment will fit. Lets append it.\r\n                    var theSeg = this.pendingSegs.shift();\r\n                    curDataString =\r\n                        curDataString +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.seg +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.ts +\r\n                            '&' +\r\n                            FIREBASE_LONGPOLL_DATA_PARAM +\r\n                            i +\r\n                            '=' +\r\n                            theSeg.d;\r\n                    i++;\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n            theURL = theURL + curDataString;\r\n            this.addLongPollTag_(theURL, this.currentSerial);\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    /**\r\n     * Queue a packet for transmission to the server.\r\n     * @param segnum - A sequential id for this packet segment used for reassembly\r\n     * @param totalsegs - The total number of segments in this packet\r\n     * @param data - The data for this segment.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.enqueueSegment = function (segnum, totalsegs, data) {\r\n        //add this to the queue of segments to send.\r\n        this.pendingSegs.push({ seg: segnum, ts: totalsegs, d: data });\r\n        //send the data immediately if there isn't already data being transmitted, unless\r\n        //startLongPoll hasn't been called yet.\r\n        if (this.alive) {\r\n            this.newRequest_();\r\n        }\r\n    };\r\n    /**\r\n     * Add a script tag for a regular long-poll request.\r\n     * @param {!string} url - The URL of the script tag.\r\n     * @param {!number} serial - The serial number of the request.\r\n     * @private\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addLongPollTag_ = function (url, serial) {\r\n        var _this = this;\r\n        //remember that we sent this request.\r\n        this.outstandingRequests.add(serial);\r\n        var doNewRequest = function () {\r\n            _this.outstandingRequests.delete(serial);\r\n            _this.newRequest_();\r\n        };\r\n        // If this request doesn't return on its own accord (by the server sending us some data), we'll\r\n        // create a new one after the KEEPALIVE interval to make sure we always keep a fresh request open.\r\n        var keepaliveTimeout = setTimeout(doNewRequest, Math.floor(KEEPALIVE_REQUEST_INTERVAL));\r\n        var readyStateCB = function () {\r\n            // Request completed.  Cancel the keepalive.\r\n            clearTimeout(keepaliveTimeout);\r\n            // Trigger a new request so we can continue receiving data.\r\n            doNewRequest();\r\n        };\r\n        this.addTag(url, readyStateCB);\r\n    };\r\n    /**\r\n     * Add an arbitrary script tag to the iframe.\r\n     * @param {!string} url - The URL for the script tag source.\r\n     * @param {!function()} loadCB - A callback to be triggered once the script has loaded.\r\n     */\r\n    FirebaseIFrameScriptHolder.prototype.addTag = function (url, loadCB) {\r\n        var _this = this;\r\n        if (isNodeSdk()) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            this.doNodeLongPoll(url, loadCB);\r\n        }\r\n        else {\r\n            setTimeout(function () {\r\n                try {\r\n                    // if we're already closed, don't add this poll\r\n                    if (!_this.sendNewPolls) {\r\n                        return;\r\n                    }\r\n                    var newScript_1 = _this.myIFrame.doc.createElement('script');\r\n                    newScript_1.type = 'text/javascript';\r\n                    newScript_1.async = true;\r\n                    newScript_1.src = url;\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    newScript_1.onload = newScript_1.onreadystatechange = function () {\r\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                        var rstate = newScript_1.readyState;\r\n                        if (!rstate || rstate === 'loaded' || rstate === 'complete') {\r\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                            newScript_1.onload = newScript_1.onreadystatechange = null;\r\n                            if (newScript_1.parentNode) {\r\n                                newScript_1.parentNode.removeChild(newScript_1);\r\n                            }\r\n                            loadCB();\r\n                        }\r\n                    };\r\n                    newScript_1.onerror = function () {\r\n                        log('Long-poll script failed to load: ' + url);\r\n                        _this.sendNewPolls = false;\r\n                        _this.close();\r\n                    };\r\n                    _this.myIFrame.doc.body.appendChild(newScript_1);\r\n                }\r\n                catch (e) {\r\n                    // TODO: we should make this error visible somehow\r\n                }\r\n            }, Math.floor(1));\r\n        }\r\n    };\r\n    return FirebaseIFrameScriptHolder;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/** The semver (www.semver.org) version of the SDK. */\r\nvar SDK_VERSION = '';\r\n// SDK_VERSION should be set before any database instance is created\r\nfunction setSDKVersion(version) {\r\n    SDK_VERSION = version;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar WEBSOCKET_MAX_FRAME_SIZE = 16384;\r\nvar WEBSOCKET_KEEPALIVE_INTERVAL = 45000;\r\nvar WebSocketImpl = null;\r\nif (typeof MozWebSocket !== 'undefined') {\r\n    WebSocketImpl = MozWebSocket;\r\n}\r\nelse if (typeof WebSocket !== 'undefined') {\r\n    WebSocketImpl = WebSocket;\r\n}\r\n/**\r\n * Create a new websocket connection with the given callbacks.\r\n * @constructor\r\n * @implements {Transport}\r\n */\r\nvar WebSocketConnection = /** @class */ (function () {\r\n    /**\r\n     * @param connId identifier for this transport\r\n     * @param repoInfo The info for the websocket endpoint.\r\n     * @param applicationId The Firebase App ID for this project.\r\n     * @param transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param lastSessionId Optional lastSessionId if there was a previous connection\r\n     */\r\n    function WebSocketConnection(connId, repoInfo, applicationId, transportSessionId, lastSessionId) {\r\n        this.connId = connId;\r\n        this.applicationId = applicationId;\r\n        this.keepaliveTimer = null;\r\n        this.frames = null;\r\n        this.totalFrames = 0;\r\n        this.bytesSent = 0;\r\n        this.bytesReceived = 0;\r\n        this.log_ = logWrapper(this.connId);\r\n        this.stats_ = StatsManager.getCollection(repoInfo);\r\n        this.connURL = WebSocketConnection.connectionURL_(repoInfo, transportSessionId, lastSessionId);\r\n        this.nodeAdmin = repoInfo.nodeAdmin;\r\n    }\r\n    /**\r\n     * @param {RepoInfo} repoInfo The info for the websocket endpoint.\r\n     * @param {string=} transportSessionId Optional transportSessionId if this is connecting to an existing transport\r\n     *                                         session\r\n     * @param {string=} lastSessionId Optional lastSessionId if there was a previous connection\r\n     * @return {string} connection url\r\n     * @private\r\n     */\r\n    WebSocketConnection.connectionURL_ = function (repoInfo, transportSessionId, lastSessionId) {\r\n        var urlParams = {};\r\n        urlParams[VERSION_PARAM] = PROTOCOL_VERSION;\r\n        if (!isNodeSdk() &&\r\n            typeof location !== 'undefined' &&\r\n            location.href &&\r\n            location.href.indexOf(FORGE_DOMAIN) !== -1) {\r\n            urlParams[REFERER_PARAM] = FORGE_REF;\r\n        }\r\n        if (transportSessionId) {\r\n            urlParams[TRANSPORT_SESSION_PARAM] = transportSessionId;\r\n        }\r\n        if (lastSessionId) {\r\n            urlParams[LAST_SESSION_PARAM] = lastSessionId;\r\n        }\r\n        return repoInfo.connectionURL(WEBSOCKET, urlParams);\r\n    };\r\n    /**\r\n     *\r\n     * @param onMessage Callback when messages arrive\r\n     * @param onDisconnect Callback with connection lost.\r\n     */\r\n    WebSocketConnection.prototype.open = function (onMessage, onDisconnect) {\r\n        var _this = this;\r\n        this.onDisconnect = onDisconnect;\r\n        this.onMessage = onMessage;\r\n        this.log_('Websocket connecting to ' + this.connURL);\r\n        this.everConnected_ = false;\r\n        // Assume failure until proven otherwise.\r\n        PersistentStorage.set('previous_websocket_failure', true);\r\n        try {\r\n            if (isNodeSdk()) {\r\n                var device = this.nodeAdmin ? 'AdminNode' : 'Node';\r\n                // UA Format: Firebase/<wire_protocol>/<sdk_version>/<platform>/<device>\r\n                var options = {\r\n                    headers: {\r\n                        'User-Agent': \"Firebase/\" + PROTOCOL_VERSION + \"/\" + SDK_VERSION + \"/\" + process.platform + \"/\" + device,\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                // Plumb appropriate http_proxy environment variable into faye-websocket if it exists.\r\n                var env = process['env'];\r\n                var proxy = this.connURL.indexOf('wss://') === 0\r\n                    ? env['HTTPS_PROXY'] || env['https_proxy']\r\n                    : env['HTTP_PROXY'] || env['http_proxy'];\r\n                if (proxy) {\r\n                    options['proxy'] = { origin: proxy };\r\n                }\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n            else {\r\n                var options = {\r\n                    headers: {\r\n                        'X-Firebase-GMPID': this.applicationId || ''\r\n                    }\r\n                };\r\n                this.mySock = new WebSocketImpl(this.connURL, [], options);\r\n            }\r\n        }\r\n        catch (e) {\r\n            this.log_('Error instantiating WebSocket.');\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                this.log_(error);\r\n            }\r\n            this.onClosed_();\r\n            return;\r\n        }\r\n        this.mySock.onopen = function () {\r\n            _this.log_('Websocket connected.');\r\n            _this.everConnected_ = true;\r\n        };\r\n        this.mySock.onclose = function () {\r\n            _this.log_('Websocket connection was disconnected.');\r\n            _this.mySock = null;\r\n            _this.onClosed_();\r\n        };\r\n        this.mySock.onmessage = function (m) {\r\n            _this.handleIncomingFrame(m);\r\n        };\r\n        this.mySock.onerror = function (e) {\r\n            _this.log_('WebSocket error.  Closing connection.');\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var error = e.message || e.data;\r\n            if (error) {\r\n                _this.log_(error);\r\n            }\r\n            _this.onClosed_();\r\n        };\r\n    };\r\n    /**\r\n     * No-op for websockets, we don't need to do anything once the connection is confirmed as open\r\n     */\r\n    WebSocketConnection.prototype.start = function () { };\r\n    WebSocketConnection.forceDisallow = function () {\r\n        WebSocketConnection.forceDisallow_ = true;\r\n    };\r\n    WebSocketConnection.isAvailable = function () {\r\n        var isOldAndroid = false;\r\n        if (typeof navigator !== 'undefined' && navigator.userAgent) {\r\n            var oldAndroidRegex = /Android ([0-9]{0,}\\.[0-9]{0,})/;\r\n            var oldAndroidMatch = navigator.userAgent.match(oldAndroidRegex);\r\n            if (oldAndroidMatch && oldAndroidMatch.length > 1) {\r\n                if (parseFloat(oldAndroidMatch[1]) < 4.4) {\r\n                    isOldAndroid = true;\r\n                }\r\n            }\r\n        }\r\n        return (!isOldAndroid &&\r\n            WebSocketImpl !== null &&\r\n            !WebSocketConnection.forceDisallow_);\r\n    };\r\n    /**\r\n     * Returns true if we previously failed to connect with this transport.\r\n     * @return {boolean}\r\n     */\r\n    WebSocketConnection.previouslyFailed = function () {\r\n        // If our persistent storage is actually only in-memory storage,\r\n        // we default to assuming that it previously failed to be safe.\r\n        return (PersistentStorage.isInMemoryStorage ||\r\n            PersistentStorage.get('previous_websocket_failure') === true);\r\n    };\r\n    WebSocketConnection.prototype.markConnectionHealthy = function () {\r\n        PersistentStorage.remove('previous_websocket_failure');\r\n    };\r\n    WebSocketConnection.prototype.appendFrame_ = function (data) {\r\n        this.frames.push(data);\r\n        if (this.frames.length === this.totalFrames) {\r\n            var fullMess = this.frames.join('');\r\n            this.frames = null;\r\n            var jsonMess = jsonEval(fullMess);\r\n            //handle the message\r\n            this.onMessage(jsonMess);\r\n        }\r\n    };\r\n    /**\r\n     * @param {number} frameCount The number of frames we are expecting from the server\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.handleNewFrameCount_ = function (frameCount) {\r\n        this.totalFrames = frameCount;\r\n        this.frames = [];\r\n    };\r\n    /**\r\n     * Attempts to parse a frame count out of some text. If it can't, assumes a value of 1\r\n     * @param {!String} data\r\n     * @return {?String} Any remaining data to be process, or null if there is none\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.extractFrameCount_ = function (data) {\r\n        assert(this.frames === null, 'We already have a frame buffer');\r\n        // TODO: The server is only supposed to send up to 9999 frames (i.e. length <= 4), but that isn't being enforced\r\n        // currently.  So allowing larger frame counts (length <= 6).  See https://app.asana.com/0/search/8688598998380/8237608042508\r\n        if (data.length <= 6) {\r\n            var frameCount = Number(data);\r\n            if (!isNaN(frameCount)) {\r\n                this.handleNewFrameCount_(frameCount);\r\n                return null;\r\n            }\r\n        }\r\n        this.handleNewFrameCount_(1);\r\n        return data;\r\n    };\r\n    /**\r\n     * Process a websocket frame that has arrived from the server.\r\n     * @param mess The frame data\r\n     */\r\n    WebSocketConnection.prototype.handleIncomingFrame = function (mess) {\r\n        if (this.mySock === null) {\r\n            return; // Chrome apparently delivers incoming packets even after we .close() the connection sometimes.\r\n        }\r\n        var data = mess['data'];\r\n        this.bytesReceived += data.length;\r\n        this.stats_.incrementCounter('bytes_received', data.length);\r\n        this.resetKeepAlive();\r\n        if (this.frames !== null) {\r\n            // we're buffering\r\n            this.appendFrame_(data);\r\n        }\r\n        else {\r\n            // try to parse out a frame count, otherwise, assume 1 and process it\r\n            var remainingData = this.extractFrameCount_(data);\r\n            if (remainingData !== null) {\r\n                this.appendFrame_(remainingData);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Send a message to the server\r\n     * @param {Object} data The JSON object to transmit\r\n     */\r\n    WebSocketConnection.prototype.send = function (data) {\r\n        this.resetKeepAlive();\r\n        var dataStr = stringify(data);\r\n        this.bytesSent += dataStr.length;\r\n        this.stats_.incrementCounter('bytes_sent', dataStr.length);\r\n        //We can only fit a certain amount in each websocket frame, so we need to split this request\r\n        //up into multiple pieces if it doesn't fit in one request.\r\n        var dataSegs = splitStringBySize(dataStr, WEBSOCKET_MAX_FRAME_SIZE);\r\n        //Send the length header\r\n        if (dataSegs.length > 1) {\r\n            this.sendString_(String(dataSegs.length));\r\n        }\r\n        //Send the actual data in segments.\r\n        for (var i = 0; i < dataSegs.length; i++) {\r\n            this.sendString_(dataSegs[i]);\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.shutdown_ = function () {\r\n        this.isClosed_ = true;\r\n        if (this.keepaliveTimer) {\r\n            clearInterval(this.keepaliveTimer);\r\n            this.keepaliveTimer = null;\r\n        }\r\n        if (this.mySock) {\r\n            this.mySock.close();\r\n            this.mySock = null;\r\n        }\r\n    };\r\n    WebSocketConnection.prototype.onClosed_ = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is closing itself');\r\n            this.shutdown_();\r\n            // since this is an internal close, trigger the close listener\r\n            if (this.onDisconnect) {\r\n                this.onDisconnect(this.everConnected_);\r\n                this.onDisconnect = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * External-facing close handler.\r\n     * Close the websocket and kill the connection.\r\n     */\r\n    WebSocketConnection.prototype.close = function () {\r\n        if (!this.isClosed_) {\r\n            this.log_('WebSocket is being closed');\r\n            this.shutdown_();\r\n        }\r\n    };\r\n    /**\r\n     * Kill the current keepalive timer and start a new one, to ensure that it always fires N seconds after\r\n     * the last activity.\r\n     */\r\n    WebSocketConnection.prototype.resetKeepAlive = function () {\r\n        var _this = this;\r\n        clearInterval(this.keepaliveTimer);\r\n        this.keepaliveTimer = setInterval(function () {\r\n            //If there has been no websocket activity for a while, send a no-op\r\n            if (_this.mySock) {\r\n                _this.sendString_('0');\r\n            }\r\n            _this.resetKeepAlive();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(WEBSOCKET_KEEPALIVE_INTERVAL));\r\n    };\r\n    /**\r\n     * Send a string over the websocket.\r\n     *\r\n     * @param {string} str String to send.\r\n     * @private\r\n     */\r\n    WebSocketConnection.prototype.sendString_ = function (str) {\r\n        // Firefox seems to sometimes throw exceptions (NS_ERROR_UNEXPECTED) from websocket .send()\r\n        // calls for some unknown reason.  We treat these as an error and disconnect.\r\n        // See https://app.asana.com/0/58926111402292/68021340250410\r\n        try {\r\n            this.mySock.send(str);\r\n        }\r\n        catch (e) {\r\n            this.log_('Exception thrown from WebSocket.send():', e.message || e.data, 'Closing connection.');\r\n            setTimeout(this.onClosed_.bind(this), 0);\r\n        }\r\n    };\r\n    /**\r\n     * Number of response before we consider the connection \"healthy.\"\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.responsesRequiredToBeHealthy = 2;\r\n    /**\r\n     * Time to wait for the connection te become healthy before giving up.\r\n     * @type {number}\r\n     */\r\n    WebSocketConnection.healthyTimeout = 30000;\r\n    return WebSocketConnection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Currently simplistic, this class manages what transport a Connection should use at various stages of its\r\n * lifecycle.\r\n *\r\n * It starts with longpolling in a browser, and httppolling on node. It then upgrades to websockets if\r\n * they are available.\r\n * @constructor\r\n */\r\nvar TransportManager = /** @class */ (function () {\r\n    /**\r\n     * @param {!RepoInfo} repoInfo Metadata around the namespace we're connecting to\r\n     */\r\n    function TransportManager(repoInfo) {\r\n        this.initTransports_(repoInfo);\r\n    }\r\n    Object.defineProperty(TransportManager, \"ALL_TRANSPORTS\", {\r\n        /**\r\n         * @const\r\n         * @type {!Array.<function(new:Transport, string, RepoInfo, string=)>}\r\n         */\r\n        get: function () {\r\n            return [BrowserPollConnection, WebSocketConnection];\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * @param {!RepoInfo} repoInfo\r\n     * @private\r\n     */\r\n    TransportManager.prototype.initTransports_ = function (repoInfo) {\r\n        var e_1, _a;\r\n        var isWebSocketsAvailable = WebSocketConnection && WebSocketConnection['isAvailable']();\r\n        var isSkipPollConnection = isWebSocketsAvailable && !WebSocketConnection.previouslyFailed();\r\n        if (repoInfo.webSocketOnly) {\r\n            if (!isWebSocketsAvailable) {\r\n                warn(\"wss:// URL used, but browser isn't known to support websockets.  Trying anyway.\");\r\n            }\r\n            isSkipPollConnection = true;\r\n        }\r\n        if (isSkipPollConnection) {\r\n            this.transports_ = [WebSocketConnection];\r\n        }\r\n        else {\r\n            var transports = (this.transports_ = []);\r\n            try {\r\n                for (var _b = __values(TransportManager.ALL_TRANSPORTS), _c = _b.next(); !_c.done; _c = _b.next()) {\r\n                    var transport = _c.value;\r\n                    if (transport && transport['isAvailable']()) {\r\n                        transports.push(transport);\r\n                    }\r\n                }\r\n            }\r\n            catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n            finally {\r\n                try {\r\n                    if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\r\n                }\r\n                finally { if (e_1) throw e_1.error; }\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @return {function(new:Transport, !string, !RepoInfo, string=, string=)} The constructor for the\r\n     * initial transport to use\r\n     */\r\n    TransportManager.prototype.initialTransport = function () {\r\n        if (this.transports_.length > 0) {\r\n            return this.transports_[0];\r\n        }\r\n        else {\r\n            throw new Error('No transports available');\r\n        }\r\n    };\r\n    /**\r\n     * @return {?function(new:Transport, function(),function(), string=)} The constructor for the next\r\n     * transport, or null\r\n     */\r\n    TransportManager.prototype.upgradeTransport = function () {\r\n        if (this.transports_.length > 1) {\r\n            return this.transports_[1];\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    return TransportManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Abort upgrade attempt if it takes longer than 60s.\r\nvar UPGRADE_TIMEOUT = 60000;\r\n// For some transports (WebSockets), we need to \"validate\" the transport by exchanging a few requests and responses.\r\n// If we haven't sent enough requests within 5s, we'll start sending noop ping requests.\r\nvar DELAY_BEFORE_SENDING_EXTRA_REQUESTS = 5000;\r\n// If the initial data sent triggers a lot of bandwidth (i.e. it's a large put or a listen for a large amount of data)\r\n// then we may not be able to exchange our ping/pong requests within the healthy timeout.  So if we reach the timeout\r\n// but we've sent/received enough bytes, we don't cancel the connection.\r\nvar BYTES_SENT_HEALTHY_OVERRIDE = 10 * 1024;\r\nvar BYTES_RECEIVED_HEALTHY_OVERRIDE = 100 * 1024;\r\nvar MESSAGE_TYPE = 't';\r\nvar MESSAGE_DATA = 'd';\r\nvar CONTROL_SHUTDOWN = 's';\r\nvar CONTROL_RESET = 'r';\r\nvar CONTROL_ERROR = 'e';\r\nvar CONTROL_PONG = 'o';\r\nvar SWITCH_ACK = 'a';\r\nvar END_TRANSMISSION = 'n';\r\nvar PING = 'p';\r\nvar SERVER_HELLO = 'h';\r\n/**\r\n * Creates a new real-time connection to the server using whichever method works\r\n * best in the current browser.\r\n *\r\n * @constructor\r\n */\r\nvar Connection = /** @class */ (function () {\r\n    /**\r\n     * @param id - an id for this connection\r\n     * @param repoInfo_ - the info for the endpoint to connect to\r\n     * @param applicationId_ - the Firebase App ID for this project\r\n     * @param onMessage_ - the callback to be triggered when a server-push message arrives\r\n     * @param onReady_ - the callback to be triggered when this connection is ready to send messages.\r\n     * @param onDisconnect_ - the callback to be triggered when a connection was lost\r\n     * @param onKill_ - the callback to be triggered when this connection has permanently shut down.\r\n     * @param lastSessionId - last session id in persistent connection. is used to clean up old session in real-time server\r\n     */\r\n    function Connection(id, repoInfo_, applicationId_, onMessage_, onReady_, onDisconnect_, onKill_, lastSessionId) {\r\n        this.id = id;\r\n        this.repoInfo_ = repoInfo_;\r\n        this.applicationId_ = applicationId_;\r\n        this.onMessage_ = onMessage_;\r\n        this.onReady_ = onReady_;\r\n        this.onDisconnect_ = onDisconnect_;\r\n        this.onKill_ = onKill_;\r\n        this.lastSessionId = lastSessionId;\r\n        this.connectionCount = 0;\r\n        this.pendingDataMessages = [];\r\n        this.state_ = 0 /* CONNECTING */;\r\n        this.log_ = logWrapper('c:' + this.id + ':');\r\n        this.transportManager_ = new TransportManager(repoInfo_);\r\n        this.log_('Connection created');\r\n        this.start_();\r\n    }\r\n    /**\r\n     * Starts a connection attempt\r\n     * @private\r\n     */\r\n    Connection.prototype.start_ = function () {\r\n        var _this = this;\r\n        var conn = this.transportManager_.initialTransport();\r\n        this.conn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, undefined, this.lastSessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.primaryResponsesRequired_ = conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessageReceived = this.connReceiver_(this.conn_);\r\n        var onConnectionLost = this.disconnReceiver_(this.conn_);\r\n        this.tx_ = this.conn_;\r\n        this.rx_ = this.conn_;\r\n        this.secondaryConn_ = null;\r\n        this.isHealthy_ = false;\r\n        /*\r\n         * Firefox doesn't like when code from one iframe tries to create another iframe by way of the parent frame.\r\n         * This can occur in the case of a redirect, i.e. we guessed wrong on what server to connect to and received a reset.\r\n         * Somehow, setTimeout seems to make this ok. That doesn't make sense from a security perspective, since you should\r\n         * still have the context of your originating frame.\r\n         */\r\n        setTimeout(function () {\r\n            // this.conn_ gets set to null in some of the tests. Check to make sure it still exists before using it\r\n            _this.conn_ && _this.conn_.open(onMessageReceived, onConnectionLost);\r\n        }, Math.floor(0));\r\n        var healthyTimeoutMS = conn['healthyTimeout'] || 0;\r\n        if (healthyTimeoutMS > 0) {\r\n            this.healthyTimeout_ = setTimeoutNonBlocking(function () {\r\n                _this.healthyTimeout_ = null;\r\n                if (!_this.isHealthy_) {\r\n                    if (_this.conn_ &&\r\n                        _this.conn_.bytesReceived > BYTES_RECEIVED_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has received ' +\r\n                            _this.conn_.bytesReceived +\r\n                            ' bytes.  Marking connection healthy.');\r\n                        _this.isHealthy_ = true;\r\n                        _this.conn_.markConnectionHealthy();\r\n                    }\r\n                    else if (_this.conn_ &&\r\n                        _this.conn_.bytesSent > BYTES_SENT_HEALTHY_OVERRIDE) {\r\n                        _this.log_('Connection exceeded healthy timeout but has sent ' +\r\n                            _this.conn_.bytesSent +\r\n                            ' bytes.  Leaving connection alive.');\r\n                        // NOTE: We don't want to mark it healthy, since we have no guarantee that the bytes have made it to\r\n                        // the server.\r\n                    }\r\n                    else {\r\n                        _this.log_('Closing unhealthy connection after timeout.');\r\n                        _this.close();\r\n                    }\r\n                }\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            }, Math.floor(healthyTimeoutMS));\r\n        }\r\n    };\r\n    /**\r\n     * @return {!string}\r\n     * @private\r\n     */\r\n    Connection.prototype.nextTransportId_ = function () {\r\n        return 'c:' + this.id + ':' + this.connectionCount++;\r\n    };\r\n    Connection.prototype.disconnReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (everConnected) {\r\n            if (conn === _this.conn_) {\r\n                _this.onConnectionLost_(everConnected);\r\n            }\r\n            else if (conn === _this.secondaryConn_) {\r\n                _this.log_('Secondary connection lost.');\r\n                _this.onSecondaryConnectionLost_();\r\n            }\r\n            else {\r\n                _this.log_('closing an old connection');\r\n            }\r\n        };\r\n    };\r\n    Connection.prototype.connReceiver_ = function (conn) {\r\n        var _this = this;\r\n        return function (message) {\r\n            if (_this.state_ !== 2 /* DISCONNECTED */) {\r\n                if (conn === _this.rx_) {\r\n                    _this.onPrimaryMessageReceived_(message);\r\n                }\r\n                else if (conn === _this.secondaryConn_) {\r\n                    _this.onSecondaryMessageReceived_(message);\r\n                }\r\n                else {\r\n                    _this.log_('message on old connection');\r\n                }\r\n            }\r\n        };\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} dataMsg An arbitrary data message to be sent to the server\r\n     */\r\n    Connection.prototype.sendRequest = function (dataMsg) {\r\n        // wrap in a data message envelope and send it on\r\n        var msg = { t: 'd', d: dataMsg };\r\n        this.sendData_(msg);\r\n    };\r\n    Connection.prototype.tryCleanupConnection = function () {\r\n        if (this.tx_ === this.secondaryConn_ && this.rx_ === this.secondaryConn_) {\r\n            this.log_('cleaning up and promoting a connection: ' + this.secondaryConn_.connId);\r\n            this.conn_ = this.secondaryConn_;\r\n            this.secondaryConn_ = null;\r\n            // the server will shutdown the old connection\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryControl_ = function (controlData) {\r\n        if (MESSAGE_TYPE in controlData) {\r\n            var cmd = controlData[MESSAGE_TYPE];\r\n            if (cmd === SWITCH_ACK) {\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // Most likely the session wasn't valid. Abandon the switch attempt\r\n                this.log_('Got a reset on secondary, closing it');\r\n                this.secondaryConn_.close();\r\n                // If we were already using this connection for something, than we need to fully close\r\n                if (this.tx_ === this.secondaryConn_ ||\r\n                    this.rx_ === this.secondaryConn_) {\r\n                    this.close();\r\n                }\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on secondary.');\r\n                this.secondaryResponsesRequired_--;\r\n                this.upgradeIfSecondaryHealthy_();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryMessageReceived_ = function (parsedData) {\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onSecondaryControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            // got a data message, but we're still second connection. Need to buffer it up\r\n            this.pendingDataMessages.push(data);\r\n        }\r\n        else {\r\n            throw new Error('Unknown protocol layer: ' + layer);\r\n        }\r\n    };\r\n    Connection.prototype.upgradeIfSecondaryHealthy_ = function () {\r\n        if (this.secondaryResponsesRequired_ <= 0) {\r\n            this.log_('Secondary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n            this.secondaryConn_.markConnectionHealthy();\r\n            this.proceedWithUpgrade_();\r\n        }\r\n        else {\r\n            // Send a ping to make sure the connection is healthy.\r\n            this.log_('sending ping on secondary.');\r\n            this.secondaryConn_.send({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.proceedWithUpgrade_ = function () {\r\n        // tell this connection to consider itself open\r\n        this.secondaryConn_.start();\r\n        // send ack\r\n        this.log_('sending client ack on secondary');\r\n        this.secondaryConn_.send({ t: 'c', d: { t: SWITCH_ACK, d: {} } });\r\n        // send end packet on primary transport, switch to sending on this one\r\n        // can receive on this one, buffer responses until end received on primary transport\r\n        this.log_('Ending transmission on primary');\r\n        this.conn_.send({ t: 'c', d: { t: END_TRANSMISSION, d: {} } });\r\n        this.tx_ = this.secondaryConn_;\r\n        this.tryCleanupConnection();\r\n    };\r\n    Connection.prototype.onPrimaryMessageReceived_ = function (parsedData) {\r\n        // Must refer to parsedData properties in quotes, so closure doesn't touch them.\r\n        var layer = requireKey('t', parsedData);\r\n        var data = requireKey('d', parsedData);\r\n        if (layer === 'c') {\r\n            this.onControl_(data);\r\n        }\r\n        else if (layer === 'd') {\r\n            this.onDataMessage_(data);\r\n        }\r\n    };\r\n    Connection.prototype.onDataMessage_ = function (message) {\r\n        this.onPrimaryResponse_();\r\n        // We don't do anything with data messages, just kick them up a level\r\n        this.onMessage_(message);\r\n    };\r\n    Connection.prototype.onPrimaryResponse_ = function () {\r\n        if (!this.isHealthy_) {\r\n            this.primaryResponsesRequired_--;\r\n            if (this.primaryResponsesRequired_ <= 0) {\r\n                this.log_('Primary connection is healthy.');\r\n                this.isHealthy_ = true;\r\n                this.conn_.markConnectionHealthy();\r\n            }\r\n        }\r\n    };\r\n    Connection.prototype.onControl_ = function (controlData) {\r\n        var cmd = requireKey(MESSAGE_TYPE, controlData);\r\n        if (MESSAGE_DATA in controlData) {\r\n            var payload = controlData[MESSAGE_DATA];\r\n            if (cmd === SERVER_HELLO) {\r\n                this.onHandshake_(payload);\r\n            }\r\n            else if (cmd === END_TRANSMISSION) {\r\n                this.log_('recvd end transmission on primary');\r\n                this.rx_ = this.secondaryConn_;\r\n                for (var i = 0; i < this.pendingDataMessages.length; ++i) {\r\n                    this.onDataMessage_(this.pendingDataMessages[i]);\r\n                }\r\n                this.pendingDataMessages = [];\r\n                this.tryCleanupConnection();\r\n            }\r\n            else if (cmd === CONTROL_SHUTDOWN) {\r\n                // This was previously the 'onKill' callback passed to the lower-level connection\r\n                // payload in this case is the reason for the shutdown. Generally a human-readable error\r\n                this.onConnectionShutdown_(payload);\r\n            }\r\n            else if (cmd === CONTROL_RESET) {\r\n                // payload in this case is the host we should contact\r\n                this.onReset_(payload);\r\n            }\r\n            else if (cmd === CONTROL_ERROR) {\r\n                error('Server Error: ' + payload);\r\n            }\r\n            else if (cmd === CONTROL_PONG) {\r\n                this.log_('got pong on primary.');\r\n                this.onPrimaryResponse_();\r\n                this.sendPingOnPrimaryIfNecessary_();\r\n            }\r\n            else {\r\n                error('Unknown control packet command: ' + cmd);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {Object} handshake The handshake data returned from the server\r\n     * @private\r\n     */\r\n    Connection.prototype.onHandshake_ = function (handshake) {\r\n        var timestamp = handshake.ts;\r\n        var version = handshake.v;\r\n        var host = handshake.h;\r\n        this.sessionId = handshake.s;\r\n        this.repoInfo_.updateHost(host);\r\n        // if we've already closed the connection, then don't bother trying to progress further\r\n        if (this.state_ === 0 /* CONNECTING */) {\r\n            this.conn_.start();\r\n            this.onConnectionEstablished_(this.conn_, timestamp);\r\n            if (PROTOCOL_VERSION !== version) {\r\n                warn('Protocol version mismatch detected');\r\n            }\r\n            // TODO: do we want to upgrade? when? maybe a delay?\r\n            this.tryStartUpgrade_();\r\n        }\r\n    };\r\n    Connection.prototype.tryStartUpgrade_ = function () {\r\n        var conn = this.transportManager_.upgradeTransport();\r\n        if (conn) {\r\n            this.startUpgrade_(conn);\r\n        }\r\n    };\r\n    Connection.prototype.startUpgrade_ = function (conn) {\r\n        var _this = this;\r\n        this.secondaryConn_ = new conn(this.nextTransportId_(), this.repoInfo_, this.applicationId_, this.sessionId);\r\n        // For certain transports (WebSockets), we need to send and receive several messages back and forth before we\r\n        // can consider the transport healthy.\r\n        this.secondaryResponsesRequired_ =\r\n            conn['responsesRequiredToBeHealthy'] || 0;\r\n        var onMessage = this.connReceiver_(this.secondaryConn_);\r\n        var onDisconnect = this.disconnReceiver_(this.secondaryConn_);\r\n        this.secondaryConn_.open(onMessage, onDisconnect);\r\n        // If we haven't successfully upgraded after UPGRADE_TIMEOUT, give up and kill the secondary.\r\n        setTimeoutNonBlocking(function () {\r\n            if (_this.secondaryConn_) {\r\n                _this.log_('Timed out trying to upgrade.');\r\n                _this.secondaryConn_.close();\r\n            }\r\n        }, Math.floor(UPGRADE_TIMEOUT));\r\n    };\r\n    Connection.prototype.onReset_ = function (host) {\r\n        this.log_('Reset packet received.  New host: ' + host);\r\n        this.repoInfo_.updateHost(host);\r\n        // TODO: if we're already \"connected\", we need to trigger a disconnect at the next layer up.\r\n        // We don't currently support resets after the connection has already been established\r\n        if (this.state_ === 1 /* CONNECTED */) {\r\n            this.close();\r\n        }\r\n        else {\r\n            // Close whatever connections we have open and start again.\r\n            this.closeConnections_();\r\n            this.start_();\r\n        }\r\n    };\r\n    Connection.prototype.onConnectionEstablished_ = function (conn, timestamp) {\r\n        var _this = this;\r\n        this.log_('Realtime connection established.');\r\n        this.conn_ = conn;\r\n        this.state_ = 1 /* CONNECTED */;\r\n        if (this.onReady_) {\r\n            this.onReady_(timestamp, this.sessionId);\r\n            this.onReady_ = null;\r\n        }\r\n        // If after 5 seconds we haven't sent enough requests to the server to get the connection healthy,\r\n        // send some pings.\r\n        if (this.primaryResponsesRequired_ === 0) {\r\n            this.log_('Primary connection is healthy.');\r\n            this.isHealthy_ = true;\r\n        }\r\n        else {\r\n            setTimeoutNonBlocking(function () {\r\n                _this.sendPingOnPrimaryIfNecessary_();\r\n            }, Math.floor(DELAY_BEFORE_SENDING_EXTRA_REQUESTS));\r\n        }\r\n    };\r\n    Connection.prototype.sendPingOnPrimaryIfNecessary_ = function () {\r\n        // If the connection isn't considered healthy yet, we'll send a noop ping packet request.\r\n        if (!this.isHealthy_ && this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('sending ping on primary.');\r\n            this.sendData_({ t: 'c', d: { t: PING, d: {} } });\r\n        }\r\n    };\r\n    Connection.prototype.onSecondaryConnectionLost_ = function () {\r\n        var conn = this.secondaryConn_;\r\n        this.secondaryConn_ = null;\r\n        if (this.tx_ === conn || this.rx_ === conn) {\r\n            // we are relying on this connection already in some capacity. Therefore, a failure is real\r\n            this.close();\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @param {boolean} everConnected Whether or not the connection ever reached a server. Used to determine if\r\n     * we should flush the host cache\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionLost_ = function (everConnected) {\r\n        this.conn_ = null;\r\n        // NOTE: IF you're seeing a Firefox error for this line, I think it might be because it's getting\r\n        // called on window close and RealtimeState.CONNECTING is no longer defined.  Just a guess.\r\n        if (!everConnected && this.state_ === 0 /* CONNECTING */) {\r\n            this.log_('Realtime connection failed.');\r\n            // Since we failed to connect at all, clear any cached entry for this namespace in case the machine went away\r\n            if (this.repoInfo_.isCacheableHost()) {\r\n                PersistentStorage.remove('host:' + this.repoInfo_.host);\r\n                // reset the internal host to what we would show the user, i.e. <ns>.firebaseio.com\r\n                this.repoInfo_.internalHost = this.repoInfo_.host;\r\n            }\r\n        }\r\n        else if (this.state_ === 1 /* CONNECTED */) {\r\n            this.log_('Realtime connection lost.');\r\n        }\r\n        this.close();\r\n    };\r\n    /**\r\n     *\r\n     * @param {string} reason\r\n     * @private\r\n     */\r\n    Connection.prototype.onConnectionShutdown_ = function (reason) {\r\n        this.log_('Connection shutdown command received. Shutting down...');\r\n        if (this.onKill_) {\r\n            this.onKill_(reason);\r\n            this.onKill_ = null;\r\n        }\r\n        // We intentionally don't want to fire onDisconnect (kill is a different case),\r\n        // so clear the callback.\r\n        this.onDisconnect_ = null;\r\n        this.close();\r\n    };\r\n    Connection.prototype.sendData_ = function (data) {\r\n        if (this.state_ !== 1 /* CONNECTED */) {\r\n            throw 'Connection is not connected';\r\n        }\r\n        else {\r\n            this.tx_.send(data);\r\n        }\r\n    };\r\n    /**\r\n     * Cleans up this connection, calling the appropriate callbacks\r\n     */\r\n    Connection.prototype.close = function () {\r\n        if (this.state_ !== 2 /* DISCONNECTED */) {\r\n            this.log_('Closing realtime connection.');\r\n            this.state_ = 2 /* DISCONNECTED */;\r\n            this.closeConnections_();\r\n            if (this.onDisconnect_) {\r\n                this.onDisconnect_();\r\n                this.onDisconnect_ = null;\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     *\r\n     * @private\r\n     */\r\n    Connection.prototype.closeConnections_ = function () {\r\n        this.log_('Shutting down all connections');\r\n        if (this.conn_) {\r\n            this.conn_.close();\r\n            this.conn_ = null;\r\n        }\r\n        if (this.secondaryConn_) {\r\n            this.secondaryConn_.close();\r\n            this.secondaryConn_ = null;\r\n        }\r\n        if (this.healthyTimeout_) {\r\n            clearTimeout(this.healthyTimeout_);\r\n            this.healthyTimeout_ = null;\r\n        }\r\n    };\r\n    return Connection;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Interface defining the set of actions that can be performed against the Firebase server\r\n * (basically corresponds to our wire protocol).\r\n *\r\n * @interface\r\n */\r\nvar ServerActions = /** @class */ (function () {\r\n    function ServerActions() {\r\n    }\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.put = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, ?string)} onComplete\r\n     * @param {string=} hash\r\n     */\r\n    ServerActions.prototype.merge = function (pathString, data, onComplete, hash) { };\r\n    /**\r\n     * Refreshes the auth token for the current connection.\r\n     * @param {string} token The authentication token\r\n     */\r\n    ServerActions.prototype.refreshAuthToken = function (token) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectPut = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {*} data\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectMerge = function (pathString, data, onComplete) { };\r\n    /**\r\n     * @param {string} pathString\r\n     * @param {function(string, string)=} onComplete\r\n     */\r\n    ServerActions.prototype.onDisconnectCancel = function (pathString, onComplete) { };\r\n    /**\r\n     * @param {Object.<string, *>} stats\r\n     */\r\n    ServerActions.prototype.reportStats = function (stats) { };\r\n    return ServerActions;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar RECONNECT_MIN_DELAY = 1000;\r\nvar RECONNECT_MAX_DELAY_DEFAULT = 60 * 5 * 1000; // 5 minutes in milliseconds (Case: 1858)\r\nvar GET_CONNECT_TIMEOUT = 3 * 1000;\r\nvar RECONNECT_MAX_DELAY_FOR_ADMINS = 30 * 1000; // 30 seconds for admin clients (likely to be a backend server)\r\nvar RECONNECT_DELAY_MULTIPLIER = 1.3;\r\nvar RECONNECT_DELAY_RESET_TIMEOUT = 30000; // Reset delay back to MIN_DELAY after being connected for 30sec.\r\nvar SERVER_KILL_INTERRUPT_REASON = 'server_kill';\r\n// If auth fails repeatedly, we'll assume something is wrong and log a warning / back off.\r\nvar INVALID_AUTH_TOKEN_THRESHOLD = 3;\r\n/**\r\n * Firebase connection.  Abstracts wire protocol and handles reconnecting.\r\n *\r\n * NOTE: All JSON objects sent to the realtime connection must have property names enclosed\r\n * in quotes to make sure the closure compiler does not minify them.\r\n */\r\nvar PersistentConnection = /** @class */ (function (_super) {\r\n    __extends(PersistentConnection, _super);\r\n    /**\r\n     * @implements {ServerActions}\r\n     * @param repoInfo_ Data about the namespace we are connecting to\r\n     * @param applicationId_ The Firebase App ID for this project\r\n     * @param onDataUpdate_ A callback for new data from the server\r\n     */\r\n    function PersistentConnection(repoInfo_, applicationId_, onDataUpdate_, onConnectStatus_, onServerInfoUpdate_, authTokenProvider_, authOverride_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.applicationId_ = applicationId_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.onConnectStatus_ = onConnectStatus_;\r\n        _this.onServerInfoUpdate_ = onServerInfoUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        _this.authOverride_ = authOverride_;\r\n        // Used for diagnostic logging.\r\n        _this.id = PersistentConnection.nextPersistentConnectionId_++;\r\n        _this.log_ = logWrapper('p:' + _this.id + ':');\r\n        _this.interruptReasons_ = {};\r\n        /** Map<path, Map<queryId, ListenSpec>> */\r\n        _this.listens = new Map();\r\n        _this.outstandingPuts_ = [];\r\n        _this.outstandingGets_ = [];\r\n        _this.outstandingPutCount_ = 0;\r\n        _this.outstandingGetCount_ = 0;\r\n        _this.onDisconnectRequestQueue_ = [];\r\n        _this.connected_ = false;\r\n        _this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n        _this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_DEFAULT;\r\n        _this.securityDebugCallback_ = null;\r\n        _this.lastSessionId = null;\r\n        _this.establishConnectionTimer_ = null;\r\n        _this.visible_ = false;\r\n        // Before we get connected, we keep a queue of pending messages to send.\r\n        _this.requestCBHash_ = {};\r\n        _this.requestNumber_ = 0;\r\n        _this.realtime_ = null;\r\n        _this.authToken_ = null;\r\n        _this.forceTokenRefresh_ = false;\r\n        _this.invalidAuthTokenCount_ = 0;\r\n        _this.firstConnection_ = true;\r\n        _this.lastConnectionAttemptTime_ = null;\r\n        _this.lastConnectionEstablishedTime_ = null;\r\n        if (authOverride_ && !isNodeSdk()) {\r\n            throw new Error('Auth override specified in options, but not supported on non Node.js platforms');\r\n        }\r\n        _this.scheduleConnect_(0);\r\n        VisibilityMonitor.getInstance().on('visible', _this.onVisible_, _this);\r\n        if (repoInfo_.host.indexOf('fblocal') === -1) {\r\n            OnlineMonitor.getInstance().on('online', _this.onOnline_, _this);\r\n        }\r\n        return _this;\r\n    }\r\n    PersistentConnection.prototype.sendRequest = function (action, body, onResponse) {\r\n        var curReqNum = ++this.requestNumber_;\r\n        var msg = { r: curReqNum, a: action, b: body };\r\n        this.log_(stringify(msg));\r\n        assert(this.connected_, \"sendRequest call when we're not connected not allowed.\");\r\n        this.realtime_.sendRequest(msg);\r\n        if (onResponse) {\r\n            this.requestCBHash_[curReqNum] = onResponse;\r\n        }\r\n    };\r\n    PersistentConnection.prototype.get = function (query) {\r\n        var _this = this;\r\n        var deferred = new Deferred();\r\n        var request = {\r\n            p: query.path.toString(),\r\n            q: query.queryObject()\r\n        };\r\n        var outstandingGet = {\r\n            action: 'g',\r\n            request: request,\r\n            onComplete: function (message) {\r\n                var payload = message['d'];\r\n                if (message['s'] === 'ok') {\r\n                    _this.onDataUpdate_(request['p'], payload, \r\n                    /*isMerge*/ false, \r\n                    /*tag*/ null);\r\n                    deferred.resolve(payload);\r\n                }\r\n                else {\r\n                    deferred.reject(payload);\r\n                }\r\n            }\r\n        };\r\n        this.outstandingGets_.push(outstandingGet);\r\n        this.outstandingGetCount_++;\r\n        var index = this.outstandingGets_.length - 1;\r\n        if (!this.connected_) {\r\n            setTimeout(function () {\r\n                var get = _this.outstandingGets_[index];\r\n                if (get === undefined || outstandingGet !== get) {\r\n                    return;\r\n                }\r\n                delete _this.outstandingGets_[index];\r\n                _this.outstandingGetCount_--;\r\n                if (_this.outstandingGetCount_ === 0) {\r\n                    _this.outstandingGets_ = [];\r\n                }\r\n                _this.log_('get ' + index + ' timed out on connection');\r\n                deferred.reject(new Error('Client is offline.'));\r\n            }, GET_CONNECT_TIMEOUT);\r\n        }\r\n        if (this.connected_) {\r\n            this.sendGet_(index);\r\n        }\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var queryId = query.queryIdentifier();\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + queryId);\r\n        if (!this.listens.has(pathString)) {\r\n            this.listens.set(pathString, new Map());\r\n        }\r\n        assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'listen() called for non-default but complete query');\r\n        assert(!this.listens.get(pathString).has(queryId), 'listen() called twice for same path/queryId.');\r\n        var listenSpec = {\r\n            onComplete: onComplete,\r\n            hashFn: currentHashFn,\r\n            query: query,\r\n            tag: tag\r\n        };\r\n        this.listens.get(pathString).set(queryId, listenSpec);\r\n        if (this.connected_) {\r\n            this.sendListen_(listenSpec);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendGet_ = function (index) {\r\n        var _this = this;\r\n        var get = this.outstandingGets_[index];\r\n        this.sendRequest('g', get.request, function (message) {\r\n            delete _this.outstandingGets_[index];\r\n            _this.outstandingGetCount_--;\r\n            if (_this.outstandingGetCount_ === 0) {\r\n                _this.outstandingGets_ = [];\r\n            }\r\n            if (get.onComplete) {\r\n                get.onComplete(message);\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.prototype.sendListen_ = function (listenSpec) {\r\n        var _this = this;\r\n        var query = listenSpec.query;\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Listen on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'q';\r\n        // Only bother to send query if it's non-default.\r\n        if (listenSpec.tag) {\r\n            req['q'] = query.queryObject();\r\n            req['t'] = listenSpec.tag;\r\n        }\r\n        req[ /*hash*/'h'] = listenSpec.hashFn();\r\n        this.sendRequest(action, req, function (message) {\r\n            var payload = message[ /*data*/'d'];\r\n            var status = message[ /*status*/'s'];\r\n            // print warnings in any case...\r\n            PersistentConnection.warnOnListenWarnings_(payload, query);\r\n            var currentListenSpec = _this.listens.get(pathString) &&\r\n                _this.listens.get(pathString).get(queryId);\r\n            // only trigger actions if the listen hasn't been removed and readded\r\n            if (currentListenSpec === listenSpec) {\r\n                _this.log_('listen response', message);\r\n                if (status !== 'ok') {\r\n                    _this.removeListen_(pathString, queryId);\r\n                }\r\n                if (listenSpec.onComplete) {\r\n                    listenSpec.onComplete(status, payload);\r\n                }\r\n            }\r\n        });\r\n    };\r\n    PersistentConnection.warnOnListenWarnings_ = function (payload, query) {\r\n        if (payload && typeof payload === 'object' && contains(payload, 'w')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            var warnings = safeGet(payload, 'w');\r\n            if (Array.isArray(warnings) && ~warnings.indexOf('no_index')) {\r\n                var indexSpec = '\".indexOn\": \"' + query.getQueryParams().getIndex().toString() + '\"';\r\n                var indexPath = query.path.toString();\r\n                warn(\"Using an unspecified index. Your data will be downloaded and \" +\r\n                    (\"filtered on the client. Consider adding \" + indexSpec + \" at \") +\r\n                    (indexPath + \" to your security rules for better performance.\"));\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.refreshAuthToken = function (token) {\r\n        this.authToken_ = token;\r\n        this.log_('Auth token refreshed');\r\n        if (this.authToken_) {\r\n            this.tryAuth();\r\n        }\r\n        else {\r\n            //If we're connected we want to let the server know to unauthenticate us. If we're not connected, simply delete\r\n            //the credential so we dont become authenticated next time we connect.\r\n            if (this.connected_) {\r\n                this.sendRequest('unauth', {}, function () { });\r\n            }\r\n        }\r\n        this.reduceReconnectDelayIfAdminCredential_(token);\r\n    };\r\n    PersistentConnection.prototype.reduceReconnectDelayIfAdminCredential_ = function (credential) {\r\n        // NOTE: This isn't intended to be bulletproof (a malicious developer can always just modify the client).\r\n        // Additionally, we don't bother resetting the max delay back to the default if auth fails / expires.\r\n        var isFirebaseSecret = credential && credential.length === 40;\r\n        if (isFirebaseSecret || isAdmin(credential)) {\r\n            this.log_('Admin auth credential detected.  Reducing max reconnect time.');\r\n            this.maxReconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n        }\r\n    };\r\n    /**\r\n     * Attempts to authenticate with the given credentials. If the authentication attempt fails, it's triggered like\r\n     * a auth revoked (the connection is closed).\r\n     */\r\n    PersistentConnection.prototype.tryAuth = function () {\r\n        var _this = this;\r\n        if (this.connected_ && this.authToken_) {\r\n            var token_1 = this.authToken_;\r\n            var authMethod = isValidFormat(token_1) ? 'auth' : 'gauth';\r\n            var requestData = { cred: token_1 };\r\n            if (this.authOverride_ === null) {\r\n                requestData['noauth'] = true;\r\n            }\r\n            else if (typeof this.authOverride_ === 'object') {\r\n                requestData['authvar'] = this.authOverride_;\r\n            }\r\n            this.sendRequest(authMethod, requestData, function (res) {\r\n                var status = res[ /*status*/'s'];\r\n                var data = res[ /*data*/'d'] || 'error';\r\n                if (_this.authToken_ === token_1) {\r\n                    if (status === 'ok') {\r\n                        _this.invalidAuthTokenCount_ = 0;\r\n                    }\r\n                    else {\r\n                        // Triggers reconnect and force refresh for auth token\r\n                        _this.onAuthRevoked_(status, data);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.unlisten = function (query, tag) {\r\n        var pathString = query.path.toString();\r\n        var queryId = query.queryIdentifier();\r\n        this.log_('Unlisten called for ' + pathString + ' ' + queryId);\r\n        assert(query.getQueryParams().isDefault() ||\r\n            !query.getQueryParams().loadsAllData(), 'unlisten() called for non-default but complete query');\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && this.connected_) {\r\n            this.sendUnlisten_(pathString, queryId, query.queryObject(), tag);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendUnlisten_ = function (pathString, queryId, queryObj, tag) {\r\n        this.log_('Unlisten on ' + pathString + ' for ' + queryId);\r\n        var req = { /*path*/ p: pathString };\r\n        var action = 'n';\r\n        // Only bother sending queryId if it's non-default.\r\n        if (tag) {\r\n            req['q'] = queryObj;\r\n            req['t'] = tag;\r\n        }\r\n        this.sendRequest(action, req);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectPut = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('o', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'o',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectMerge = function (pathString, data, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('om', pathString, data, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'om',\r\n                data: data,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.onDisconnectCancel = function (pathString, onComplete) {\r\n        if (this.connected_) {\r\n            this.sendOnDisconnect_('oc', pathString, null, onComplete);\r\n        }\r\n        else {\r\n            this.onDisconnectRequestQueue_.push({\r\n                pathString: pathString,\r\n                action: 'oc',\r\n                data: null,\r\n                onComplete: onComplete\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendOnDisconnect_ = function (action, pathString, data, onComplete) {\r\n        var request = { /*path*/ p: pathString, /*data*/ d: data };\r\n        this.log_('onDisconnect ' + action, request);\r\n        this.sendRequest(action, request, function (response) {\r\n            if (onComplete) {\r\n                setTimeout(function () {\r\n                    onComplete(response[ /*status*/'s'], response[ /* data */'d']);\r\n                }, Math.floor(0));\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('p', pathString, data, onComplete, hash);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.merge = function (pathString, data, onComplete, hash) {\r\n        this.putInternal('m', pathString, data, onComplete, hash);\r\n    };\r\n    PersistentConnection.prototype.putInternal = function (action, pathString, data, onComplete, hash) {\r\n        var request = {\r\n            /*path*/ p: pathString,\r\n            /*data*/ d: data\r\n        };\r\n        if (hash !== undefined) {\r\n            request[ /*hash*/'h'] = hash;\r\n        }\r\n        // TODO: Only keep track of the most recent put for a given path?\r\n        this.outstandingPuts_.push({\r\n            action: action,\r\n            request: request,\r\n            onComplete: onComplete\r\n        });\r\n        this.outstandingPutCount_++;\r\n        var index = this.outstandingPuts_.length - 1;\r\n        if (this.connected_) {\r\n            this.sendPut_(index);\r\n        }\r\n        else {\r\n            this.log_('Buffering put: ' + pathString);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.sendPut_ = function (index) {\r\n        var _this = this;\r\n        var action = this.outstandingPuts_[index].action;\r\n        var request = this.outstandingPuts_[index].request;\r\n        var onComplete = this.outstandingPuts_[index].onComplete;\r\n        this.outstandingPuts_[index].queued = this.connected_;\r\n        this.sendRequest(action, request, function (message) {\r\n            _this.log_(action + ' response', message);\r\n            delete _this.outstandingPuts_[index];\r\n            _this.outstandingPutCount_--;\r\n            // Clean up array occasionally.\r\n            if (_this.outstandingPutCount_ === 0) {\r\n                _this.outstandingPuts_ = [];\r\n            }\r\n            if (onComplete) {\r\n                onComplete(message[ /*status*/'s'], message[ /* data */'d']);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    PersistentConnection.prototype.reportStats = function (stats) {\r\n        var _this = this;\r\n        // If we're not connected, we just drop the stats.\r\n        if (this.connected_) {\r\n            var request = { /*counters*/ c: stats };\r\n            this.log_('reportStats', request);\r\n            this.sendRequest(/*stats*/ 's', request, function (result) {\r\n                var status = result[ /*status*/'s'];\r\n                if (status !== 'ok') {\r\n                    var errorReason = result[ /* data */'d'];\r\n                    _this.log_('reportStats', 'Error sending stats: ' + errorReason);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataMessage_ = function (message) {\r\n        if ('r' in message) {\r\n            // this is a response\r\n            this.log_('from server: ' + stringify(message));\r\n            var reqNum = message['r'];\r\n            var onResponse = this.requestCBHash_[reqNum];\r\n            if (onResponse) {\r\n                delete this.requestCBHash_[reqNum];\r\n                onResponse(message[ /*body*/'b']);\r\n            }\r\n        }\r\n        else if ('error' in message) {\r\n            throw 'A server-side error has occurred: ' + message['error'];\r\n        }\r\n        else if ('a' in message) {\r\n            // a and b are action and body, respectively\r\n            this.onDataPush_(message['a'], message['b']);\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onDataPush_ = function (action, body) {\r\n        this.log_('handleServerMessage', action, body);\r\n        if (action === 'd') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge*/ false, body['t']);\r\n        }\r\n        else if (action === 'm') {\r\n            this.onDataUpdate_(body[ /*path*/'p'], body[ /*data*/'d'], \r\n            /*isMerge=*/ true, body['t']);\r\n        }\r\n        else if (action === 'c') {\r\n            this.onListenRevoked_(body[ /*path*/'p'], body[ /*query*/'q']);\r\n        }\r\n        else if (action === 'ac') {\r\n            this.onAuthRevoked_(body[ /*status code*/'s'], body[ /* explanation */'d']);\r\n        }\r\n        else if (action === 'sd') {\r\n            this.onSecurityDebugPacket_(body);\r\n        }\r\n        else {\r\n            error('Unrecognized action received from server: ' +\r\n                stringify(action) +\r\n                '\\nAre you using the latest client?');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onReady_ = function (timestamp, sessionId) {\r\n        this.log_('connection ready');\r\n        this.connected_ = true;\r\n        this.lastConnectionEstablishedTime_ = new Date().getTime();\r\n        this.handleTimestamp_(timestamp);\r\n        this.lastSessionId = sessionId;\r\n        if (this.firstConnection_) {\r\n            this.sendConnectStats_();\r\n        }\r\n        this.restoreState_();\r\n        this.firstConnection_ = false;\r\n        this.onConnectStatus_(true);\r\n    };\r\n    PersistentConnection.prototype.scheduleConnect_ = function (timeout) {\r\n        var _this = this;\r\n        assert(!this.realtime_, \"Scheduling a connect when we're already connected/ing?\");\r\n        if (this.establishConnectionTimer_) {\r\n            clearTimeout(this.establishConnectionTimer_);\r\n        }\r\n        // NOTE: Even when timeout is 0, it's important to do a setTimeout to work around an infuriating \"Security Error\" in\r\n        // Firefox when trying to write to our long-polling iframe in some scenarios (e.g. Forge or our unit tests).\r\n        this.establishConnectionTimer_ = setTimeout(function () {\r\n            _this.establishConnectionTimer_ = null;\r\n            _this.establishConnection_();\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        }, Math.floor(timeout));\r\n    };\r\n    PersistentConnection.prototype.onVisible_ = function (visible) {\r\n        // NOTE: Tabbing away and back to a window will defeat our reconnect backoff, but I think that's fine.\r\n        if (visible &&\r\n            !this.visible_ &&\r\n            this.reconnectDelay_ === this.maxReconnectDelay_) {\r\n            this.log_('Window became visible.  Reducing delay.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        this.visible_ = visible;\r\n    };\r\n    PersistentConnection.prototype.onOnline_ = function (online) {\r\n        if (online) {\r\n            this.log_('Browser went online.');\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n        else {\r\n            this.log_('Browser went offline.  Killing connection.');\r\n            if (this.realtime_) {\r\n                this.realtime_.close();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onRealtimeDisconnect_ = function () {\r\n        this.log_('data client disconnected');\r\n        this.connected_ = false;\r\n        this.realtime_ = null;\r\n        // Since we don't know if our sent transactions succeeded or not, we need to cancel them.\r\n        this.cancelSentTransactions_();\r\n        // Clear out the pending requests.\r\n        this.requestCBHash_ = {};\r\n        if (this.shouldReconnect_()) {\r\n            if (!this.visible_) {\r\n                this.log_(\"Window isn't visible.  Delaying reconnect.\");\r\n                this.reconnectDelay_ = this.maxReconnectDelay_;\r\n                this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            }\r\n            else if (this.lastConnectionEstablishedTime_) {\r\n                // If we've been connected long enough, reset reconnect delay to minimum.\r\n                var timeSinceLastConnectSucceeded = new Date().getTime() - this.lastConnectionEstablishedTime_;\r\n                if (timeSinceLastConnectSucceeded > RECONNECT_DELAY_RESET_TIMEOUT) {\r\n                    this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n                }\r\n                this.lastConnectionEstablishedTime_ = null;\r\n            }\r\n            var timeSinceLastConnectAttempt = new Date().getTime() - this.lastConnectionAttemptTime_;\r\n            var reconnectDelay = Math.max(0, this.reconnectDelay_ - timeSinceLastConnectAttempt);\r\n            reconnectDelay = Math.random() * reconnectDelay;\r\n            this.log_('Trying to reconnect in ' + reconnectDelay + 'ms');\r\n            this.scheduleConnect_(reconnectDelay);\r\n            // Adjust reconnect delay for next time.\r\n            this.reconnectDelay_ = Math.min(this.maxReconnectDelay_, this.reconnectDelay_ * RECONNECT_DELAY_MULTIPLIER);\r\n        }\r\n        this.onConnectStatus_(false);\r\n    };\r\n    PersistentConnection.prototype.establishConnection_ = function () {\r\n        var _this = this;\r\n        if (this.shouldReconnect_()) {\r\n            this.log_('Making a connection attempt');\r\n            this.lastConnectionAttemptTime_ = new Date().getTime();\r\n            this.lastConnectionEstablishedTime_ = null;\r\n            var onDataMessage_1 = this.onDataMessage_.bind(this);\r\n            var onReady_1 = this.onReady_.bind(this);\r\n            var onDisconnect_1 = this.onRealtimeDisconnect_.bind(this);\r\n            var connId_1 = this.id + ':' + PersistentConnection.nextConnectionId_++;\r\n            var self_1 = this;\r\n            var lastSessionId_1 = this.lastSessionId;\r\n            var canceled_1 = false;\r\n            var connection_1 = null;\r\n            var closeFn_1 = function () {\r\n                if (connection_1) {\r\n                    connection_1.close();\r\n                }\r\n                else {\r\n                    canceled_1 = true;\r\n                    onDisconnect_1();\r\n                }\r\n            };\r\n            var sendRequestFn = function (msg) {\r\n                assert(connection_1, \"sendRequest call when we're not connected not allowed.\");\r\n                connection_1.sendRequest(msg);\r\n            };\r\n            this.realtime_ = {\r\n                close: closeFn_1,\r\n                sendRequest: sendRequestFn\r\n            };\r\n            var forceRefresh = this.forceTokenRefresh_;\r\n            this.forceTokenRefresh_ = false;\r\n            // First fetch auth token, and establish connection after fetching the token was successful\r\n            this.authTokenProvider_\r\n                .getToken(forceRefresh)\r\n                .then(function (result) {\r\n                if (!canceled_1) {\r\n                    log('getToken() completed. Creating connection.');\r\n                    self_1.authToken_ = result && result.accessToken;\r\n                    connection_1 = new Connection(connId_1, self_1.repoInfo_, self_1.applicationId_, onDataMessage_1, onReady_1, onDisconnect_1, \r\n                    /* onKill= */ function (reason) {\r\n                        warn(reason + ' (' + self_1.repoInfo_.toString() + ')');\r\n                        self_1.interrupt(SERVER_KILL_INTERRUPT_REASON);\r\n                    }, lastSessionId_1);\r\n                }\r\n                else {\r\n                    log('getToken() completed but was canceled');\r\n                }\r\n            })\r\n                .then(null, function (error) {\r\n                self_1.log_('Failed to get token: ' + error);\r\n                if (!canceled_1) {\r\n                    if (_this.repoInfo_.nodeAdmin) {\r\n                        // This may be a critical error for the Admin Node.js SDK, so log a warning.\r\n                        // But getToken() may also just have temporarily failed, so we still want to\r\n                        // continue retrying.\r\n                        warn(error);\r\n                    }\r\n                    closeFn_1();\r\n                }\r\n            });\r\n        }\r\n    };\r\n    PersistentConnection.prototype.interrupt = function (reason) {\r\n        log('Interrupting connection for reason: ' + reason);\r\n        this.interruptReasons_[reason] = true;\r\n        if (this.realtime_) {\r\n            this.realtime_.close();\r\n        }\r\n        else {\r\n            if (this.establishConnectionTimer_) {\r\n                clearTimeout(this.establishConnectionTimer_);\r\n                this.establishConnectionTimer_ = null;\r\n            }\r\n            if (this.connected_) {\r\n                this.onRealtimeDisconnect_();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.resume = function (reason) {\r\n        log('Resuming connection for reason: ' + reason);\r\n        delete this.interruptReasons_[reason];\r\n        if (isEmpty(this.interruptReasons_)) {\r\n            this.reconnectDelay_ = RECONNECT_MIN_DELAY;\r\n            if (!this.realtime_) {\r\n                this.scheduleConnect_(0);\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.handleTimestamp_ = function (timestamp) {\r\n        var delta = timestamp - new Date().getTime();\r\n        this.onServerInfoUpdate_({ serverTimeOffset: delta });\r\n    };\r\n    PersistentConnection.prototype.cancelSentTransactions_ = function () {\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            var put = this.outstandingPuts_[i];\r\n            if (put && /*hash*/ 'h' in put.request && put.queued) {\r\n                if (put.onComplete) {\r\n                    put.onComplete('disconnect');\r\n                }\r\n                delete this.outstandingPuts_[i];\r\n                this.outstandingPutCount_--;\r\n            }\r\n        }\r\n        // Clean up array occasionally.\r\n        if (this.outstandingPutCount_ === 0) {\r\n            this.outstandingPuts_ = [];\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onListenRevoked_ = function (pathString, query) {\r\n        // Remove the listen and manufacture a \"permission_denied\" error for the failed listen.\r\n        var queryId;\r\n        if (!query) {\r\n            queryId = 'default';\r\n        }\r\n        else {\r\n            queryId = query.map(function (q) { return ObjectToUniqueKey(q); }).join('$');\r\n        }\r\n        var listen = this.removeListen_(pathString, queryId);\r\n        if (listen && listen.onComplete) {\r\n            listen.onComplete('permission_denied');\r\n        }\r\n    };\r\n    PersistentConnection.prototype.removeListen_ = function (pathString, queryId) {\r\n        var normalizedPathString = new Path(pathString).toString(); // normalize path.\r\n        var listen;\r\n        if (this.listens.has(normalizedPathString)) {\r\n            var map = this.listens.get(normalizedPathString);\r\n            listen = map.get(queryId);\r\n            map.delete(queryId);\r\n            if (map.size === 0) {\r\n                this.listens.delete(normalizedPathString);\r\n            }\r\n        }\r\n        else {\r\n            // all listens for this path has already been removed\r\n            listen = undefined;\r\n        }\r\n        return listen;\r\n    };\r\n    PersistentConnection.prototype.onAuthRevoked_ = function (statusCode, explanation) {\r\n        log('Auth token revoked: ' + statusCode + '/' + explanation);\r\n        this.authToken_ = null;\r\n        this.forceTokenRefresh_ = true;\r\n        this.realtime_.close();\r\n        if (statusCode === 'invalid_token' || statusCode === 'permission_denied') {\r\n            // We'll wait a couple times before logging the warning / increasing the\r\n            // retry period since oauth tokens will report as \"invalid\" if they're\r\n            // just expired. Plus there may be transient issues that resolve themselves.\r\n            this.invalidAuthTokenCount_++;\r\n            if (this.invalidAuthTokenCount_ >= INVALID_AUTH_TOKEN_THRESHOLD) {\r\n                // Set a long reconnect delay because recovery is unlikely\r\n                this.reconnectDelay_ = RECONNECT_MAX_DELAY_FOR_ADMINS;\r\n                // Notify the auth token provider that the token is invalid, which will log\r\n                // a warning\r\n                this.authTokenProvider_.notifyForInvalidToken();\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.onSecurityDebugPacket_ = function (body) {\r\n        if (this.securityDebugCallback_) {\r\n            this.securityDebugCallback_(body);\r\n        }\r\n        else {\r\n            if ('msg' in body) {\r\n                console.log('FIREBASE: ' + body['msg'].replace('\\n', '\\nFIREBASE: '));\r\n            }\r\n        }\r\n    };\r\n    PersistentConnection.prototype.restoreState_ = function () {\r\n        var e_1, _a, e_2, _b;\r\n        //Re-authenticate ourselves if we have a credential stored.\r\n        this.tryAuth();\r\n        try {\r\n            // Puts depend on having received the corresponding data update from the server before they complete, so we must\r\n            // make sure to send listens before puts.\r\n            for (var _c = __values(this.listens.values()), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var queries = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(queries.values())), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var listenSpec = _f.value;\r\n                        this.sendListen_(listenSpec);\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n        for (var i = 0; i < this.outstandingPuts_.length; i++) {\r\n            if (this.outstandingPuts_[i]) {\r\n                this.sendPut_(i);\r\n            }\r\n        }\r\n        while (this.onDisconnectRequestQueue_.length) {\r\n            var request = this.onDisconnectRequestQueue_.shift();\r\n            this.sendOnDisconnect_(request.action, request.pathString, request.data, request.onComplete);\r\n        }\r\n        for (var i = 0; i < this.outstandingGets_.length; i++) {\r\n            if (this.outstandingGets_[i]) {\r\n                this.sendGet_(i);\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * Sends client stats for first connection\r\n     */\r\n    PersistentConnection.prototype.sendConnectStats_ = function () {\r\n        var stats = {};\r\n        var clientName = 'js';\r\n        if (isNodeSdk()) {\r\n            if (this.repoInfo_.nodeAdmin) {\r\n                clientName = 'admin_node';\r\n            }\r\n            else {\r\n                clientName = 'node';\r\n            }\r\n        }\r\n        stats['sdk.' + clientName + '.' + SDK_VERSION.replace(/\\./g, '-')] = 1;\r\n        if (isMobileCordova()) {\r\n            stats['framework.cordova'] = 1;\r\n        }\r\n        else if (isReactNative()) {\r\n            stats['framework.reactnative'] = 1;\r\n        }\r\n        this.reportStats(stats);\r\n    };\r\n    PersistentConnection.prototype.shouldReconnect_ = function () {\r\n        var online = OnlineMonitor.getInstance().currentlyOnline();\r\n        return isEmpty(this.interruptReasons_) && online;\r\n    };\r\n    PersistentConnection.nextPersistentConnectionId_ = 0;\r\n    /**\r\n     * Counter for number of connections created. Mainly used for tagging in the logs\r\n     */\r\n    PersistentConnection.nextConnectionId_ = 0;\r\n    return PersistentConnection;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * An implementation of ServerActions that communicates with the server via REST requests.\r\n * This is mostly useful for compatibility with crawlers, where we don't want to spin up a full\r\n * persistent connection (using WebSockets or long-polling)\r\n */\r\nvar ReadonlyRestClient = /** @class */ (function (_super) {\r\n    __extends(ReadonlyRestClient, _super);\r\n    /**\r\n     * @param {!RepoInfo} repoInfo_ Data about the namespace we are connecting to\r\n     * @param {function(string, *, boolean, ?number)} onDataUpdate_ A callback for new data from the server\r\n     * @param {AuthTokenProvider} authTokenProvider_\r\n     * @implements {ServerActions}\r\n     */\r\n    function ReadonlyRestClient(repoInfo_, onDataUpdate_, authTokenProvider_) {\r\n        var _this = _super.call(this) || this;\r\n        _this.repoInfo_ = repoInfo_;\r\n        _this.onDataUpdate_ = onDataUpdate_;\r\n        _this.authTokenProvider_ = authTokenProvider_;\r\n        /** @private {function(...[*])} */\r\n        _this.log_ = logWrapper('p:rest:');\r\n        /**\r\n         * We don't actually need to track listens, except to prevent us calling an onComplete for a listen\r\n         * that's been removed. :-/\r\n         *\r\n         * @private {!Object.<string, !Object>}\r\n         */\r\n        _this.listens_ = {};\r\n        return _this;\r\n    }\r\n    ReadonlyRestClient.prototype.reportStats = function (stats) {\r\n        throw new Error('Method not implemented.');\r\n    };\r\n    /**\r\n     * @param {!Query} query\r\n     * @param {?number=} tag\r\n     * @return {string}\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.getListenId_ = function (query, tag) {\r\n        if (tag !== undefined) {\r\n            return 'tag$' + tag;\r\n        }\r\n        else {\r\n            assert(query.getQueryParams().isDefault(), \"should have a tag if it's not a default query.\");\r\n            return query.path.toString();\r\n        }\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.listen = function (query, currentHashFn, tag, onComplete) {\r\n        var _this = this;\r\n        var pathString = query.path.toString();\r\n        this.log_('Listen called for ' + pathString + ' ' + query.queryIdentifier());\r\n        // Mark this listener so we can tell if it's removed.\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        var thisListen = {};\r\n        this.listens_[listenId] = thisListen;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, /*isMerge=*/ false, tag);\r\n            }\r\n            if (safeGet(_this.listens_, listenId) === thisListen) {\r\n                var status_1;\r\n                if (!error) {\r\n                    status_1 = 'ok';\r\n                }\r\n                else if (error === 401) {\r\n                    status_1 = 'permission_denied';\r\n                }\r\n                else {\r\n                    status_1 = 'rest_error:' + error;\r\n                }\r\n                onComplete(status_1, null);\r\n            }\r\n        });\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.unlisten = function (query, tag) {\r\n        var listenId = ReadonlyRestClient.getListenId_(query, tag);\r\n        delete this.listens_[listenId];\r\n    };\r\n    ReadonlyRestClient.prototype.get = function (query) {\r\n        var _this = this;\r\n        var queryStringParameters = query\r\n            .getQueryParams()\r\n            .toRestQueryStringParameters();\r\n        var pathString = query.path.toString();\r\n        var deferred = new Deferred();\r\n        this.restRequest_(pathString + '.json', queryStringParameters, function (error, result) {\r\n            var data = result;\r\n            if (error === 404) {\r\n                data = null;\r\n                error = null;\r\n            }\r\n            if (error === null) {\r\n                _this.onDataUpdate_(pathString, data, \r\n                /*isMerge=*/ false, \r\n                /*tag=*/ null);\r\n                deferred.resolve(data);\r\n            }\r\n            else {\r\n                deferred.reject(new Error(data));\r\n            }\r\n        });\r\n        return deferred.promise;\r\n    };\r\n    /** @inheritDoc */\r\n    ReadonlyRestClient.prototype.refreshAuthToken = function (token) {\r\n        // no-op since we just always call getToken.\r\n    };\r\n    /**\r\n     * Performs a REST request to the given path, with the provided query string parameters,\r\n     * and any auth credentials we have.\r\n     *\r\n     * @param {!string} pathString\r\n     * @param {!Object.<string, *>} queryStringParameters\r\n     * @param {?function(?number, *=)} callback\r\n     * @private\r\n     */\r\n    ReadonlyRestClient.prototype.restRequest_ = function (pathString, queryStringParameters, callback) {\r\n        var _this = this;\r\n        if (queryStringParameters === void 0) { queryStringParameters = {}; }\r\n        queryStringParameters['format'] = 'export';\r\n        this.authTokenProvider_\r\n            .getToken(/*forceRefresh=*/ false)\r\n            .then(function (authTokenData) {\r\n            var authToken = authTokenData && authTokenData.accessToken;\r\n            if (authToken) {\r\n                queryStringParameters['auth'] = authToken;\r\n            }\r\n            var url = (_this.repoInfo_.secure ? 'https://' : 'http://') +\r\n                _this.repoInfo_.host +\r\n                pathString +\r\n                '?' +\r\n                'ns=' +\r\n                _this.repoInfo_.namespace +\r\n                querystring(queryStringParameters);\r\n            _this.log_('Sending REST request for ' + url);\r\n            var xhr = new XMLHttpRequest();\r\n            xhr.onreadystatechange = function () {\r\n                if (callback && xhr.readyState === 4) {\r\n                    _this.log_('REST Response for ' + url + ' received. status:', xhr.status, 'response:', xhr.responseText);\r\n                    var res = null;\r\n                    if (xhr.status >= 200 && xhr.status < 300) {\r\n                        try {\r\n                            res = jsonEval(xhr.responseText);\r\n                        }\r\n                        catch (e) {\r\n                            warn('Failed to parse JSON response for ' +\r\n                                url +\r\n                                ': ' +\r\n                                xhr.responseText);\r\n                        }\r\n                        callback(null, res);\r\n                    }\r\n                    else {\r\n                        // 401 and 404 are expected.\r\n                        if (xhr.status !== 401 && xhr.status !== 404) {\r\n                            warn('Got unsuccessful REST response for ' +\r\n                                url +\r\n                                ' Status: ' +\r\n                                xhr.status);\r\n                        }\r\n                        callback(xhr.status);\r\n                    }\r\n                    callback = null;\r\n                }\r\n            };\r\n            xhr.open('GET', url, /*asynchronous=*/ true);\r\n            xhr.send();\r\n        });\r\n    };\r\n    return ReadonlyRestClient;\r\n}(ServerActions));\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar INTERRUPT_REASON = 'repo_interrupt';\r\n/**\r\n * A connection to a single data repository.\r\n */\r\nvar Repo = /** @class */ (function () {\r\n    function Repo(repoInfo_, forceRestClient_, app, authTokenProvider_) {\r\n        this.repoInfo_ = repoInfo_;\r\n        this.forceRestClient_ = forceRestClient_;\r\n        this.app = app;\r\n        this.authTokenProvider_ = authTokenProvider_;\r\n        this.dataUpdateCount = 0;\r\n        this.statsListener_ = null;\r\n        this.eventQueue_ = new EventQueue();\r\n        this.nextWriteId_ = 1;\r\n        this.interceptServerDataCallback_ = null;\r\n        /** A list of data pieces and paths to be set when this client disconnects. */\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        // TODO: This should be @private but it's used by test_access.js and internal.js\r\n        this.persistentConnection_ = null;\r\n        // This key is intentionally not updated if RepoInfo is later changed or replaced\r\n        this.key = this.repoInfo_.toURLString();\r\n    }\r\n    Repo.prototype.start = function () {\r\n        var _this = this;\r\n        this.stats_ = StatsManager.getCollection(this.repoInfo_);\r\n        if (this.forceRestClient_ || beingCrawled()) {\r\n            this.server_ = new ReadonlyRestClient(this.repoInfo_, this.onDataUpdate_.bind(this), this.authTokenProvider_);\r\n            // Minor hack: Fire onConnect immediately, since there's no actual connection.\r\n            setTimeout(this.onConnectStatus_.bind(this, true), 0);\r\n        }\r\n        else {\r\n            var authOverride = this.app.options['databaseAuthVariableOverride'];\r\n            // Validate authOverride\r\n            if (typeof authOverride !== 'undefined' && authOverride !== null) {\r\n                if (typeof authOverride !== 'object') {\r\n                    throw new Error('Only objects are supported for option databaseAuthVariableOverride');\r\n                }\r\n                try {\r\n                    stringify(authOverride);\r\n                }\r\n                catch (e) {\r\n                    throw new Error('Invalid authOverride provided: ' + e);\r\n                }\r\n            }\r\n            this.persistentConnection_ = new PersistentConnection(this.repoInfo_, this.app.options.appId, this.onDataUpdate_.bind(this), this.onConnectStatus_.bind(this), this.onServerInfoUpdate_.bind(this), this.authTokenProvider_, authOverride);\r\n            this.server_ = this.persistentConnection_;\r\n        }\r\n        this.authTokenProvider_.addTokenChangeListener(function (token) {\r\n            _this.server_.refreshAuthToken(token);\r\n        });\r\n        // In the case of multiple Repos for the same repoInfo (i.e. there are multiple Firebase.Contexts being used),\r\n        // we only want to create one StatsReporter.  As such, we'll report stats over the first Repo created.\r\n        this.statsReporter_ = StatsManager.getOrCreateReporter(this.repoInfo_, function () { return new StatsReporter(_this.stats_, _this.server_); });\r\n        this.transactionsInit_();\r\n        // Used for .info.\r\n        this.infoData_ = new SnapshotHolder();\r\n        this.infoSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                var infoEvents = [];\r\n                var node = _this.infoData_.getNode(query.path);\r\n                // This is possibly a hack, but we have different semantics for .info endpoints. We don't raise null events\r\n                // on initial data...\r\n                if (!node.isEmpty()) {\r\n                    infoEvents = _this.infoSyncTree_.applyServerOverwrite(query.path, node);\r\n                    setTimeout(function () {\r\n                        onComplete('ok');\r\n                    }, 0);\r\n                }\r\n                return infoEvents;\r\n            },\r\n            stopListening: function () { }\r\n        });\r\n        this.updateInfo_('connected', false);\r\n        this.serverSyncTree_ = new SyncTree({\r\n            startListening: function (query, tag, currentHashFn, onComplete) {\r\n                _this.server_.listen(query, currentHashFn, tag, function (status, data) {\r\n                    var events = onComplete(status, data);\r\n                    _this.eventQueue_.raiseEventsForChangedPath(query.path, events);\r\n                });\r\n                // No synchronous events for network-backed sync trees\r\n                return [];\r\n            },\r\n            stopListening: function (query, tag) {\r\n                _this.server_.unlisten(query, tag);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return The URL corresponding to the root of this Firebase.\r\n     */\r\n    Repo.prototype.toString = function () {\r\n        return ((this.repoInfo_.secure ? 'https://' : 'http://') + this.repoInfo_.host);\r\n    };\r\n    /**\r\n     * @return The namespace represented by the repo.\r\n     */\r\n    Repo.prototype.name = function () {\r\n        return this.repoInfo_.namespace;\r\n    };\r\n    /**\r\n     * @return The time in milliseconds, taking the server offset into account if we have one.\r\n     */\r\n    Repo.prototype.serverTime = function () {\r\n        var offsetNode = this.infoData_.getNode(new Path('.info/serverTimeOffset'));\r\n        var offset = offsetNode.val() || 0;\r\n        return new Date().getTime() + offset;\r\n    };\r\n    /**\r\n     * Generate ServerValues using some variables from the repo object.\r\n     */\r\n    Repo.prototype.generateServerValues = function () {\r\n        return generateWithValues({\r\n            timestamp: this.serverTime()\r\n        });\r\n    };\r\n    /**\r\n     * Called by realtime when we get new messages from the server.\r\n     */\r\n    Repo.prototype.onDataUpdate_ = function (pathString, data, isMerge, tag) {\r\n        // For testing.\r\n        this.dataUpdateCount++;\r\n        var path = new Path(pathString);\r\n        data = this.interceptServerDataCallback_\r\n            ? this.interceptServerDataCallback_(pathString, data)\r\n            : data;\r\n        var events = [];\r\n        if (tag) {\r\n            if (isMerge) {\r\n                var taggedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n                events = this.serverSyncTree_.applyTaggedQueryMerge(path, taggedChildren, tag);\r\n            }\r\n            else {\r\n                var taggedSnap = nodeFromJSON$1(data);\r\n                events = this.serverSyncTree_.applyTaggedQueryOverwrite(path, taggedSnap, tag);\r\n            }\r\n        }\r\n        else if (isMerge) {\r\n            var changedChildren = map(data, function (raw) { return nodeFromJSON$1(raw); });\r\n            events = this.serverSyncTree_.applyServerMerge(path, changedChildren);\r\n        }\r\n        else {\r\n            var snap = nodeFromJSON$1(data);\r\n            events = this.serverSyncTree_.applyServerOverwrite(path, snap);\r\n        }\r\n        var affectedPath = path;\r\n        if (events.length > 0) {\r\n            // Since we have a listener outstanding for each transaction, receiving any events\r\n            // is a proxy for some change having occurred.\r\n            affectedPath = this.rerunTransactions_(path);\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, events);\r\n    };\r\n    // TODO: This should be @private but it's used by test_access.js and internal.js\r\n    Repo.prototype.interceptServerData_ = function (callback) {\r\n        this.interceptServerDataCallback_ = callback;\r\n    };\r\n    Repo.prototype.onConnectStatus_ = function (connectStatus) {\r\n        this.updateInfo_('connected', connectStatus);\r\n        if (connectStatus === false) {\r\n            this.runOnDisconnectEvents_();\r\n        }\r\n    };\r\n    Repo.prototype.onServerInfoUpdate_ = function (updates) {\r\n        var _this = this;\r\n        each(updates, function (key, value) {\r\n            _this.updateInfo_(key, value);\r\n        });\r\n    };\r\n    Repo.prototype.updateInfo_ = function (pathString, value) {\r\n        var path = new Path('/.info/' + pathString);\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.infoData_.updateSnapshot(path, newNode);\r\n        var events = this.infoSyncTree_.applyServerOverwrite(path, newNode);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n    };\r\n    Repo.prototype.getNextWriteId_ = function () {\r\n        return this.nextWriteId_++;\r\n    };\r\n    /**\r\n     * The purpose of `getValue` is to return the latest known value\r\n     * satisfying `query`.\r\n     *\r\n     * If the client is connected, this method will send a request\r\n     * to the server. If the client is not connected, then either:\r\n     *\r\n     * 1. The client was once connected, but not anymore.\r\n     * 2. The client has never connected, this is the first operation\r\n     *    this repo is handling.\r\n     *\r\n     * In case (1), it's possible that the client still has an active\r\n     * listener, with cached data. Since this is the latest known\r\n     * value satisfying the query, that's what getValue will return.\r\n     * If there is no cached data, `getValue` surfaces an \"offline\"\r\n     * error.\r\n     *\r\n     * In case (2), `getValue` will trigger a time-limited connection\r\n     * attempt. If the client is unable to connect to the server, it\r\n     * will surface an \"offline\" error because there cannot be any\r\n     * cached data. On the other hand, if the client is able to connect,\r\n     * `getValue` will return the server's value for the query, if one\r\n     * exists.\r\n     *\r\n     * @param query - The query to surface a value for.\r\n     */\r\n    Repo.prototype.getValue = function (query) {\r\n        var _this = this;\r\n        return this.server_.get(query).then(function (payload) {\r\n            var node = nodeFromJSON$1(payload);\r\n            var events = _this.serverSyncTree_.applyServerOverwrite(query.path, node);\r\n            _this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n            return Promise.resolve(new DataSnapshot(node, query.getRef(), query.getQueryParams().getIndex()));\r\n        }, function (err) {\r\n            _this.log_('get for query ' +\r\n                stringify(query) +\r\n                ' falling back to cache after error: ' +\r\n                err);\r\n            var cached = _this.serverSyncTree_.calcCompleteEventCache(query.path);\r\n            if (!cached.isEmpty()) {\r\n                return Promise.resolve(new DataSnapshot(cached, query.getRef(), query.getQueryParams().getIndex()));\r\n            }\r\n            return Promise.reject(new Error(err));\r\n        });\r\n    };\r\n    Repo.prototype.setWithPriority = function (path, newVal, newPriority, onComplete) {\r\n        var _this = this;\r\n        this.log_('set', {\r\n            path: path.toString(),\r\n            value: newVal,\r\n            priority: newPriority\r\n        });\r\n        // TODO: Optimize this behavior to either (a) store flag to skip resolving where possible and / or\r\n        // (b) store unresolved paths on JSON parse\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, newPriority);\r\n        var existing = this.serverSyncTree_.calcCompleteEventCache(path);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, existing, serverValues);\r\n        var writeId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, writeId, true);\r\n        this.eventQueue_.queueEvents(events);\r\n        this.server_.put(path.toString(), newNodeUnresolved.val(/*export=*/ true), function (status, errorReason) {\r\n            var success = status === 'ok';\r\n            if (!success) {\r\n                warn('set at ' + path + ' failed: ' + status);\r\n            }\r\n            var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId, !success);\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, clearEvents);\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n        var affectedPath = this.abortTransactions_(path);\r\n        this.rerunTransactions_(affectedPath);\r\n        // We queued the events above, so just flush the queue here\r\n        this.eventQueue_.raiseEventsForChangedPath(affectedPath, []);\r\n    };\r\n    Repo.prototype.update = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        this.log_('update', { path: path.toString(), value: childrenToMerge });\r\n        // Start with our existing data and merge each child into it.\r\n        var empty = true;\r\n        var serverValues = this.generateServerValues();\r\n        var changedChildren = {};\r\n        each(childrenToMerge, function (changedKey, changedValue) {\r\n            empty = false;\r\n            changedChildren[changedKey] = resolveDeferredValueTree(path.child(changedKey), nodeFromJSON$1(changedValue), _this.serverSyncTree_, serverValues);\r\n        });\r\n        if (!empty) {\r\n            var writeId_1 = this.getNextWriteId_();\r\n            var events = this.serverSyncTree_.applyUserMerge(path, changedChildren, writeId_1);\r\n            this.eventQueue_.queueEvents(events);\r\n            this.server_.merge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n                var success = status === 'ok';\r\n                if (!success) {\r\n                    warn('update at ' + path + ' failed: ' + status);\r\n                }\r\n                var clearEvents = _this.serverSyncTree_.ackUserWrite(writeId_1, !success);\r\n                var affectedPath = clearEvents.length > 0 ? _this.rerunTransactions_(path) : path;\r\n                _this.eventQueue_.raiseEventsForChangedPath(affectedPath, clearEvents);\r\n                _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n            });\r\n            each(childrenToMerge, function (changedPath) {\r\n                var affectedPath = _this.abortTransactions_(path.child(changedPath));\r\n                _this.rerunTransactions_(affectedPath);\r\n            });\r\n            // We queued the events above, so just flush the queue here\r\n            this.eventQueue_.raiseEventsForChangedPath(path, []);\r\n        }\r\n        else {\r\n            log(\"update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n        }\r\n    };\r\n    /**\r\n     * Applies all of the changes stored up in the onDisconnect_ tree.\r\n     */\r\n    Repo.prototype.runOnDisconnectEvents_ = function () {\r\n        var _this = this;\r\n        this.log_('onDisconnectEvents');\r\n        var serverValues = this.generateServerValues();\r\n        var resolvedOnDisconnectTree = new SparseSnapshotTree();\r\n        this.onDisconnect_.forEachTree(Path.Empty, function (path, node) {\r\n            var resolved = resolveDeferredValueTree(path, node, _this.serverSyncTree_, serverValues);\r\n            resolvedOnDisconnectTree.remember(path, resolved);\r\n        });\r\n        var events = [];\r\n        resolvedOnDisconnectTree.forEachTree(Path.Empty, function (path, snap) {\r\n            events = events.concat(_this.serverSyncTree_.applyServerOverwrite(path, snap));\r\n            var affectedPath = _this.abortTransactions_(path);\r\n            _this.rerunTransactions_(affectedPath);\r\n        });\r\n        this.onDisconnect_ = new SparseSnapshotTree();\r\n        this.eventQueue_.raiseEventsForChangedPath(Path.Empty, events);\r\n    };\r\n    Repo.prototype.onDisconnectCancel = function (path, onComplete) {\r\n        var _this = this;\r\n        this.server_.onDisconnectCancel(path.toString(), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.forget(path);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSet = function (path, value, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectSetWithPriority = function (path, value, priority, onComplete) {\r\n        var _this = this;\r\n        var newNode = nodeFromJSON$1(value, priority);\r\n        this.server_.onDisconnectPut(path.toString(), newNode.val(/*export=*/ true), function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                _this.onDisconnect_.remember(path, newNode);\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.onDisconnectUpdate = function (path, childrenToMerge, onComplete) {\r\n        var _this = this;\r\n        if (isEmpty(childrenToMerge)) {\r\n            log(\"onDisconnect().update() called with empty data.  Don't do anything.\");\r\n            this.callOnCompleteCallback(onComplete, 'ok');\r\n            return;\r\n        }\r\n        this.server_.onDisconnectMerge(path.toString(), childrenToMerge, function (status, errorReason) {\r\n            if (status === 'ok') {\r\n                each(childrenToMerge, function (childName, childNode) {\r\n                    var newChildNode = nodeFromJSON$1(childNode);\r\n                    _this.onDisconnect_.remember(path.child(childName), newChildNode);\r\n                });\r\n            }\r\n            _this.callOnCompleteCallback(onComplete, status, errorReason);\r\n        });\r\n    };\r\n    Repo.prototype.addEventCallbackForQuery = function (query, eventRegistration) {\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.addEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.removeEventCallbackForQuery = function (query, eventRegistration) {\r\n        // These are guaranteed not to raise events, since we're not passing in a cancelError. However, we can future-proof\r\n        // a little bit by handling the return values anyways.\r\n        var events;\r\n        if (query.path.getFront() === '.info') {\r\n            events = this.infoSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        else {\r\n            events = this.serverSyncTree_.removeEventRegistration(query, eventRegistration);\r\n        }\r\n        this.eventQueue_.raiseEventsAtPath(query.path, events);\r\n    };\r\n    Repo.prototype.interrupt = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.interrupt(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.resume = function () {\r\n        if (this.persistentConnection_) {\r\n            this.persistentConnection_.resume(INTERRUPT_REASON);\r\n        }\r\n    };\r\n    Repo.prototype.stats = function (showDelta) {\r\n        if (showDelta === void 0) { showDelta = false; }\r\n        if (typeof console === 'undefined') {\r\n            return;\r\n        }\r\n        var stats;\r\n        if (showDelta) {\r\n            if (!this.statsListener_) {\r\n                this.statsListener_ = new StatsListener(this.stats_);\r\n            }\r\n            stats = this.statsListener_.get();\r\n        }\r\n        else {\r\n            stats = this.stats_.get();\r\n        }\r\n        var longestName = Object.keys(stats).reduce(function (previousValue, currentValue) {\r\n            return Math.max(currentValue.length, previousValue);\r\n        }, 0);\r\n        each(stats, function (stat, value) {\r\n            var paddedStat = stat;\r\n            // pad stat names to be the same length (plus 2 extra spaces).\r\n            for (var i = stat.length; i < longestName + 2; i++) {\r\n                paddedStat += ' ';\r\n            }\r\n            console.log(paddedStat + value);\r\n        });\r\n    };\r\n    Repo.prototype.statsIncrementCounter = function (metric) {\r\n        this.stats_.incrementCounter(metric);\r\n        this.statsReporter_.includeStat(metric);\r\n    };\r\n    Repo.prototype.log_ = function () {\r\n        var varArgs = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            varArgs[_i] = arguments[_i];\r\n        }\r\n        var prefix = '';\r\n        if (this.persistentConnection_) {\r\n            prefix = this.persistentConnection_.id + ':';\r\n        }\r\n        log.apply(void 0, __spread([prefix], varArgs));\r\n    };\r\n    Repo.prototype.callOnCompleteCallback = function (callback, status, errorReason) {\r\n        if (callback) {\r\n            exceptionGuard(function () {\r\n                if (status === 'ok') {\r\n                    callback(null);\r\n                }\r\n                else {\r\n                    var code = (status || 'error').toUpperCase();\r\n                    var message = code;\r\n                    if (errorReason) {\r\n                        message += ': ' + errorReason;\r\n                    }\r\n                    var error = new Error(message);\r\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                    error.code = code;\r\n                    callback(error);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    Object.defineProperty(Repo.prototype, \"database\", {\r\n        get: function () {\r\n            return this.__database || (this.__database = new Database(this));\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Repo;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Filters nodes by range and uses an IndexFilter to track any changes after filtering the node\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar RangedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function RangedFilter(params) {\r\n        this.indexedFilter_ = new IndexedFilter(params.getIndex());\r\n        this.index_ = params.getIndex();\r\n        this.startPost_ = RangedFilter.getStartPost_(params);\r\n        this.endPost_ = RangedFilter.getEndPost_(params);\r\n    }\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getStartPost = function () {\r\n        return this.startPost_;\r\n    };\r\n    /**\r\n     * @return {!NamedNode}\r\n     */\r\n    RangedFilter.prototype.getEndPost = function () {\r\n        return this.endPost_;\r\n    };\r\n    /**\r\n     * @param {!NamedNode} node\r\n     * @return {boolean}\r\n     */\r\n    RangedFilter.prototype.matches = function (node) {\r\n        return (this.index_.compare(this.getStartPost(), node) <= 0 &&\r\n            this.index_.compare(node, this.getEndPost()) <= 0);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        return this.indexedFilter_.updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        if (newSnap.isLeafNode()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            newSnap = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        var filtered = newSnap.withIndex(this.index_);\r\n        // Don't support priorities on queries\r\n        filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n        var self = this;\r\n        newSnap.forEachChild(PRIORITY_INDEX, function (key, childNode) {\r\n            if (!self.matches(new NamedNode(key, childNode))) {\r\n                filtered = filtered.updateImmediateChild(key, ChildrenNode.EMPTY_NODE);\r\n            }\r\n        });\r\n        return this.indexedFilter_.updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndexedFilter = function () {\r\n        return this.indexedFilter_;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    RangedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getStartPost_ = function (params) {\r\n        if (params.hasStart()) {\r\n            var startName = params.getIndexStartName();\r\n            return params.getIndex().makePost(params.getIndexStartValue(), startName);\r\n        }\r\n        else {\r\n            return params.getIndex().minPost();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!QueryParams} params\r\n     * @return {!NamedNode}\r\n     * @private\r\n     */\r\n    RangedFilter.getEndPost_ = function (params) {\r\n        if (params.hasEnd()) {\r\n            var endName = params.getIndexEndName();\r\n            return params.getIndex().makePost(params.getIndexEndValue(), endName);\r\n        }\r\n        else {\r\n            return params.getIndex().maxPost();\r\n        }\r\n    };\r\n    return RangedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Applies a limit and a range to a node and uses RangedFilter to do the heavy lifting where possible\r\n *\r\n * @constructor\r\n * @implements {NodeFilter}\r\n */\r\nvar LimitedFilter = /** @class */ (function () {\r\n    /**\r\n     * @param {!QueryParams} params\r\n     */\r\n    function LimitedFilter(params) {\r\n        this.rangedFilter_ = new RangedFilter(params);\r\n        this.index_ = params.getIndex();\r\n        this.limit_ = params.getLimit();\r\n        this.reverse_ = !params.isViewFromLeft();\r\n    }\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateChild = function (snap, key, newChild, affectedPath, source, optChangeAccumulator) {\r\n        if (!this.rangedFilter_.matches(new NamedNode(key, newChild))) {\r\n            newChild = ChildrenNode.EMPTY_NODE;\r\n        }\r\n        if (snap.getImmediateChild(key).equals(newChild)) {\r\n            // No change\r\n            return snap;\r\n        }\r\n        else if (snap.numChildren() < this.limit_) {\r\n            return this.rangedFilter_\r\n                .getIndexedFilter()\r\n                .updateChild(snap, key, newChild, affectedPath, source, optChangeAccumulator);\r\n        }\r\n        else {\r\n            return this.fullLimitUpdateChild_(snap, key, newChild, source, optChangeAccumulator);\r\n        }\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updateFullNode = function (oldSnap, newSnap, optChangeAccumulator) {\r\n        var filtered;\r\n        if (newSnap.isLeafNode() || newSnap.isEmpty()) {\r\n            // Make sure we have a children node with the correct index, not a leaf node;\r\n            filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n        }\r\n        else {\r\n            if (this.limit_ * 2 < newSnap.numChildren() &&\r\n                newSnap.isIndexed(this.index_)) {\r\n                // Easier to build up a snapshot, since what we're given has more than twice the elements we want\r\n                filtered = ChildrenNode.EMPTY_NODE.withIndex(this.index_);\r\n                // anchor to the startPost, endPost, or last element as appropriate\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = newSnap.getReverseIteratorFrom(this.rangedFilter_.getEndPost(), this.index_);\r\n                }\r\n                else {\r\n                    iterator = newSnap.getIteratorFrom(this.rangedFilter_.getStartPost(), this.index_);\r\n                }\r\n                var count = 0;\r\n                while (iterator.hasNext() && count < this.limit_) {\r\n                    var next = iterator.getNext();\r\n                    var inRange = void 0;\r\n                    if (this.reverse_) {\r\n                        inRange =\r\n                            this.index_.compare(this.rangedFilter_.getStartPost(), next) <= 0;\r\n                    }\r\n                    else {\r\n                        inRange =\r\n                            this.index_.compare(next, this.rangedFilter_.getEndPost()) <= 0;\r\n                    }\r\n                    if (inRange) {\r\n                        filtered = filtered.updateImmediateChild(next.name, next.node);\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        // if we have reached the end post, we cannot keep adding elemments\r\n                        break;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                // The snap contains less than twice the limit. Faster to delete from the snap than build up a new one\r\n                filtered = newSnap.withIndex(this.index_);\r\n                // Don't support priorities on queries\r\n                filtered = filtered.updatePriority(ChildrenNode.EMPTY_NODE);\r\n                var startPost = void 0;\r\n                var endPost = void 0;\r\n                var cmp = void 0;\r\n                var iterator = void 0;\r\n                if (this.reverse_) {\r\n                    iterator = filtered.getReverseIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getEndPost();\r\n                    endPost = this.rangedFilter_.getStartPost();\r\n                    var indexCompare_1 = this.index_.getCompare();\r\n                    cmp = function (a, b) { return indexCompare_1(b, a); };\r\n                }\r\n                else {\r\n                    iterator = filtered.getIterator(this.index_);\r\n                    startPost = this.rangedFilter_.getStartPost();\r\n                    endPost = this.rangedFilter_.getEndPost();\r\n                    cmp = this.index_.getCompare();\r\n                }\r\n                var count = 0;\r\n                var foundStartPost = false;\r\n                while (iterator.hasNext()) {\r\n                    var next = iterator.getNext();\r\n                    if (!foundStartPost && cmp(startPost, next) <= 0) {\r\n                        // start adding\r\n                        foundStartPost = true;\r\n                    }\r\n                    var inRange = foundStartPost && count < this.limit_ && cmp(next, endPost) <= 0;\r\n                    if (inRange) {\r\n                        count++;\r\n                    }\r\n                    else {\r\n                        filtered = filtered.updateImmediateChild(next.name, ChildrenNode.EMPTY_NODE);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return this.rangedFilter_\r\n            .getIndexedFilter()\r\n            .updateFullNode(oldSnap, filtered, optChangeAccumulator);\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.updatePriority = function (oldSnap, newPriority) {\r\n        // Don't support priorities on queries\r\n        return oldSnap;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.filtersNodes = function () {\r\n        return true;\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndexedFilter = function () {\r\n        return this.rangedFilter_.getIndexedFilter();\r\n    };\r\n    /**\r\n     * @inheritDoc\r\n     */\r\n    LimitedFilter.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @param {!Node} snap\r\n     * @param {string} childKey\r\n     * @param {!Node} childSnap\r\n     * @param {!CompleteChildSource} source\r\n     * @param {?ChildChangeAccumulator} changeAccumulator\r\n     * @return {!Node}\r\n     * @private\r\n     */\r\n    LimitedFilter.prototype.fullLimitUpdateChild_ = function (snap, childKey, childSnap, source, changeAccumulator) {\r\n        // TODO: rename all cache stuff etc to general snap terminology\r\n        var cmp;\r\n        if (this.reverse_) {\r\n            var indexCmp_1 = this.index_.getCompare();\r\n            cmp = function (a, b) { return indexCmp_1(b, a); };\r\n        }\r\n        else {\r\n            cmp = this.index_.getCompare();\r\n        }\r\n        var oldEventCache = snap;\r\n        assert(oldEventCache.numChildren() === this.limit_, '');\r\n        var newChildNamedNode = new NamedNode(childKey, childSnap);\r\n        var windowBoundary = this.reverse_\r\n            ? oldEventCache.getFirstChild(this.index_)\r\n            : oldEventCache.getLastChild(this.index_);\r\n        var inRange = this.rangedFilter_.matches(newChildNamedNode);\r\n        if (oldEventCache.hasChild(childKey)) {\r\n            var oldChildSnap = oldEventCache.getImmediateChild(childKey);\r\n            var nextChild = source.getChildAfterChild(this.index_, windowBoundary, this.reverse_);\r\n            while (nextChild != null &&\r\n                (nextChild.name === childKey || oldEventCache.hasChild(nextChild.name))) {\r\n                // There is a weird edge case where a node is updated as part of a merge in the write tree, but hasn't\r\n                // been applied to the limited filter yet. Ignore this next child which will be updated later in\r\n                // the limited filter...\r\n                nextChild = source.getChildAfterChild(this.index_, nextChild, this.reverse_);\r\n            }\r\n            var compareNext = nextChild == null ? 1 : cmp(nextChild, newChildNamedNode);\r\n            var remainsInWindow = inRange && !childSnap.isEmpty() && compareNext >= 0;\r\n            if (remainsInWindow) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childChangedChange(childKey, childSnap, oldChildSnap));\r\n                }\r\n                return oldEventCache.updateImmediateChild(childKey, childSnap);\r\n            }\r\n            else {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(childKey, oldChildSnap));\r\n                }\r\n                var newEventCache = oldEventCache.updateImmediateChild(childKey, ChildrenNode.EMPTY_NODE);\r\n                var nextChildInRange = nextChild != null && this.rangedFilter_.matches(nextChild);\r\n                if (nextChildInRange) {\r\n                    if (changeAccumulator != null) {\r\n                        changeAccumulator.trackChildChange(Change.childAddedChange(nextChild.name, nextChild.node));\r\n                    }\r\n                    return newEventCache.updateImmediateChild(nextChild.name, nextChild.node);\r\n                }\r\n                else {\r\n                    return newEventCache;\r\n                }\r\n            }\r\n        }\r\n        else if (childSnap.isEmpty()) {\r\n            // we're deleting a node, but it was not in the window, so ignore it\r\n            return snap;\r\n        }\r\n        else if (inRange) {\r\n            if (cmp(windowBoundary, newChildNamedNode) >= 0) {\r\n                if (changeAccumulator != null) {\r\n                    changeAccumulator.trackChildChange(Change.childRemovedChange(windowBoundary.name, windowBoundary.node));\r\n                    changeAccumulator.trackChildChange(Change.childAddedChange(childKey, childSnap));\r\n                }\r\n                return oldEventCache\r\n                    .updateImmediateChild(childKey, childSnap)\r\n                    .updateImmediateChild(windowBoundary.name, ChildrenNode.EMPTY_NODE);\r\n            }\r\n            else {\r\n                return snap;\r\n            }\r\n        }\r\n        else {\r\n            return snap;\r\n        }\r\n    };\r\n    return LimitedFilter;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This class is an immutable-from-the-public-api struct containing a set of query parameters defining a\r\n * range to be returned for a particular location. It is assumed that validation of parameters is done at the\r\n * user-facing API level, so it is not done here.\r\n * @constructor\r\n */\r\nvar QueryParams = /** @class */ (function () {\r\n    function QueryParams() {\r\n        this.limitSet_ = false;\r\n        this.startSet_ = false;\r\n        this.startNameSet_ = false;\r\n        this.endSet_ = false;\r\n        this.endNameSet_ = false;\r\n        this.limit_ = 0;\r\n        this.viewFrom_ = '';\r\n        this.indexStartValue_ = null;\r\n        this.indexStartName_ = '';\r\n        this.indexEndValue_ = null;\r\n        this.indexEndName_ = '';\r\n        this.index_ = PRIORITY_INDEX;\r\n    }\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasStart = function () {\r\n        return this.startSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if it would return from left.\r\n     */\r\n    QueryParams.prototype.isViewFromLeft = function () {\r\n        if (this.viewFrom_ === '') {\r\n            // limit(), rather than limitToFirst or limitToLast was called.\r\n            // This means that only one of startSet_ and endSet_ is true. Use them\r\n            // to calculate which side of the view to anchor to. If neither is set,\r\n            // anchor to the end.\r\n            return this.startSet_;\r\n        }\r\n        else {\r\n            return (this.viewFrom_ === QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT);\r\n        }\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexStartValue = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        return this.indexStartValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasStart() returns true.\r\n     * Returns the starting key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexStartName = function () {\r\n        assert(this.startSet_, 'Only valid if start has been set');\r\n        if (this.startNameSet_) {\r\n            return this.indexStartName_;\r\n        }\r\n        else {\r\n            return MIN_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasEnd = function () {\r\n        return this.endSet_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * @return {*}\r\n     */\r\n    QueryParams.prototype.getIndexEndValue = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        return this.indexEndValue_;\r\n    };\r\n    /**\r\n     * Only valid to call if hasEnd() returns true.\r\n     * Returns the end key name for the range defined by these query parameters\r\n     * @return {!string}\r\n     */\r\n    QueryParams.prototype.getIndexEndName = function () {\r\n        assert(this.endSet_, 'Only valid if end has been set');\r\n        if (this.endNameSet_) {\r\n            return this.indexEndName_;\r\n        }\r\n        else {\r\n            return MAX_NAME;\r\n        }\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.hasLimit = function () {\r\n        return this.limitSet_;\r\n    };\r\n    /**\r\n     * @return {boolean} True if a limit has been set and it has been explicitly anchored\r\n     */\r\n    QueryParams.prototype.hasAnchoredLimit = function () {\r\n        return this.limitSet_ && this.viewFrom_ !== '';\r\n    };\r\n    /**\r\n     * Only valid to call if hasLimit() returns true\r\n     * @return {!number}\r\n     */\r\n    QueryParams.prototype.getLimit = function () {\r\n        assert(this.limitSet_, 'Only valid if limit has been set');\r\n        return this.limit_;\r\n    };\r\n    /**\r\n     * @return {!Index}\r\n     */\r\n    QueryParams.prototype.getIndex = function () {\r\n        return this.index_;\r\n    };\r\n    /**\r\n     * @return {!QueryParams}\r\n     * @private\r\n     */\r\n    QueryParams.prototype.copy_ = function () {\r\n        var copy = new QueryParams();\r\n        copy.limitSet_ = this.limitSet_;\r\n        copy.limit_ = this.limit_;\r\n        copy.startSet_ = this.startSet_;\r\n        copy.indexStartValue_ = this.indexStartValue_;\r\n        copy.startNameSet_ = this.startNameSet_;\r\n        copy.indexStartName_ = this.indexStartName_;\r\n        copy.endSet_ = this.endSet_;\r\n        copy.indexEndValue_ = this.indexEndValue_;\r\n        copy.endNameSet_ = this.endNameSet_;\r\n        copy.indexEndName_ = this.indexEndName_;\r\n        copy.index_ = this.index_;\r\n        copy.viewFrom_ = this.viewFrom_;\r\n        return copy;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limit = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = '';\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToFirst = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_LEFT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!number} newLimit\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.limitToLast = function (newLimit) {\r\n        var newParams = this.copy_();\r\n        newParams.limitSet_ = true;\r\n        newParams.limit_ = newLimit;\r\n        newParams.viewFrom_ = QueryParams.WIRE_PROTOCOL_CONSTANTS_.VIEW_FROM_RIGHT;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.startAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.startSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexStartValue_ = indexValue;\r\n        if (key != null) {\r\n            newParams.startNameSet_ = true;\r\n            newParams.indexStartName_ = key;\r\n        }\r\n        else {\r\n            newParams.startNameSet_ = false;\r\n            newParams.indexStartName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {*} indexValue\r\n     * @param {?string=} key\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.endAt = function (indexValue, key) {\r\n        var newParams = this.copy_();\r\n        newParams.endSet_ = true;\r\n        if (indexValue === undefined) {\r\n            indexValue = null;\r\n        }\r\n        newParams.indexEndValue_ = indexValue;\r\n        if (key !== undefined) {\r\n            newParams.endNameSet_ = true;\r\n            newParams.indexEndName_ = key;\r\n        }\r\n        else {\r\n            newParams.endNameSet_ = false;\r\n            newParams.indexEndName_ = '';\r\n        }\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @param {!Index} index\r\n     * @return {!QueryParams}\r\n     */\r\n    QueryParams.prototype.orderBy = function (index) {\r\n        var newParams = this.copy_();\r\n        newParams.index_ = index;\r\n        return newParams;\r\n    };\r\n    /**\r\n     * @return {!Object}\r\n     */\r\n    QueryParams.prototype.getQueryObject = function () {\r\n        var WIRE_PROTOCOL_CONSTANTS = QueryParams.WIRE_PROTOCOL_CONSTANTS_;\r\n        var obj = {};\r\n        if (this.startSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_VALUE] = this.indexStartValue_;\r\n            if (this.startNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_START_NAME] = this.indexStartName_;\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_VALUE] = this.indexEndValue_;\r\n            if (this.endNameSet_) {\r\n                obj[WIRE_PROTOCOL_CONSTANTS.INDEX_END_NAME] = this.indexEndName_;\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.LIMIT] = this.limit_;\r\n            var viewFrom = this.viewFrom_;\r\n            if (viewFrom === '') {\r\n                if (this.isViewFromLeft()) {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_LEFT;\r\n                }\r\n                else {\r\n                    viewFrom = WIRE_PROTOCOL_CONSTANTS.VIEW_FROM_RIGHT;\r\n                }\r\n            }\r\n            obj[WIRE_PROTOCOL_CONSTANTS.VIEW_FROM] = viewFrom;\r\n        }\r\n        // For now, priority index is the default, so we only specify if it's some other index\r\n        if (this.index_ !== PRIORITY_INDEX) {\r\n            obj[WIRE_PROTOCOL_CONSTANTS.INDEX] = this.index_.toString();\r\n        }\r\n        return obj;\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.loadsAllData = function () {\r\n        return !(this.startSet_ || this.endSet_ || this.limitSet_);\r\n    };\r\n    /**\r\n     * @return {boolean}\r\n     */\r\n    QueryParams.prototype.isDefault = function () {\r\n        return this.loadsAllData() && this.index_ === PRIORITY_INDEX;\r\n    };\r\n    /**\r\n     * @return {!NodeFilter}\r\n     */\r\n    QueryParams.prototype.getNodeFilter = function () {\r\n        if (this.loadsAllData()) {\r\n            return new IndexedFilter(this.getIndex());\r\n        }\r\n        else if (this.hasLimit()) {\r\n            return new LimitedFilter(this);\r\n        }\r\n        else {\r\n            return new RangedFilter(this);\r\n        }\r\n    };\r\n    /**\r\n     * Returns a set of REST query string parameters representing this query.\r\n     *\r\n     * @return {!Object.<string,*>} query string parameters\r\n     */\r\n    QueryParams.prototype.toRestQueryStringParameters = function () {\r\n        var REST_CONSTANTS = QueryParams.REST_QUERY_CONSTANTS_;\r\n        var qs = {};\r\n        if (this.isDefault()) {\r\n            return qs;\r\n        }\r\n        var orderBy;\r\n        if (this.index_ === PRIORITY_INDEX) {\r\n            orderBy = REST_CONSTANTS.PRIORITY_INDEX;\r\n        }\r\n        else if (this.index_ === VALUE_INDEX) {\r\n            orderBy = REST_CONSTANTS.VALUE_INDEX;\r\n        }\r\n        else if (this.index_ === KEY_INDEX) {\r\n            orderBy = REST_CONSTANTS.KEY_INDEX;\r\n        }\r\n        else {\r\n            assert(this.index_ instanceof PathIndex, 'Unrecognized index type!');\r\n            orderBy = this.index_.toString();\r\n        }\r\n        qs[REST_CONSTANTS.ORDER_BY] = stringify(orderBy);\r\n        if (this.startSet_) {\r\n            qs[REST_CONSTANTS.START_AT] = stringify(this.indexStartValue_);\r\n            if (this.startNameSet_) {\r\n                qs[REST_CONSTANTS.START_AT] += ',' + stringify(this.indexStartName_);\r\n            }\r\n        }\r\n        if (this.endSet_) {\r\n            qs[REST_CONSTANTS.END_AT] = stringify(this.indexEndValue_);\r\n            if (this.endNameSet_) {\r\n                qs[REST_CONSTANTS.END_AT] += ',' + stringify(this.indexEndName_);\r\n            }\r\n        }\r\n        if (this.limitSet_) {\r\n            if (this.isViewFromLeft()) {\r\n                qs[REST_CONSTANTS.LIMIT_TO_FIRST] = this.limit_;\r\n            }\r\n            else {\r\n                qs[REST_CONSTANTS.LIMIT_TO_LAST] = this.limit_;\r\n            }\r\n        }\r\n        return qs;\r\n    };\r\n    /**\r\n     * Wire Protocol Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.WIRE_PROTOCOL_CONSTANTS_ = {\r\n        INDEX_START_VALUE: 'sp',\r\n        INDEX_START_NAME: 'sn',\r\n        INDEX_END_VALUE: 'ep',\r\n        INDEX_END_NAME: 'en',\r\n        LIMIT: 'l',\r\n        VIEW_FROM: 'vf',\r\n        VIEW_FROM_LEFT: 'l',\r\n        VIEW_FROM_RIGHT: 'r',\r\n        INDEX: 'i'\r\n    };\r\n    /**\r\n     * REST Query Constants\r\n     * @const\r\n     * @enum {string}\r\n     * @private\r\n     */\r\n    QueryParams.REST_QUERY_CONSTANTS_ = {\r\n        ORDER_BY: 'orderBy',\r\n        PRIORITY_INDEX: '$priority',\r\n        VALUE_INDEX: '$value',\r\n        KEY_INDEX: '$key',\r\n        START_AT: 'startAt',\r\n        END_AT: 'endAt',\r\n        LIMIT_TO_FIRST: 'limitToFirst',\r\n        LIMIT_TO_LAST: 'limitToLast'\r\n    };\r\n    /**\r\n     * Default, empty query parameters\r\n     * @type {!QueryParams}\r\n     * @const\r\n     */\r\n    QueryParams.DEFAULT = new QueryParams();\r\n    return QueryParams;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar Reference = /** @class */ (function (_super) {\r\n    __extends(Reference, _super);\r\n    /**\r\n     * Call options:\r\n     *   new Reference(Repo, Path) or\r\n     *   new Reference(url: string, string|RepoManager)\r\n     *\r\n     * Externally - this is the firebase.database.Reference type.\r\n     *\r\n     * @param {!Repo} repo\r\n     * @param {(!Path)} path\r\n     * @extends {Query}\r\n     */\r\n    function Reference(repo, path) {\r\n        var _this = this;\r\n        if (!(repo instanceof Repo)) {\r\n            throw new Error('new Reference() no longer supported - use app.database().');\r\n        }\r\n        // call Query's constructor, passing in the repo and path.\r\n        _this = _super.call(this, repo, path, QueryParams.DEFAULT, false) || this;\r\n        return _this;\r\n    }\r\n    /** @return {?string} */\r\n    Reference.prototype.getKey = function () {\r\n        validateArgCount('Reference.key', 0, 0, arguments.length);\r\n        if (this.path.isEmpty()) {\r\n            return null;\r\n        }\r\n        else {\r\n            return this.path.getBack();\r\n        }\r\n    };\r\n    /**\r\n     * @param {!(string|Path)} pathString\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.child = function (pathString) {\r\n        validateArgCount('Reference.child', 1, 1, arguments.length);\r\n        if (typeof pathString === 'number') {\r\n            pathString = String(pathString);\r\n        }\r\n        else if (!(pathString instanceof Path)) {\r\n            if (this.path.getFront() === null) {\r\n                validateRootPathString('Reference.child', 1, pathString, false);\r\n            }\r\n            else {\r\n                validatePathString('Reference.child', 1, pathString, false);\r\n            }\r\n        }\r\n        return new Reference(this.repo, this.path.child(pathString));\r\n    };\r\n    /** @return {?Reference} */\r\n    Reference.prototype.getParent = function () {\r\n        validateArgCount('Reference.parent', 0, 0, arguments.length);\r\n        var parentPath = this.path.parent();\r\n        return parentPath === null ? null : new Reference(this.repo, parentPath);\r\n    };\r\n    /** @return {!Reference} */\r\n    Reference.prototype.getRoot = function () {\r\n        validateArgCount('Reference.root', 0, 0, arguments.length);\r\n        var ref = this;\r\n        while (ref.getParent() !== null) {\r\n            ref = ref.getParent();\r\n        }\r\n        return ref;\r\n    };\r\n    /** @return {!Database} */\r\n    Reference.prototype.databaseProp = function () {\r\n        return this.repo.database;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.set = function (newVal, onComplete) {\r\n        validateArgCount('Reference.set', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.set', this.path);\r\n        validateFirebaseDataArg('Reference.set', 1, newVal, this.path, false);\r\n        validateCallback('Reference.set', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, \r\n        /*priority=*/ null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {!Object} objectToMerge\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.update = function (objectToMerge, onComplete) {\r\n        validateArgCount('Reference.update', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.update', this.path);\r\n        if (Array.isArray(objectToMerge)) {\r\n            var newObjectToMerge = {};\r\n            for (var i = 0; i < objectToMerge.length; ++i) {\r\n                newObjectToMerge['' + i] = objectToMerge[i];\r\n            }\r\n            objectToMerge = newObjectToMerge;\r\n            warn('Passing an Array to Firebase.update() is deprecated. ' +\r\n                'Use set() if you want to overwrite the existing data, or ' +\r\n                'an Object with integer keys if you really do want to ' +\r\n                'only update some of the children.');\r\n        }\r\n        validateFirebaseMergeDataArg('Reference.update', 1, objectToMerge, this.path, false);\r\n        validateCallback('Reference.update', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.update(this.path, objectToMerge, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*} newVal\r\n     * @param {string|number|null} newPriority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setWithPriority = function (newVal, newPriority, onComplete) {\r\n        validateArgCount('Reference.setWithPriority', 2, 3, arguments.length);\r\n        validateWritablePath('Reference.setWithPriority', this.path);\r\n        validateFirebaseDataArg('Reference.setWithPriority', 1, newVal, this.path, false);\r\n        validatePriority('Reference.setWithPriority', 2, newPriority, false);\r\n        validateCallback('Reference.setWithPriority', 3, onComplete, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.setWithPriority failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(this.path, newVal, newPriority, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.remove = function (onComplete) {\r\n        validateArgCount('Reference.remove', 0, 1, arguments.length);\r\n        validateWritablePath('Reference.remove', this.path);\r\n        validateCallback('Reference.remove', 1, onComplete, true);\r\n        return this.set(null, onComplete);\r\n    };\r\n    /**\r\n     * @param {function(*):*} transactionUpdate\r\n     * @param {(function(?Error, boolean, ?DataSnapshot))=} onComplete\r\n     * @param {boolean=} applyLocally\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.transaction = function (transactionUpdate, onComplete, applyLocally) {\r\n        validateArgCount('Reference.transaction', 1, 3, arguments.length);\r\n        validateWritablePath('Reference.transaction', this.path);\r\n        validateCallback('Reference.transaction', 1, transactionUpdate, false);\r\n        validateCallback('Reference.transaction', 2, onComplete, true);\r\n        // NOTE: applyLocally is an internal-only option for now.  We need to decide if we want to keep it and how\r\n        // to expose it.\r\n        validateBoolean('Reference.transaction', 3, applyLocally, true);\r\n        if (this.getKey() === '.length' || this.getKey() === '.keys') {\r\n            throw ('Reference.transaction failed: ' +\r\n                this.getKey() +\r\n                ' is a read-only object.');\r\n        }\r\n        if (applyLocally === undefined) {\r\n            applyLocally = true;\r\n        }\r\n        var deferred = new Deferred();\r\n        if (typeof onComplete === 'function') {\r\n            deferred.promise.catch(function () { });\r\n        }\r\n        var promiseComplete = function (error, committed, snapshot) {\r\n            if (error) {\r\n                deferred.reject(error);\r\n            }\r\n            else {\r\n                deferred.resolve(new TransactionResult(committed, snapshot));\r\n            }\r\n            if (typeof onComplete === 'function') {\r\n                onComplete(error, committed, snapshot);\r\n            }\r\n        };\r\n        this.repo.startTransaction(this.path, transactionUpdate, promiseComplete, applyLocally);\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {string|number|null} priority\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Promise}\r\n     */\r\n    Reference.prototype.setPriority = function (priority, onComplete) {\r\n        validateArgCount('Reference.setPriority', 1, 2, arguments.length);\r\n        validateWritablePath('Reference.setPriority', this.path);\r\n        validatePriority('Reference.setPriority', 1, priority, false);\r\n        validateCallback('Reference.setPriority', 2, onComplete, true);\r\n        var deferred = new Deferred();\r\n        this.repo.setWithPriority(this.path.child('.priority'), priority, null, deferred.wrapCallback(onComplete));\r\n        return deferred.promise;\r\n    };\r\n    /**\r\n     * @param {*=} value\r\n     * @param {function(?Error)=} onComplete\r\n     * @return {!Reference}\r\n     */\r\n    Reference.prototype.push = function (value, onComplete) {\r\n        validateArgCount('Reference.push', 0, 2, arguments.length);\r\n        validateWritablePath('Reference.push', this.path);\r\n        validateFirebaseDataArg('Reference.push', 1, value, this.path, true);\r\n        validateCallback('Reference.push', 2, onComplete, true);\r\n        var now = this.repo.serverTime();\r\n        var name = nextPushId(now);\r\n        // push() returns a ThennableReference whose promise is fulfilled with a regular Reference.\r\n        // We use child() to create handles to two different references. The first is turned into a\r\n        // ThennableReference below by adding then() and catch() methods and is used as the\r\n        // return value of push(). The second remains a regular Reference and is used as the fulfilled\r\n        // value of the first ThennableReference.\r\n        var thennablePushRef = this.child(name);\r\n        var pushRef = this.child(name);\r\n        var promise;\r\n        if (value != null) {\r\n            promise = thennablePushRef.set(value, onComplete).then(function () { return pushRef; });\r\n        }\r\n        else {\r\n            promise = Promise.resolve(pushRef);\r\n        }\r\n        thennablePushRef.then = promise.then.bind(promise);\r\n        thennablePushRef.catch = promise.then.bind(promise, undefined);\r\n        if (typeof onComplete === 'function') {\r\n            promise.catch(function () { });\r\n        }\r\n        return thennablePushRef;\r\n    };\r\n    /**\r\n     * @return {!OnDisconnect}\r\n     */\r\n    Reference.prototype.onDisconnect = function () {\r\n        validateWritablePath('Reference.onDisconnect', this.path);\r\n        return new OnDisconnect(this.repo, this.path);\r\n    };\r\n    Object.defineProperty(Reference.prototype, \"database\", {\r\n        get: function () {\r\n            return this.databaseProp();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"key\", {\r\n        get: function () {\r\n            return this.getKey();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"parent\", {\r\n        get: function () {\r\n            return this.getParent();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Reference.prototype, \"root\", {\r\n        get: function () {\r\n            return this.getRoot();\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Reference;\r\n}(Query));\r\n/**\r\n * Define reference constructor in various modules\r\n *\r\n * We are doing this here to avoid several circular\r\n * dependency issues\r\n */\r\nQuery.__referenceConstructor = Reference;\r\nSyncPoint.__referenceConstructor = Reference;\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Node in a Tree.\r\n */\r\nvar TreeNode = /** @class */ (function () {\r\n    function TreeNode() {\r\n        // TODO: Consider making accessors that create children and value lazily or\r\n        // separate Internal / Leaf 'types'.\r\n        this.children = {};\r\n        this.childCount = 0;\r\n        this.value = null;\r\n    }\r\n    return TreeNode;\r\n}());\r\n/**\r\n * A light-weight tree, traversable by path.  Nodes can have both values and children.\r\n * Nodes are not enumerated (by forEachChild) unless they have a value or non-empty\r\n * children.\r\n */\r\nvar Tree = /** @class */ (function () {\r\n    /**\r\n     * @template T\r\n     * @param {string=} name_ Optional name of the node.\r\n     * @param {Tree=} parent_ Optional parent node.\r\n     * @param {TreeNode=} node_ Optional node to wrap.\r\n     */\r\n    function Tree(name_, parent_, node_) {\r\n        if (name_ === void 0) { name_ = ''; }\r\n        if (parent_ === void 0) { parent_ = null; }\r\n        if (node_ === void 0) { node_ = new TreeNode(); }\r\n        this.name_ = name_;\r\n        this.parent_ = parent_;\r\n        this.node_ = node_;\r\n    }\r\n    /**\r\n     * Returns a sub-Tree for the given path.\r\n     *\r\n     * @param {!(string|Path)} pathObj Path to look up.\r\n     * @return {!Tree.<T>} Tree for path.\r\n     */\r\n    Tree.prototype.subTree = function (pathObj) {\r\n        // TODO: Require pathObj to be Path?\r\n        var path = pathObj instanceof Path ? pathObj : new Path(pathObj);\r\n        var child = this, next = path.getFront();\r\n        while (next !== null) {\r\n            var childNode = safeGet(child.node_.children, next) || new TreeNode();\r\n            child = new Tree(next, child, childNode);\r\n            path = path.popFront();\r\n            next = path.getFront();\r\n        }\r\n        return child;\r\n    };\r\n    /**\r\n     * Returns the data associated with this tree node.\r\n     *\r\n     * @return {?T} The data or null if no data exists.\r\n     */\r\n    Tree.prototype.getValue = function () {\r\n        return this.node_.value;\r\n    };\r\n    /**\r\n     * Sets data to this tree node.\r\n     *\r\n     * @param {!T} value Value to set.\r\n     */\r\n    Tree.prototype.setValue = function (value) {\r\n        assert(typeof value !== 'undefined', 'Cannot set value to undefined');\r\n        this.node_.value = value;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * Clears the contents of the tree node (its value and all children).\r\n     */\r\n    Tree.prototype.clear = function () {\r\n        this.node_.value = null;\r\n        this.node_.children = {};\r\n        this.node_.childCount = 0;\r\n        this.updateParents_();\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree has any children.\r\n     */\r\n    Tree.prototype.hasChildren = function () {\r\n        return this.node_.childCount > 0;\r\n    };\r\n    /**\r\n     * @return {boolean} Whether the tree is empty (no value or children).\r\n     */\r\n    Tree.prototype.isEmpty = function () {\r\n        return this.getValue() === null && !this.hasChildren();\r\n    };\r\n    /**\r\n     * Calls action for each child of this tree node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachChild = function (action) {\r\n        var _this = this;\r\n        each(this.node_.children, function (child, childTree) {\r\n            action(new Tree(child, _this, childTree));\r\n        });\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants, calling action for each one.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well. Defaults to\r\n     *   false.\r\n     * @param {boolean=} childrenFirst Whether to call action on children before calling it on\r\n     *   parent.\r\n     */\r\n    Tree.prototype.forEachDescendant = function (action, includeSelf, childrenFirst) {\r\n        if (includeSelf && !childrenFirst) {\r\n            action(this);\r\n        }\r\n        this.forEachChild(function (child) {\r\n            child.forEachDescendant(action, /*includeSelf=*/ true, childrenFirst);\r\n        });\r\n        if (includeSelf && childrenFirst) {\r\n            action(this);\r\n        }\r\n    };\r\n    /**\r\n     * Calls action on each ancestor node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called on each parent; return\r\n     *   true to abort.\r\n     * @param {boolean=} includeSelf Whether to call action on this node as well.\r\n     * @return {boolean} true if the action callback returned true.\r\n     */\r\n    Tree.prototype.forEachAncestor = function (action, includeSelf) {\r\n        var node = includeSelf ? this : this.parent();\r\n        while (node !== null) {\r\n            if (action(node)) {\r\n                return true;\r\n            }\r\n            node = node.parent();\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * Does a depth-first traversal of this node's descendants.  When a descendant with a value\r\n     * is found, action is called on it and traversal does not continue inside the node.\r\n     * Action is *not* called on this node.\r\n     *\r\n     * @param {function(!Tree.<T>)} action Action to be called for each child.\r\n     */\r\n    Tree.prototype.forEachImmediateDescendantWithValue = function (action) {\r\n        this.forEachChild(function (child) {\r\n            if (child.getValue() !== null) {\r\n                action(child);\r\n            }\r\n            else {\r\n                child.forEachImmediateDescendantWithValue(action);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @return {!Path} The path of this tree node, as a Path.\r\n     */\r\n    Tree.prototype.path = function () {\r\n        return new Path(this.parent_ === null\r\n            ? this.name_\r\n            : this.parent_.path() + '/' + this.name_);\r\n    };\r\n    /**\r\n     * @return {string} The name of the tree node.\r\n     */\r\n    Tree.prototype.name = function () {\r\n        return this.name_;\r\n    };\r\n    /**\r\n     * @return {?Tree} The parent tree node, or null if this is the root of the tree.\r\n     */\r\n    Tree.prototype.parent = function () {\r\n        return this.parent_;\r\n    };\r\n    /**\r\n     * Adds or removes this child from its parent based on whether it's empty or not.\r\n     *\r\n     * @private\r\n     */\r\n    Tree.prototype.updateParents_ = function () {\r\n        if (this.parent_ !== null) {\r\n            this.parent_.updateChild_(this.name_, this);\r\n        }\r\n    };\r\n    /**\r\n     * Adds or removes the passed child to this tree node, depending on whether it's empty.\r\n     *\r\n     * @param {string} childName The name of the child to update.\r\n     * @param {!Tree.<T>} child The child to update.\r\n     * @private\r\n     */\r\n    Tree.prototype.updateChild_ = function (childName, child) {\r\n        var childEmpty = child.isEmpty();\r\n        var childExists = contains(this.node_.children, childName);\r\n        if (childEmpty && childExists) {\r\n            delete this.node_.children[childName];\r\n            this.node_.childCount--;\r\n            this.updateParents_();\r\n        }\r\n        else if (!childEmpty && !childExists) {\r\n            this.node_.children[childName] = child.node_;\r\n            this.node_.childCount++;\r\n            this.updateParents_();\r\n        }\r\n    };\r\n    return Tree;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// TODO: This is pretty messy.  Ideally, a lot of this would move into FirebaseData, or a transaction-specific\r\n// component used by FirebaseData, but it has ties to user callbacks (transaction update and onComplete) as well\r\n// as the realtime connection (to send transactions to the server).  So that all needs to be decoupled first.\r\n// For now it's part of Repo, but in its own file.\r\n/**\r\n * @enum {number}\r\n */\r\nvar TransactionStatus;\r\n(function (TransactionStatus) {\r\n    // We've run the transaction and updated transactionResultData_ with the result, but it isn't currently sent to the\r\n    // server. A transaction will go from RUN -> SENT -> RUN if it comes back from the server as rejected due to\r\n    // mismatched hash.\r\n    TransactionStatus[TransactionStatus[\"RUN\"] = 0] = \"RUN\";\r\n    // We've run the transaction and sent it to the server and it's currently outstanding (hasn't come back as accepted\r\n    // or rejected yet).\r\n    TransactionStatus[TransactionStatus[\"SENT\"] = 1] = \"SENT\";\r\n    // Temporary state used to mark completed transactions (whether successful or aborted).  The transaction will be\r\n    // removed when we get a chance to prune completed ones.\r\n    TransactionStatus[TransactionStatus[\"COMPLETED\"] = 2] = \"COMPLETED\";\r\n    // Used when an already-sent transaction needs to be aborted (e.g. due to a conflicting set() call that was made).\r\n    // If it comes back as unsuccessful, we'll abort it.\r\n    TransactionStatus[TransactionStatus[\"SENT_NEEDS_ABORT\"] = 3] = \"SENT_NEEDS_ABORT\";\r\n    // Temporary state used to mark transactions that need to be aborted.\r\n    TransactionStatus[TransactionStatus[\"NEEDS_ABORT\"] = 4] = \"NEEDS_ABORT\";\r\n})(TransactionStatus || (TransactionStatus = {}));\r\n/**\r\n * If a transaction does not succeed after 25 retries, we abort it.  Among other things this ensure that if there's\r\n * ever a bug causing a mismatch between client / server hashes for some data, we won't retry indefinitely.\r\n * @type {number}\r\n * @const\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.MAX_TRANSACTION_RETRIES_ = 25;\r\n/**\r\n * Setup the transaction data structures\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.transactionsInit_ = function () {\r\n    /**\r\n     * Stores queues of outstanding transactions for Firebase locations.\r\n     *\r\n     * @type {!Tree.<Array.<!Transaction>>}\r\n     * @private\r\n     */\r\n    this.transactionQueueTree_ = new Tree();\r\n};\r\n/**\r\n * Creates a new transaction, adds it to the transactions we're tracking, and sends it to the server if possible.\r\n *\r\n * @param {!Path} path Path at which to do transaction.\r\n * @param {function(*):*} transactionUpdate Update callback.\r\n * @param {?function(?Error, boolean, ?DataSnapshot)} onComplete Completion callback.\r\n * @param {boolean} applyLocally Whether or not to make intermediate results visible\r\n */\r\nRepo.prototype.startTransaction = function (path, transactionUpdate, onComplete, applyLocally) {\r\n    this.log_('transaction on ' + path);\r\n    // Add a watch to make sure we get server updates.\r\n    var valueCallback = function () { };\r\n    var watchRef = new Reference(this, path);\r\n    watchRef.on('value', valueCallback);\r\n    var unwatcher = function () {\r\n        watchRef.off('value', valueCallback);\r\n    };\r\n    // Initialize transaction.\r\n    var transaction = {\r\n        path: path,\r\n        update: transactionUpdate,\r\n        onComplete: onComplete,\r\n        // One of TransactionStatus enums.\r\n        status: null,\r\n        // Used when combining transactions at different locations to figure out which one goes first.\r\n        order: LUIDGenerator(),\r\n        // Whether to raise local events for this transaction.\r\n        applyLocally: applyLocally,\r\n        // Count of how many times we've retried the transaction.\r\n        retryCount: 0,\r\n        // Function to call to clean up our .on() listener.\r\n        unwatcher: unwatcher,\r\n        // Stores why a transaction was aborted.\r\n        abortReason: null,\r\n        currentWriteId: null,\r\n        currentInputSnapshot: null,\r\n        currentOutputSnapshotRaw: null,\r\n        currentOutputSnapshotResolved: null\r\n    };\r\n    // Run transaction initially.\r\n    var currentState = this.getLatestState_(path);\r\n    transaction.currentInputSnapshot = currentState;\r\n    var newVal = transaction.update(currentState.val());\r\n    if (newVal === undefined) {\r\n        // Abort transaction.\r\n        transaction.unwatcher();\r\n        transaction.currentOutputSnapshotRaw = null;\r\n        transaction.currentOutputSnapshotResolved = null;\r\n        if (transaction.onComplete) {\r\n            // We just set the input snapshot, so this cast should be safe\r\n            var snapshot = new DataSnapshot(transaction.currentInputSnapshot, new Reference(this, transaction.path), PRIORITY_INDEX);\r\n            transaction.onComplete(null, false, snapshot);\r\n        }\r\n    }\r\n    else {\r\n        validateFirebaseData('transaction failed: Data returned ', newVal, transaction.path);\r\n        // Mark as run and add to our queue.\r\n        transaction.status = TransactionStatus.RUN;\r\n        var queueNode = this.transactionQueueTree_.subTree(path);\r\n        var nodeQueue = queueNode.getValue() || [];\r\n        nodeQueue.push(transaction);\r\n        queueNode.setValue(nodeQueue);\r\n        // Update visibleData and raise events\r\n        // Note: We intentionally raise events after updating all of our transaction state, since the user could\r\n        // start new transactions from the event callbacks.\r\n        var priorityForNode = void 0;\r\n        if (typeof newVal === 'object' &&\r\n            newVal !== null &&\r\n            contains(newVal, '.priority')) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            priorityForNode = safeGet(newVal, '.priority');\r\n            assert(isValidPriority(priorityForNode), 'Invalid priority returned by transaction. ' +\r\n                'Priority must be a valid string, finite number, server value, or null.');\r\n        }\r\n        else {\r\n            var currentNode = this.serverSyncTree_.calcCompleteEventCache(path) ||\r\n                ChildrenNode.EMPTY_NODE;\r\n            priorityForNode = currentNode.getPriority().val();\r\n        }\r\n        priorityForNode /** @type {null|number|string} */ = priorityForNode;\r\n        var serverValues = this.generateServerValues();\r\n        var newNodeUnresolved = nodeFromJSON$1(newVal, priorityForNode);\r\n        var newNode = resolveDeferredValueSnapshot(newNodeUnresolved, currentState, serverValues);\r\n        transaction.currentOutputSnapshotRaw = newNodeUnresolved;\r\n        transaction.currentOutputSnapshotResolved = newNode;\r\n        transaction.currentWriteId = this.getNextWriteId_();\r\n        var events = this.serverSyncTree_.applyUserOverwrite(path, newNode, transaction.currentWriteId, transaction.applyLocally);\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        this.sendReadyTransactions_();\r\n    }\r\n};\r\n/**\r\n * @param {!Path} path\r\n * @param {Array.<number>=} excludeSets A specific set to exclude\r\n * @return {Node}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getLatestState_ = function (path, excludeSets) {\r\n    return (this.serverSyncTree_.calcCompleteEventCache(path, excludeSets) ||\r\n        ChildrenNode.EMPTY_NODE);\r\n};\r\n/**\r\n * Sends any already-run transactions that aren't waiting for outstanding transactions to\r\n * complete.\r\n *\r\n * Externally it's called with no arguments, but it calls itself recursively with a particular\r\n * transactionQueueTree node to recurse through the tree.\r\n *\r\n * @param {Tree.<Array.<Transaction>>=} node  transactionQueueTree node to start at.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendReadyTransactions_ = function (node) {\r\n    var _this = this;\r\n    if (node === void 0) { node = this.transactionQueueTree_; }\r\n    // Before recursing, make sure any completed transactions are removed.\r\n    if (!node) {\r\n        this.pruneCompletedTransactionsBelowNode_(node);\r\n    }\r\n    if (node.getValue() !== null) {\r\n        var queue = this.buildTransactionQueue_(node);\r\n        assert(queue.length > 0, 'Sending zero length transaction queue');\r\n        var allRun = queue.every(function (transaction) { return transaction.status === TransactionStatus.RUN; });\r\n        // If they're all run (and not sent), we can send them.  Else, we must wait.\r\n        if (allRun) {\r\n            this.sendTransactionQueue_(node.path(), queue);\r\n        }\r\n    }\r\n    else if (node.hasChildren()) {\r\n        node.forEachChild(function (childNode) {\r\n            _this.sendReadyTransactions_(childNode);\r\n        });\r\n    }\r\n};\r\n/**\r\n * Given a list of run transactions, send them to the server and then handle the result (success or failure).\r\n *\r\n * @param {!Path} path The location of the queue.\r\n * @param {!Array.<Transaction>} queue Queue of transactions under the specified location.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.sendTransactionQueue_ = function (path, queue) {\r\n    var _this = this;\r\n    // Mark transactions as sent and increment retry count!\r\n    var setsToIgnore = queue.map(function (txn) {\r\n        return txn.currentWriteId;\r\n    });\r\n    var latestState = this.getLatestState_(path, setsToIgnore);\r\n    var snapToSend = latestState;\r\n    var latestHash = latestState.hash();\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var txn = queue[i];\r\n        assert(txn.status === TransactionStatus.RUN, 'tryToSendTransactionQueue_: items in queue should all be run.');\r\n        txn.status = TransactionStatus.SENT;\r\n        txn.retryCount++;\r\n        var relativePath = Path.relativePath(path, txn.path);\r\n        // If we've gotten to this point, the output snapshot must be defined.\r\n        snapToSend = snapToSend.updateChild(relativePath /** @type {!Node} */, txn.currentOutputSnapshotRaw);\r\n    }\r\n    var dataToSend = snapToSend.val(true);\r\n    var pathToSend = path;\r\n    // Send the put.\r\n    this.server_.put(pathToSend.toString(), dataToSend, function (status) {\r\n        _this.log_('transaction put response', {\r\n            path: pathToSend.toString(),\r\n            status: status\r\n        });\r\n        var events = [];\r\n        if (status === 'ok') {\r\n            // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n            // the callback could trigger more transactions or sets.\r\n            var callbacks = [];\r\n            for (var i = 0; i < queue.length; i++) {\r\n                queue[i].status = TransactionStatus.COMPLETED;\r\n                events = events.concat(_this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId));\r\n                if (queue[i].onComplete) {\r\n                    // We never unset the output snapshot, and given that this transaction is complete, it should be set\r\n                    var node = queue[i].currentOutputSnapshotResolved;\r\n                    var ref = new Reference(_this, queue[i].path);\r\n                    var snapshot = new DataSnapshot(node, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, true, snapshot));\r\n                }\r\n                queue[i].unwatcher();\r\n            }\r\n            // Now remove the completed transactions.\r\n            _this.pruneCompletedTransactionsBelowNode_(_this.transactionQueueTree_.subTree(path));\r\n            // There may be pending transactions that we can now send.\r\n            _this.sendReadyTransactions_();\r\n            _this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n            // Finally, trigger onComplete callbacks.\r\n            for (var i = 0; i < callbacks.length; i++) {\r\n                exceptionGuard(callbacks[i]);\r\n            }\r\n        }\r\n        else {\r\n            // transactions are no longer sent.  Update their status appropriately.\r\n            if (status === 'datastale') {\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) {\r\n                        queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    }\r\n                    else {\r\n                        queue[i].status = TransactionStatus.RUN;\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                warn('transaction at ' + pathToSend.toString() + ' failed: ' + status);\r\n                for (var i = 0; i < queue.length; i++) {\r\n                    queue[i].status = TransactionStatus.NEEDS_ABORT;\r\n                    queue[i].abortReason = status;\r\n                }\r\n            }\r\n            _this.rerunTransactions_(path);\r\n        }\r\n    }, latestHash);\r\n};\r\n/**\r\n * Finds all transactions dependent on the data at changedPath and reruns them.\r\n *\r\n * Should be called any time cached data changes.\r\n *\r\n * Return the highest path that was affected by rerunning transactions.  This is the path at which events need to\r\n * be raised for.\r\n *\r\n * @param {!Path} changedPath The path in mergedData that changed.\r\n * @return {!Path} The rootmost path that was affected by rerunning transactions.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactions_ = function (changedPath) {\r\n    var rootMostTransactionNode = this.getAncestorTransactionNode_(changedPath);\r\n    var path = rootMostTransactionNode.path();\r\n    var queue = this.buildTransactionQueue_(rootMostTransactionNode);\r\n    this.rerunTransactionQueue_(queue, path);\r\n    return path;\r\n};\r\n/**\r\n * Does all the work of rerunning transactions (as well as cleans up aborted transactions and whatnot).\r\n *\r\n * @param {Array.<Transaction>} queue The queue of transactions to run.\r\n * @param {!Path} path The path the queue is for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.rerunTransactionQueue_ = function (queue, path) {\r\n    if (queue.length === 0) {\r\n        return; // Nothing to do!\r\n    }\r\n    // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n    // the callback could trigger more transactions or sets.\r\n    var callbacks = [];\r\n    var events = [];\r\n    // Ignore all of the sets we're going to re-run.\r\n    var txnsToRerun = queue.filter(function (q) {\r\n        return q.status === TransactionStatus.RUN;\r\n    });\r\n    var setsToIgnore = txnsToRerun.map(function (q) {\r\n        return q.currentWriteId;\r\n    });\r\n    for (var i = 0; i < queue.length; i++) {\r\n        var transaction = queue[i];\r\n        var relativePath = Path.relativePath(path, transaction.path);\r\n        var abortTransaction = false, abortReason = void 0;\r\n        assert(relativePath !== null, 'rerunTransactionsUnderNode_: relativePath should not be null.');\r\n        if (transaction.status === TransactionStatus.NEEDS_ABORT) {\r\n            abortTransaction = true;\r\n            abortReason = transaction.abortReason;\r\n            events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n        }\r\n        else if (transaction.status === TransactionStatus.RUN) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            if (transaction.retryCount >= Repo.MAX_TRANSACTION_RETRIES_) {\r\n                abortTransaction = true;\r\n                abortReason = 'maxretry';\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n            }\r\n            else {\r\n                // This code reruns a transaction\r\n                var currentNode = this.getLatestState_(transaction.path, setsToIgnore);\r\n                transaction.currentInputSnapshot = currentNode;\r\n                var newData = queue[i].update(currentNode.val());\r\n                if (newData !== undefined) {\r\n                    validateFirebaseData('transaction failed: Data returned ', newData, transaction.path);\r\n                    var newDataNode = nodeFromJSON$1(newData);\r\n                    var hasExplicitPriority = typeof newData === 'object' &&\r\n                        newData != null &&\r\n                        contains(newData, '.priority');\r\n                    if (!hasExplicitPriority) {\r\n                        // Keep the old priority if there wasn't a priority explicitly specified.\r\n                        newDataNode = newDataNode.updatePriority(currentNode.getPriority());\r\n                    }\r\n                    var oldWriteId = transaction.currentWriteId;\r\n                    var serverValues = this.generateServerValues();\r\n                    var newNodeResolved = resolveDeferredValueSnapshot(newDataNode, currentNode, serverValues);\r\n                    transaction.currentOutputSnapshotRaw = newDataNode;\r\n                    transaction.currentOutputSnapshotResolved = newNodeResolved;\r\n                    transaction.currentWriteId = this.getNextWriteId_();\r\n                    // Mutates setsToIgnore in place\r\n                    setsToIgnore.splice(setsToIgnore.indexOf(oldWriteId), 1);\r\n                    events = events.concat(this.serverSyncTree_.applyUserOverwrite(transaction.path, newNodeResolved, transaction.currentWriteId, transaction.applyLocally));\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(oldWriteId, true));\r\n                }\r\n                else {\r\n                    abortTransaction = true;\r\n                    abortReason = 'nodata';\r\n                    events = events.concat(this.serverSyncTree_.ackUserWrite(transaction.currentWriteId, true));\r\n                }\r\n            }\r\n        }\r\n        this.eventQueue_.raiseEventsForChangedPath(path, events);\r\n        events = [];\r\n        if (abortTransaction) {\r\n            // Abort.\r\n            queue[i].status = TransactionStatus.COMPLETED;\r\n            // Removing a listener can trigger pruning which can muck with mergedData/visibleData (as it prunes data).\r\n            // So defer the unwatcher until we're done.\r\n            (function (unwatcher) {\r\n                setTimeout(unwatcher, Math.floor(0));\r\n            })(queue[i].unwatcher);\r\n            if (queue[i].onComplete) {\r\n                if (abortReason === 'nodata') {\r\n                    var ref = new Reference(this, queue[i].path);\r\n                    // We set this field immediately, so it's safe to cast to an actual snapshot\r\n                    var lastInput /** @type {!Node} */ = queue[i].currentInputSnapshot;\r\n                    var snapshot = new DataSnapshot(lastInput, ref, PRIORITY_INDEX);\r\n                    callbacks.push(queue[i].onComplete.bind(null, null, false, snapshot));\r\n                }\r\n                else {\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error(abortReason), false, null));\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // Clean up completed transactions.\r\n    this.pruneCompletedTransactionsBelowNode_(this.transactionQueueTree_);\r\n    // Now fire callbacks, now that we're in a good, known state.\r\n    for (var i = 0; i < callbacks.length; i++) {\r\n        exceptionGuard(callbacks[i]);\r\n    }\r\n    // Try to send the transaction result to the server.\r\n    this.sendReadyTransactions_();\r\n};\r\n/**\r\n * Returns the rootmost ancestor node of the specified path that has a pending transaction on it, or just returns\r\n * the node for the given path if there are no pending transactions on any ancestor.\r\n *\r\n * @param {!Path} path The location to start at.\r\n * @return {!Tree.<Array.<!Transaction>>} The rootmost node with a transaction.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.getAncestorTransactionNode_ = function (path) {\r\n    var front;\r\n    // Start at the root and walk deeper into the tree towards path until we find a node with pending transactions.\r\n    var transactionNode = this.transactionQueueTree_;\r\n    front = path.getFront();\r\n    while (front !== null && transactionNode.getValue() === null) {\r\n        transactionNode = transactionNode.subTree(front);\r\n        path = path.popFront();\r\n        front = path.getFront();\r\n    }\r\n    return transactionNode;\r\n};\r\n/**\r\n * Builds the queue of all transactions at or below the specified transactionNode.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} transactionNode\r\n * @return {Array.<Transaction>} The generated queue.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.buildTransactionQueue_ = function (transactionNode) {\r\n    // Walk any child transaction queues and aggregate them into a single queue.\r\n    var transactionQueue = [];\r\n    this.aggregateTransactionQueuesForNode_(transactionNode, transactionQueue);\r\n    // Sort them by the order the transactions were created.\r\n    transactionQueue.sort(function (a, b) {\r\n        return a.order - b.order;\r\n    });\r\n    return transactionQueue;\r\n};\r\n/**\r\n * @param {!Tree.<Array.<Transaction>>} node\r\n * @param {Array.<Transaction>} queue\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.aggregateTransactionQueuesForNode_ = function (node, queue) {\r\n    var _this = this;\r\n    var nodeQueue = node.getValue();\r\n    if (nodeQueue !== null) {\r\n        for (var i = 0; i < nodeQueue.length; i++) {\r\n            queue.push(nodeQueue[i]);\r\n        }\r\n    }\r\n    node.forEachChild(function (child) {\r\n        _this.aggregateTransactionQueuesForNode_(child, queue);\r\n    });\r\n};\r\n/**\r\n * Remove COMPLETED transactions at or below this node in the transactionQueueTree_.\r\n *\r\n * @param {!Tree.<Array.<!Transaction>>} node\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.pruneCompletedTransactionsBelowNode_ = function (node) {\r\n    var _this = this;\r\n    var queue = node.getValue();\r\n    if (queue) {\r\n        var to = 0;\r\n        for (var from = 0; from < queue.length; from++) {\r\n            if (queue[from].status !== TransactionStatus.COMPLETED) {\r\n                queue[to] = queue[from];\r\n                to++;\r\n            }\r\n        }\r\n        queue.length = to;\r\n        node.setValue(queue.length > 0 ? queue : null);\r\n    }\r\n    node.forEachChild(function (childNode) {\r\n        _this.pruneCompletedTransactionsBelowNode_(childNode);\r\n    });\r\n};\r\n/**\r\n * Aborts all transactions on ancestors or descendants of the specified path.  Called when doing a set() or update()\r\n * since we consider them incompatible with transactions.\r\n *\r\n * @param {!Path} path Path for which we want to abort related transactions.\r\n * @return {!Path}\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactions_ = function (path) {\r\n    var _this = this;\r\n    var affectedPath = this.getAncestorTransactionNode_(path).path();\r\n    var transactionNode = this.transactionQueueTree_.subTree(path);\r\n    transactionNode.forEachAncestor(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    this.abortTransactionsOnNode_(transactionNode);\r\n    transactionNode.forEachDescendant(function (node) {\r\n        _this.abortTransactionsOnNode_(node);\r\n    });\r\n    return affectedPath;\r\n};\r\n/**\r\n * Abort transactions stored in this transaction queue node.\r\n *\r\n * @param {!Tree.<Array.<Transaction>>} node Node to abort transactions for.\r\n * @private\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nRepo.prototype.abortTransactionsOnNode_ = function (node) {\r\n    var queue = node.getValue();\r\n    if (queue !== null) {\r\n        // Queue up the callbacks and fire them after cleaning up all of our transaction state, since\r\n        // the callback could trigger more transactions or sets.\r\n        var callbacks = [];\r\n        // Go through queue.  Any already-sent transactions must be marked for abort, while the unsent ones\r\n        // can be immediately aborted and removed.\r\n        var events = [];\r\n        var lastSent = -1;\r\n        for (var i = 0; i < queue.length; i++) {\r\n            if (queue[i].status === TransactionStatus.SENT_NEEDS_ABORT) ;\r\n            else if (queue[i].status === TransactionStatus.SENT) {\r\n                assert(lastSent === i - 1, 'All SENT items should be at beginning of queue.');\r\n                lastSent = i;\r\n                // Mark transaction for abort when it comes back.\r\n                queue[i].status = TransactionStatus.SENT_NEEDS_ABORT;\r\n                queue[i].abortReason = 'set';\r\n            }\r\n            else {\r\n                assert(queue[i].status === TransactionStatus.RUN, 'Unexpected transaction status in abort');\r\n                // We can abort it immediately.\r\n                queue[i].unwatcher();\r\n                events = events.concat(this.serverSyncTree_.ackUserWrite(queue[i].currentWriteId, true));\r\n                if (queue[i].onComplete) {\r\n                    var snapshot = null;\r\n                    callbacks.push(queue[i].onComplete.bind(null, new Error('set'), false, snapshot));\r\n                }\r\n            }\r\n        }\r\n        if (lastSent === -1) {\r\n            // We're not waiting for any sent transactions.  We can clear the queue.\r\n            node.setValue(null);\r\n        }\r\n        else {\r\n            // Remove the transactions we aborted.\r\n            queue.length = lastSent + 1;\r\n        }\r\n        // Now fire the callbacks.\r\n        this.eventQueue_.raiseEventsForChangedPath(node.path(), events);\r\n        for (var i = 0; i < callbacks.length; i++) {\r\n            exceptionGuard(callbacks[i]);\r\n        }\r\n    }\r\n};\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Abstraction around FirebaseApp's token fetching capabilities.\r\n */\r\nvar FirebaseAuthTokenProvider = /** @class */ (function () {\r\n    function FirebaseAuthTokenProvider(app_, authProvider_) {\r\n        var _this = this;\r\n        this.app_ = app_;\r\n        this.authProvider_ = authProvider_;\r\n        this.auth_ = null;\r\n        this.auth_ = authProvider_.getImmediate({ optional: true });\r\n        if (!this.auth_) {\r\n            authProvider_.get().then(function (auth) { return (_this.auth_ = auth); });\r\n        }\r\n    }\r\n    /**\r\n     * @param {boolean} forceRefresh\r\n     * @return {!Promise<FirebaseAuthTokenData>}\r\n     */\r\n    FirebaseAuthTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        if (!this.auth_) {\r\n            return Promise.resolve(null);\r\n        }\r\n        return this.auth_.getToken(forceRefresh).catch(function (error) {\r\n            // TODO: Need to figure out all the cases this is raised and whether\r\n            // this makes sense.\r\n            if (error && error.code === 'auth/token-not-initialized') {\r\n                log('Got auth/token-not-initialized error.  Treating as null token.');\r\n                return null;\r\n            }\r\n            else {\r\n                return Promise.reject(error);\r\n            }\r\n        });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // TODO: We might want to wrap the listener and call it with no args to\r\n        // avoid a leaky abstraction, but that makes removing the listener harder.\r\n        if (this.auth_) {\r\n            this.auth_.addAuthTokenListener(listener);\r\n        }\r\n        else {\r\n            setTimeout(function () { return listener(null); }, 0);\r\n            this.authProvider_\r\n                .get()\r\n                .then(function (auth) { return auth.addAuthTokenListener(listener); });\r\n        }\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.removeTokenChangeListener = function (listener) {\r\n        this.authProvider_\r\n            .get()\r\n            .then(function (auth) { return auth.removeAuthTokenListener(listener); });\r\n    };\r\n    FirebaseAuthTokenProvider.prototype.notifyForInvalidToken = function () {\r\n        var errorMessage = 'Provided authentication credentials for the app named \"' +\r\n            this.app_.name +\r\n            '\" are invalid. This usually indicates your app was not ' +\r\n            'initialized correctly. ';\r\n        if ('credential' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"credential\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else if ('serviceAccount' in this.app_.options) {\r\n            errorMessage +=\r\n                'Make sure the \"serviceAccount\" property provided to initializeApp() ' +\r\n                    'is authorized to access the specified \"databaseURL\" and is from the correct ' +\r\n                    'project.';\r\n        }\r\n        else {\r\n            errorMessage +=\r\n                'Make sure the \"apiKey\" and \"databaseURL\" properties provided to ' +\r\n                    'initializeApp() match the values provided for your app at ' +\r\n                    'https://console.firebase.google.com/.';\r\n        }\r\n        warn(errorMessage);\r\n    };\r\n    return FirebaseAuthTokenProvider;\r\n}());\r\n/* Auth token provider that the Admin SDK uses to connect to the Emulator. */\r\nvar EmulatorAdminTokenProvider = /** @class */ (function () {\r\n    function EmulatorAdminTokenProvider() {\r\n    }\r\n    EmulatorAdminTokenProvider.prototype.getToken = function (forceRefresh) {\r\n        return Promise.resolve({\r\n            accessToken: EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN\r\n        });\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.addTokenChangeListener = function (listener) {\r\n        // Invoke the listener immediately to match the behavior in Firebase Auth\r\n        // (see packages/auth/src/auth.js#L1807)\r\n        listener(EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN);\r\n    };\r\n    EmulatorAdminTokenProvider.prototype.removeTokenChangeListener = function (listener) { };\r\n    EmulatorAdminTokenProvider.prototype.notifyForInvalidToken = function () { };\r\n    EmulatorAdminTokenProvider.EMULATOR_AUTH_TOKEN = 'owner';\r\n    return EmulatorAdminTokenProvider;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * This variable is also defined in the firebase node.js admin SDK. Before\r\n * modifying this definition, consult the definition in:\r\n *\r\n * https://github.com/firebase/firebase-admin-node\r\n *\r\n * and make sure the two are consistent.\r\n */\r\nvar FIREBASE_DATABASE_EMULATOR_HOST_VAR = 'FIREBASE_DATABASE_EMULATOR_HOST';\r\nvar _staticInstance;\r\n/**\r\n * Creates and caches Repo instances.\r\n */\r\nvar RepoManager = /** @class */ (function () {\r\n    function RepoManager() {\r\n        /**\r\n         * @private {!Object.<string, Object<string, !fb.core.Repo>>}\r\n         */\r\n        this.repos_ = {};\r\n        /**\r\n         * If true, new Repos will be created to use ReadonlyRestClient (for testing purposes).\r\n         * @private {boolean}\r\n         */\r\n        this.useRestClient_ = false;\r\n    }\r\n    RepoManager.getInstance = function () {\r\n        if (!_staticInstance) {\r\n            _staticInstance = new RepoManager();\r\n        }\r\n        return _staticInstance;\r\n    };\r\n    // TODO(koss): Remove these functions unless used in tests?\r\n    RepoManager.prototype.interrupt = function () {\r\n        var e_1, _a, e_2, _b;\r\n        try {\r\n            for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_2 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].interrupt();\r\n                    }\r\n                }\r\n                catch (e_2_1) { e_2 = { error: e_2_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_2) throw e_2.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_1_1) { e_1 = { error: e_1_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_1) throw e_1.error; }\r\n        }\r\n    };\r\n    RepoManager.prototype.resume = function () {\r\n        var e_3, _a, e_4, _b;\r\n        try {\r\n            for (var _c = __values(Object.keys(this.repos_)), _d = _c.next(); !_d.done; _d = _c.next()) {\r\n                var appName = _d.value;\r\n                try {\r\n                    for (var _e = (e_4 = void 0, __values(Object.keys(this.repos_[appName]))), _f = _e.next(); !_f.done; _f = _e.next()) {\r\n                        var dbUrl = _f.value;\r\n                        this.repos_[appName][dbUrl].resume();\r\n                    }\r\n                }\r\n                catch (e_4_1) { e_4 = { error: e_4_1 }; }\r\n                finally {\r\n                    try {\r\n                        if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\r\n                    }\r\n                    finally { if (e_4) throw e_4.error; }\r\n                }\r\n            }\r\n        }\r\n        catch (e_3_1) { e_3 = { error: e_3_1 }; }\r\n        finally {\r\n            try {\r\n                if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\r\n            }\r\n            finally { if (e_3) throw e_3.error; }\r\n        }\r\n    };\r\n    /**\r\n     * Update an existing repo in place to point to a new host/port.\r\n     */\r\n    RepoManager.prototype.applyEmulatorSettings = function (repo, host, port) {\r\n        repo.repoInfo_ = new RepoInfo(host + \":\" + port, \r\n        /* secure= */ false, repo.repoInfo_.namespace, repo.repoInfo_.webSocketOnly, repo.repoInfo_.nodeAdmin, repo.repoInfo_.persistenceKey, repo.repoInfo_.includeNamespaceInQueryParams);\r\n        if (repo.repoInfo_.nodeAdmin) {\r\n            repo.authTokenProvider_ = new EmulatorAdminTokenProvider();\r\n        }\r\n    };\r\n    /**\r\n     * This function should only ever be called to CREATE a new database instance.\r\n     *\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Database}\r\n     */\r\n    RepoManager.prototype.databaseFromApp = function (app, authProvider, url, nodeAdmin) {\r\n        var dbUrl = url || app.options.databaseURL;\r\n        if (dbUrl === undefined) {\r\n            if (!app.options.projectId) {\r\n                fatal(\"Can't determine Firebase Database URL. Be sure to include \" +\r\n                    ' a Project ID when calling firebase.initializeApp().');\r\n            }\r\n            log('Using default host for project ', app.options.projectId);\r\n            dbUrl = app.options.projectId + \"-default-rtdb.firebaseio.com\";\r\n        }\r\n        var parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n        var repoInfo = parsedUrl.repoInfo;\r\n        var isEmulator;\r\n        var dbEmulatorHost = undefined;\r\n        if (typeof process !== 'undefined') {\r\n            dbEmulatorHost = process.env[FIREBASE_DATABASE_EMULATOR_HOST_VAR];\r\n        }\r\n        if (dbEmulatorHost) {\r\n            isEmulator = true;\r\n            dbUrl = \"http://\" + dbEmulatorHost + \"?ns=\" + repoInfo.namespace;\r\n            parsedUrl = parseRepoInfo(dbUrl, nodeAdmin);\r\n            repoInfo = parsedUrl.repoInfo;\r\n        }\r\n        else {\r\n            isEmulator = !parsedUrl.repoInfo.secure;\r\n        }\r\n        var authTokenProvider = nodeAdmin && isEmulator\r\n            ? new EmulatorAdminTokenProvider()\r\n            : new FirebaseAuthTokenProvider(app, authProvider);\r\n        validateUrl('Invalid Firebase Database URL', 1, parsedUrl);\r\n        if (!parsedUrl.path.isEmpty()) {\r\n            fatal('Database URL must point to the root of a Firebase Database ' +\r\n                '(not including a child path).');\r\n        }\r\n        var repo = this.createRepo(repoInfo, app, authTokenProvider);\r\n        return repo.database;\r\n    };\r\n    /**\r\n     * Remove the repo and make sure it is disconnected.\r\n     *\r\n     * @param {!Repo} repo\r\n     */\r\n    RepoManager.prototype.deleteRepo = function (repo) {\r\n        var appRepos = safeGet(this.repos_, repo.app.name);\r\n        // This should never happen...\r\n        if (!appRepos || safeGet(appRepos, repo.key) !== repo) {\r\n            fatal(\"Database \" + repo.app.name + \"(\" + repo.repoInfo_ + \") has already been deleted.\");\r\n        }\r\n        repo.interrupt();\r\n        delete appRepos[repo.key];\r\n    };\r\n    /**\r\n     * Ensures a repo doesn't already exist and then creates one using the\r\n     * provided app.\r\n     *\r\n     * @param {!RepoInfo} repoInfo The metadata about the Repo\r\n     * @param {!FirebaseApp} app\r\n     * @return {!Repo} The Repo object for the specified server / repoName.\r\n     */\r\n    RepoManager.prototype.createRepo = function (repoInfo, app, authTokenProvider) {\r\n        var appRepos = safeGet(this.repos_, app.name);\r\n        if (!appRepos) {\r\n            appRepos = {};\r\n            this.repos_[app.name] = appRepos;\r\n        }\r\n        var repo = safeGet(appRepos, repoInfo.toURLString());\r\n        if (repo) {\r\n            fatal('Database initialized multiple times. Please make sure the format of the database URL matches with each database() call.');\r\n        }\r\n        repo = new Repo(repoInfo, this.useRestClient_, app, authTokenProvider);\r\n        appRepos[repoInfo.toURLString()] = repo;\r\n        return repo;\r\n    };\r\n    /**\r\n     * Forces us to use ReadonlyRestClient instead of PersistentConnection for new Repos.\r\n     * @param {boolean} forceRestClient\r\n     */\r\n    RepoManager.prototype.forceRestClient = function (forceRestClient) {\r\n        this.useRestClient_ = forceRestClient;\r\n    };\r\n    return RepoManager;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Class representing a firebase database.\r\n * @implements {FirebaseService}\r\n */\r\nvar Database = /** @class */ (function () {\r\n    /**\r\n     * The constructor should not be called by users of our public API.\r\n     * @param {!Repo} repoInternal_\r\n     */\r\n    function Database(repoInternal_) {\r\n        var _this = this;\r\n        this.repoInternal_ = repoInternal_;\r\n        /** Track if the instance has been used (root or repo accessed) */\r\n        this.instanceStarted_ = false;\r\n        this.INTERNAL = {\r\n            delete: function () { return __awaiter(_this, void 0, void 0, function () {\r\n                return __generator(this, function (_a) {\r\n                    this.checkDeleted_('delete');\r\n                    RepoManager.getInstance().deleteRepo(this.repo_);\r\n                    this.repoInternal_ = null;\r\n                    this.rootInternal_ = null;\r\n                    return [2 /*return*/];\r\n                });\r\n            }); }\r\n        };\r\n        if (!(repoInternal_ instanceof Repo)) {\r\n            fatal(\"Don't call new Database() directly - please use firebase.database().\");\r\n        }\r\n    }\r\n    Object.defineProperty(Database.prototype, \"repo_\", {\r\n        get: function () {\r\n            if (!this.instanceStarted_) {\r\n                this.repoInternal_.start();\r\n                this.instanceStarted_ = true;\r\n            }\r\n            return this.repoInternal_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"root_\", {\r\n        get: function () {\r\n            if (!this.rootInternal_) {\r\n                this.rootInternal_ = new Reference(this.repo_, Path.Empty);\r\n            }\r\n            return this.rootInternal_;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Database.prototype, \"app\", {\r\n        get: function () {\r\n            return this.repo_.app;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * Modify this instance to communicate with the Realtime Database emulator.\r\n     *\r\n     * <p>Note: This method must be called before performing any other operation.\r\n     *\r\n     * @param host the emulator host (ex: localhost)\r\n     * @param port the emulator port (ex: 8080)\r\n     */\r\n    Database.prototype.useEmulator = function (host, port) {\r\n        this.checkDeleted_('useEmulator');\r\n        if (this.instanceStarted_) {\r\n            fatal('Cannot call useEmulator() after instance has already been initialized.');\r\n            return;\r\n        }\r\n        // Modify the repo to apply emulator settings\r\n        RepoManager.getInstance().applyEmulatorSettings(this.repoInternal_, host, port);\r\n    };\r\n    Database.prototype.ref = function (path) {\r\n        this.checkDeleted_('ref');\r\n        validateArgCount('database.ref', 0, 1, arguments.length);\r\n        if (path instanceof Reference) {\r\n            return this.refFromURL(path.toString());\r\n        }\r\n        return path !== undefined ? this.root_.child(path) : this.root_;\r\n    };\r\n    /**\r\n     * Returns a reference to the root or the path specified in url.\r\n     * We throw a exception if the url is not in the same domain as the\r\n     * current repo.\r\n     * @param {string} url\r\n     * @return {!Reference} Firebase reference.\r\n     */\r\n    Database.prototype.refFromURL = function (url) {\r\n        /** @const {string} */\r\n        var apiName = 'database.refFromURL';\r\n        this.checkDeleted_(apiName);\r\n        validateArgCount(apiName, 1, 1, arguments.length);\r\n        var parsedURL = parseRepoInfo(url, this.repo_.repoInfo_.nodeAdmin);\r\n        validateUrl(apiName, 1, parsedURL);\r\n        var repoInfo = parsedURL.repoInfo;\r\n        if (!repoInfo.isCustomHost() &&\r\n            repoInfo.host !== this.repo_.repoInfo_.host) {\r\n            fatal(apiName +\r\n                ': Host name does not match the current database: ' +\r\n                '(found ' +\r\n                repoInfo.host +\r\n                ' but expected ' +\r\n                this.repo_.repoInfo_.host +\r\n                ')');\r\n        }\r\n        return this.ref(parsedURL.path.toString());\r\n    };\r\n    /**\r\n     * @param {string} apiName\r\n     */\r\n    Database.prototype.checkDeleted_ = function (apiName) {\r\n        if (this.repoInternal_ === null) {\r\n            fatal('Cannot call ' + apiName + ' on a deleted database.');\r\n        }\r\n    };\r\n    // Make individual repo go offline.\r\n    Database.prototype.goOffline = function () {\r\n        validateArgCount('database.goOffline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOffline');\r\n        this.repo_.interrupt();\r\n    };\r\n    Database.prototype.goOnline = function () {\r\n        validateArgCount('database.goOnline', 0, 0, arguments.length);\r\n        this.checkDeleted_('goOnline');\r\n        this.repo_.resume();\r\n    };\r\n    Database.ServerValue = {\r\n        TIMESTAMP: {\r\n            '.sv': 'timestamp'\r\n        },\r\n        increment: function (delta) {\r\n            return {\r\n                '.sv': {\r\n                    'increment': delta\r\n                }\r\n            };\r\n        }\r\n    };\r\n    return Database;\r\n}());\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * INTERNAL methods for internal-use only (tests, etc.).\r\n *\r\n * Customers shouldn't use these or else should be aware that they could break at any time.\r\n *\r\n * @const\r\n */\r\nvar forceLongPolling = function () {\r\n    WebSocketConnection.forceDisallow();\r\n    BrowserPollConnection.forceAllow();\r\n};\r\nvar forceWebSockets = function () {\r\n    BrowserPollConnection.forceDisallow();\r\n};\r\n/* Used by App Manager */\r\nvar isWebSocketsAvailable = function () {\r\n    return WebSocketConnection['isAvailable']();\r\n};\r\nvar setSecurityDebugCallback = function (ref, callback) {\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    ref.repo.persistentConnection_.securityDebugCallback_ = callback;\r\n};\r\nvar stats = function (ref, showDelta) {\r\n    ref.repo.stats(showDelta);\r\n};\r\nvar statsIncrementCounter = function (ref, metric) {\r\n    ref.repo.statsIncrementCounter(metric);\r\n};\r\nvar dataUpdateCount = function (ref) {\r\n    return ref.repo.dataUpdateCount;\r\n};\r\nvar interceptServerData = function (ref, callback) {\r\n    return ref.repo.interceptServerData_(callback);\r\n};\r\n/**\r\n * Used by console to create a database based on the app,\r\n * passed database URL and a custom auth implementation.\r\n *\r\n * @param app A valid FirebaseApp-like object\r\n * @param url A valid Firebase databaseURL\r\n * @param version custom version e.g. firebase-admin version\r\n * @param customAuthImpl custom auth implementation\r\n */\r\nfunction initStandalone(_a) {\r\n    var app = _a.app, url = _a.url, version = _a.version, customAuthImpl = _a.customAuthImpl, namespace = _a.namespace, _b = _a.nodeAdmin, nodeAdmin = _b === void 0 ? false : _b;\r\n    setSDKVersion(version);\r\n    /**\r\n     * ComponentContainer('database-standalone') is just a placeholder that doesn't perform\r\n     * any actual function.\r\n     */\r\n    var authProvider = new Provider('auth-internal', new ComponentContainer('database-standalone'));\r\n    authProvider.setComponent(new Component('auth-internal', function () { return customAuthImpl; }, \"PRIVATE\" /* PRIVATE */));\r\n    return {\r\n        instance: RepoManager.getInstance().databaseFromApp(app, authProvider, url, nodeAdmin),\r\n        namespace: namespace\r\n    };\r\n}\n\nvar INTERNAL = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  forceLongPolling: forceLongPolling,\n  forceWebSockets: forceWebSockets,\n  isWebSocketsAvailable: isWebSocketsAvailable,\n  setSecurityDebugCallback: setSecurityDebugCallback,\n  stats: stats,\n  statsIncrementCounter: statsIncrementCounter,\n  dataUpdateCount: dataUpdateCount,\n  interceptServerData: interceptServerData,\n  initStandalone: initStandalone\n});\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar DataConnection = PersistentConnection;\r\n/**\r\n * @param {!string} pathString\r\n * @param {function(*)} onComplete\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.simpleListen = function (pathString, onComplete) {\r\n    this.sendRequest('q', { p: pathString }, onComplete);\r\n};\r\n/**\r\n * @param {*} data\r\n * @param {function(*)} onEcho\r\n */\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nPersistentConnection.prototype.echo = function (data, onEcho) {\r\n    this.sendRequest('echo', { d: data }, onEcho);\r\n};\r\n// RealTimeConnection properties that we use in tests.\r\nvar RealTimeConnection = Connection;\r\n/**\r\n * @param {function(): string} newHash\r\n * @return {function()}\r\n */\r\nvar hijackHash = function (newHash) {\r\n    var oldPut = PersistentConnection.prototype.put;\r\n    PersistentConnection.prototype.put = function (pathString, data, onComplete, hash) {\r\n        if (hash !== undefined) {\r\n            hash = newHash();\r\n        }\r\n        oldPut.call(this, pathString, data, onComplete, hash);\r\n    };\r\n    return function () {\r\n        PersistentConnection.prototype.put = oldPut;\r\n    };\r\n};\r\n/**\r\n * @type {function(new:RepoInfo, !string, boolean, !string, boolean): undefined}\r\n */\r\nvar ConnectionTarget = RepoInfo;\r\n/**\r\n * @param {!Query} query\r\n * @return {!string}\r\n */\r\nvar queryIdentifier = function (query) {\r\n    return query.queryIdentifier();\r\n};\r\n/**\r\n * Forces the RepoManager to create Repos that use ReadonlyRestClient instead of PersistentConnection.\r\n *\r\n * @param {boolean} forceRestClient\r\n */\r\nvar forceRestClient = function (forceRestClient) {\r\n    RepoManager.getInstance().forceRestClient(forceRestClient);\r\n};\n\nvar TEST_ACCESS = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  DataConnection: DataConnection,\n  RealTimeConnection: RealTimeConnection,\n  hijackHash: hijackHash,\n  ConnectionTarget: ConnectionTarget,\n  queryIdentifier: queryIdentifier,\n  forceRestClient: forceRestClient\n});\n\nvar name = \"@firebase/database\";\nvar version = \"0.8.1\";\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nvar ServerValue = Database.ServerValue;\r\nfunction registerDatabase(instance) {\r\n    // set SDK_VERSION\r\n    setSDKVersion(instance.SDK_VERSION);\r\n    // Register the Database Service with the 'firebase' namespace.\r\n    var namespace = instance.INTERNAL.registerComponent(new Component('database', function (container, url) {\r\n        /* Dependencies */\r\n        // getImmediate for FirebaseApp will always succeed\r\n        var app = container.getProvider('app').getImmediate();\r\n        var authProvider = container.getProvider('auth-internal');\r\n        return RepoManager.getInstance().databaseFromApp(app, authProvider, url);\r\n    }, \"PUBLIC\" /* PUBLIC */)\r\n        .setServiceProps(\r\n    // firebase.database namespace properties\r\n    {\r\n        Reference: Reference,\r\n        Query: Query,\r\n        Database: Database,\r\n        DataSnapshot: DataSnapshot,\r\n        enableLogging: enableLogging,\r\n        INTERNAL: INTERNAL,\r\n        ServerValue: ServerValue,\r\n        TEST_ACCESS: TEST_ACCESS\r\n    })\r\n        .setMultipleInstances(true));\r\n    instance.registerVersion(name, version);\r\n    if (isNodeSdk()) {\r\n        module.exports = namespace;\r\n    }\r\n}\r\nregisterDatabase(firebase);\n\nexport { DataSnapshot, Database, OnDisconnect, Query, Reference, ServerValue, enableLogging, registerDatabase };\n//# sourceMappingURL=index.esm.js.map\n","import { toDisplayString as _toDisplayString, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createBlock as _createBlock } from \"vue\"\n\nconst _hoisted_1 = { class: \"w-full text-center\" }\nconst _hoisted_2 = { class: \"w-full text-center\" }\nconst _hoisted_3 = { class: \"flex flex-row justify-between\" }\n\nexport function render(_ctx: any,_cache: any,$props: any,$setup: any,$data: any,$options: any) {\n  const _component_ps_label = _resolveComponent(\"ps-label\")!\n  const _component_ps_button = _resolveComponent(\"ps-button\")!\n  const _component_ps_modal = _resolveComponent(\"ps-modal\")!\n\n  return (_openBlock(), _createBlock(_component_ps_modal, {\n    ref: \"psmodal\",\n    maxWidth: \"400px\",\n    isClickOut: false,\n    theme: \" lg:px-8 px-6 py-6 lg:rounded-2xl rounded-xl\",\n    class: \"z-20\"\n  }, {\n    title: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_1, [\n        _createVNode(_component_ps_label, { class: \"font-medium text-lg lg:text-xl\" }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.title), 1)\n          ]),\n          _: 1\n        })\n      ])\n    ]),\n    body: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_2, [\n        _createVNode(_component_ps_label, { class: \"font-light text-xs lg:text-sm\" }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.message), 1)\n          ]),\n          _: 1\n        })\n      ])\n    ]),\n    footer: _withCtx(() => [\n      _createElementVNode(\"div\", _hoisted_3, [\n        _createVNode(_component_ps_button, {\n          onClick: _cache[0] || (_cache[0] = ($event: any) => (_ctx.actionClicked('no'))),\n          textSize: \"text-xxs lg:text-sm\",\n          class: \"py-3\",\n          theme: \"bg-secondary-300 dark:bg-secondaryDark-grey text-textLight dark:text-primaryDark-white\"\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.cancelButton), 1)\n          ]),\n          _: 1\n        }),\n        _createVNode(_component_ps_button, {\n          onClick: _cache[1] || (_cache[1] = ($event: any) => (_ctx.actionClicked('yes'))),\n          textSize: \"text-xxs lg:text-sm\",\n          class: \"py-3\"\n        }, {\n          default: _withCtx(() => [\n            _createTextVNode(_toDisplayString(_ctx.okButton), 1)\n          ]),\n          _: 1\n        })\n      ])\n    ]),\n    _: 1\n  }, 512))\n}","\nimport { defineComponent,ref } from 'vue';\nimport PsModal from '@/components/core/modals/PsModal.vue';\nimport PsLabel from '@/components/core/label/PsLabel.vue';\nimport PsButton from '@/components/core/buttons/PsButton.vue';\nimport { i18n } from '@/assets/locales/index';\n\nexport default defineComponent({\n    name : \"PsConfirmDialog\",\n    components : {\n        PsModal,\n        PsLabel,\n        PsButton\n    },\n    setup() {\n        const psmodal = ref();\n        const title = ref(i18n.global.t('ps_confirm_dialog__confirm'));\n        const message = ref(i18n.global.t('ps_confirm_dialog__are_you_confirm'));\n        const okButton = ref(i18n.global.t('ps_confirm_dialog__yes'));\n        const cancelButton = ref(i18n.global.t('ps_confirm_dialog__no'));\n        let okClicked: Function;\n        let cancelClicked: Function;\n\n        function actionClicked(status) {\n            if(status == 'yes') {\n                okClicked();\n            }else {\n                cancelClicked();\n            }\n            psmodal.value.toggle(false);\n        }\n\n        function openModal(\n                titleString, \n                messageString, \n                okString,\n                cancelString,\n                okClickedAction: Function, \n                cancelClickedAction: Function) {\n            title.value = titleString;\n            message.value = messageString.toString();\n            okButton.value = okString;\n            cancelButton.value = cancelString;\n            psmodal.value.toggle(true);\n            okClicked = okClickedAction;\n            cancelClicked= cancelClickedAction;        \n        }\n\n        return {\n            psmodal,\n            title,\n            message,\n            openModal,\n            actionClicked,\n            okButton,\n            cancelButton\n        }\n    },\n})\n","import { render } from \"./PsConfirmDialog.vue?vue&type=template&id=4170b96d&ts=true\"\nimport script from \"./PsConfirmDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./PsConfirmDialog.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PsErrorDialog.vue?vue&type=template&id=0c400b22&ts=true\"\nimport script from \"./PsErrorDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./PsErrorDialog.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PsSuccessDialog.vue?vue&type=template&id=61317d5b&ts=true\"\nimport script from \"./PsSuccessDialog.vue?vue&type=script&lang=ts\"\nexport * from \"./PsSuccessDialog.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PsInput.vue?vue&type=template&id=3368047b&ts=true\"\nimport script from \"./PsInput.vue?vue&type=script&lang=ts\"\nexport * from \"./PsInput.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PsLabelCaption2.vue?vue&type=template&id=24e22c8e&ts=true\"\nimport script from \"./PsLabelCaption2.vue?vue&type=script&lang=ts\"\nexport * from \"./PsLabelCaption2.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PsImageModal.vue?vue&type=template&id=a55c9a74&scoped=true&ts=true\"\nimport script from \"./PsImageModal.vue?vue&type=script&lang=ts\"\nexport * from \"./PsImageModal.vue?vue&type=script&lang=ts\"\n\nimport \"./PsImageModal.vue?vue&type=style&index=0&id=a55c9a74&scoped=true&lang=css\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render],['__scopeId',\"data-v-a55c9a74\"]])\n\nexport default __exports__","import { render } from \"./PsTextarea.vue?vue&type=template&id=42ff88a4&ts=true\"\nimport script from \"./PsTextarea.vue?vue&type=script&lang=ts\"\nexport * from \"./PsTextarea.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./PsContentContainer.vue?vue&type=template&id=cd25205a&ts=true\"\nimport script from \"./PsContentContainer.vue?vue&type=script&lang=ts\"\nexport * from \"./PsContentContainer.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default class MarkAsSoldParameterHolder {\n\n    itemId: string = '';\n    buyerUserId: string = '';\n    sellerUserId: string = '';\n\n\n\n    MarkAsSoldParameterHolder() {\n        this.itemId = '';\n        this.buyerUserId = '';\n        this.sellerUserId = '';\n\n    }\n\n    toMap(): {} {\n        const map = {};\n        map['item_id'] = this.itemId;\n        map['buyer_user_id'] = this.buyerUserId;\n        map['seller_user_id'] = this.sellerUserId;\n\n        return map;\n    }\n}","\nimport { reactive, provide, inject, ref } from 'vue';\nimport { PsProvider } from '../core/PsProvider';\nimport PsApiService from '@/api/PsApiService';\nimport PsResource from '@/api/common/PsResource';\nimport ChatHistory from '@/object/ChatHistory';\nimport UserUnReadMessageParameterHolder from '@/object/holder/UserUnReadMessageParameterHolder';\nimport MarkAsSoldParameterHolder from '@/object/holder/MarkAsSoldParameterHolder';\nimport GetChatHistoryParameterHolder from '@/object/holder/GetChatHistoryParameterHolder';\nimport SyncChatHistoryParameterHolder from '@/object/holder/SyncChatHistoryParameterHolder';\n\n\nexport class GetChatHistoryProvider extends PsProvider {\n\n    chatHistory = reactive<PsResource<ChatHistory>>(new PsResource());\n\n    loading = reactive({\n        value: false\n    });\n\n    limit: Number = 30;\n    offset: Number = 0;\n\n    private updateChatHistory(responseData: PsResource<ChatHistory>) {\n\n        this.chatHistory = responseData;\n\n    }\n\n    async loadChatHistory(holder: GetChatHistoryParameterHolder) {\n\n        this.loading.value = true;\n\n        const returnData = await PsApiService.getChatHistory<ChatHistory>(new ChatHistory(), holder.toMap());\n        \n        this.updateChatHistory(returnData);\n\n        this.loading.value = false;\n\n    }\n\n    async postChatHistory( itemId, buyerUserId, sellerUserId, type ,isOnline, message) {\n        const holder = new SyncChatHistoryParameterHolder();\n        holder.itemId = itemId;\n        holder.buyerUserId = buyerUserId;\n        holder.sellerUserId = sellerUserId;\n        holder.type = type;\n        holder.isUserOnline = isOnline;\n        holder.message = message;\n\n        const data = await PsApiService.syncChatHistory<ChatHistory>(new ChatHistory(), holder.toMap());\n       \n    }\n\n\n    async postAcceptedOffer(loginUserId: string,holder: UserUnReadMessageParameterHolder) {\n\n        this.loading.value = true;\n\n        await PsApiService.acceptedOffer<ChatHistory>(new ChatHistory(),loginUserId, holder.toMap());\n\n        this.loading.value = false;\n\n    }\n\n\n    async postRejectedOffer(loginUserId: string,holder: UserUnReadMessageParameterHolder) {\n\n        this.loading.value = true;\n\n        await PsApiService.rejectedOffer<ChatHistory>(new ChatHistory(),loginUserId, holder.toMap());\n\n        this.loading.value = false;\n\n    }\n\n    async makeMarkAsSold(loginUserId: string, itemId: string, buyerUserId: string, sellerUserId: string) : Promise<PsResource<ChatHistory>>{\n\n        const markAsSoldParameterHolder = new MarkAsSoldParameterHolder(); \n        markAsSoldParameterHolder.itemId = itemId.toString();\n        markAsSoldParameterHolder.buyerUserId = buyerUserId.toString();\n        markAsSoldParameterHolder.sellerUserId = sellerUserId.toString();\n\n        this.loading.value = true;\n\n        const returnData = await PsApiService.makeMarkAsSold<ChatHistory>(new ChatHistory(),loginUserId, markAsSoldParameterHolder.toMap());\n\n        this.loading.value = false;\n\n        return returnData;\n\n    }\n\n}\n\nexport const getChatHistoryProviderSymbol = Symbol('GetChatHistoryProvider')\nexport const createGetChatHistoryProviderState = () => {\n    return reactive(new GetChatHistoryProvider())\n}\n\nexport const useGetChatHistoryProviderState = () => inject(getChatHistoryProviderSymbol) as GetChatHistoryProvider\nexport const provideGetChatHistoryProviderState = () => provide(\n    getChatHistoryProviderSymbol,\n    createGetChatHistoryProviderState()\n)","import { render } from \"./ChatImageDetail.vue?vue&type=template&id=17cf2d94&ts=true\"\nimport script from \"./ChatImageDetail.vue?vue&type=script&lang=ts\"\nexport * from \"./ChatImageDetail.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { render } from \"./OfferModal.vue?vue&type=template&id=b959dbce&ts=true\"\nimport script from \"./OfferModal.vue?vue&type=script&lang=ts\"\nexport * from \"./OfferModal.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","<template>\n    <div class=\"flex items-center\">\n        <div @click=\"rate(star)\" v-for=\"star in maxStars\" :class=\"{ 'active': star <= stars }\" :key=\"star\" class=\"star\">  \n            <font-awesome-icon :icon=\"['fas', 'star']\" v-if=\"star <= stars\" class=\"text-primary-500 dark:text-primaryDark-accent \" size=\"lg\" />\n            <font-awesome-icon :icon=\"['far', 'star']\" v-else class=\"text-primary-500 dark:text-primaryDark-accent  \" size=\"lg\" />\n        </div>\n    </div>\n</template>\n\n<script>\nimport { library } from '@fortawesome/fontawesome-svg-core';\nimport { faStar as fasStar } from '@fortawesome/free-regular-svg-icons';\nimport { faStar as farSrar } from '@fortawesome/free-solid-svg-icons';\nlibrary.add(fasStar, farSrar)\n\nexport default {\n    name: 'RatingSelected',\n    components : {\n       \n    },\n    props: {\n        'grade': {\n            type : Number,\n            default : 0\n        },  \n        'maxStars': {\n            type : Number,\n            default : 0\n        }, \n        'hasCounter': {\n            type : Boolean,\n            default : true\n        }, \n    },\n    data() {\n        return {\n            stars: this.grade\n        }\n    },\n    methods: {\n        rate(star) {\n            if (typeof star === 'number' && star <= this.maxStars && star >= 0) {\n                this.stars = this.stars === star ? star - 1 : star;\n            }\n        },\n        getRating() {\n            return this.stars;\n        }\n    },\n}\n</script>","import { render } from \"./RatingSelected.vue?vue&type=template&id=7624e789\"\nimport script from \"./RatingSelected.vue?vue&type=script&lang=js\"\nexport * from \"./RatingSelected.vue?vue&type=script&lang=js\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","import { reactive, provide, inject } from 'vue';\nimport { PsProvider } from '../core/PsProvider';\nimport PsApiService from '@/api/PsApiService';\nimport PsResource from '@/api/common/PsResource';\nimport ApiStatus from '@/object/ApiStatus';\nimport Rating from '@/object/Rating';\nimport RatingHolder from '@/object/holder/RatingHolder';\n\nexport class RatingProvider extends PsProvider {\n\n    rating = reactive<PsResource<Rating>>(new PsResource());\n\n    loading = reactive({\n        value: false\n    });\n\n    limit: Number = 10;\n    offset: Number = 0;\n\n    id: string = \"\";\n\n \n\n    async postRating(holder:RatingHolder): Promise<PsResource<ApiStatus>> {\n\n        this.loading.value = true;\n\n        const status = await PsApiService.postRating<ApiStatus>(new ApiStatus(),holder.toMap());\n        \n        this.loading.value = false;\n        return status;\n\n\n    }\n\n}\n\nexport const ratingProvider = Symbol('RatingProvider')\nexport const createRatingProviderState = () => {\n    return reactive(new RatingProvider())\n}\n\nexport const useRatingProviderState = () => inject(ratingProvider) as RatingProvider\nexport const provideRatingProviderState = () => provide(\n    ratingProvider,\n    createRatingProviderState()\n)","export default class RatingHolder {\n\n    fromUserId: string = '';\n    toUserId: string = '';\n    title: string = '';\n    description: string = '';\n    rating: string = '';\n\n\n    RatingHolder() {\n        this.fromUserId = '';\n        this.toUserId = '';\n        this.title = '';\n        this.description = '';\n        this.rating = '';\n\n    }\n\n    toMap(): {} {\n        const map = {};\n        map['from_user_id'] = this.fromUserId;\n        map['to_user_id'] = this.toUserId;\n        map['title'] = this.title;\n        map['description'] = this.description;\n        map['rating'] = this.rating;\n\n        return map;\n    }\n}","import { render } from \"./ReviewModal.vue?vue&type=template&id=36496264&ts=true\"\nimport script from \"./ReviewModal.vue?vue&type=script&lang=ts\"\nexport * from \"./ReviewModal.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","export default class GetChatHistoryParameterHolder {\n\n    itemId: string = '';\n    buyerUserId: string = '';\n    sellerUserId: string = '';\n\n\n\n    GetChatHistoryParameterHolder() {\n        this.itemId = '';\n        this.buyerUserId = '';\n        this.sellerUserId = '';\n\n    }\n\n    toMap(): {} {\n        const map = {};\n        map['item_id'] = this.itemId;\n        map['buyer_user_id'] = this.buyerUserId;\n        map['seller_user_id'] = this.sellerUserId;\n\n        return map;\n    }\n}","import PsConst from \"../constant/ps_constants\";\nexport default class MakeOfferParameterHolder {\n\n    itemId: string = '';\n    buyerUserId: string = '';\n    sellerUserId: string = '';\n    negoPrice: string = '';\n    type: string = '';\n    isUserOnline:string = '';\n    message: string = '';\n\n\n\n    MakeOfferParameterHolder() {\n        this.itemId = '';\n        this.buyerUserId = '';\n        this.sellerUserId = '';\n        this.negoPrice = '';\n        this.type =  PsConst.CHAT_TO_SELLER;\n        this.isUserOnline = '';\n        this.message = '';\n\n    }\n\n    AcceptOfferParameterHolder() {\n        this.itemId = '';\n        this.buyerUserId = '';\n        this.sellerUserId = '';\n        this.negoPrice = '';\n        this.type =  PsConst.CHAT_TO_BUYER;\n        this.isUserOnline = '';\n        this.message = '';\n\n    }\n\n    toMap(): {} {\n        const map = {};\n        map['item_id'] = this.itemId;\n        map['buyer_user_id'] = this.buyerUserId;\n        map['seller_user_id'] = this.sellerUserId;\n        map['nego_price'] = this.negoPrice;\n        map['type'] = this.type;\n        map['is_user_online'] = this.isUserOnline;\n        map['message'] = this.message;\n\n        return map;\n    }\n}","import PsConst from '@/object/constant/ps_constants';\n\nexport default class ChatPrameterHolder {\n\n\n    addedDateTimeStamp: Number = 0;\n    id: string = '';\n    isSold: Boolean = false;\n    isUserBought: Boolean = false;\n    itemId: string = '';\n    message: string = '';\n    offerStatus: Number = 0;\n    sendByUserId: string = '';\n    sessionId: string = '';\n    type: Number = 0;\n\n    ChatParameterHolder(){\n        this.addedDateTimeStamp = Math.floor(Date.now());\n        this.id = '';\n        this.isSold = false;\n        this.isUserBought = false;\n        this.itemId = '';\n        this.message = 'hi';\n        this.offerStatus = PsConst.CHAT_STATUS_NULL;\n        this.sendByUserId = '';\n        this.sessionId = '';\n        this.type = PsConst.CHAT_TYPE_TEXT;\n\n        return this;\n\n\n    }\n    ChatAcceptParameterHolder(): ChatPrameterHolder{\n        this.addedDateTimeStamp = Math.floor(Date.now());\n        this.id = '';\n        this.isSold = false;\n        this.isUserBought = false;\n        this.itemId = '';\n        this.message = '';\n        this.offerStatus = PsConst.CHAT_STATUS_ACCEPT;\n        this.sendByUserId = '';\n        this.sessionId = '';\n        this.type = PsConst.CHAT_TYPE_ACCEPT;\n        return this;\n\n\n    }\n\n    toMap(): {} {\n        const map = {};\n        map['item_id'] = this.itemId;\n        map['send_by_user_id'] = this.sendByUserId;\n        map['message'] = this.message;\n        map['type'] = this.type;\n\n\n\n        return map;\n    }\n}","\n\nexport default class ResetUnReadMessageHolder {\n\n    itemId: string = '';\n    buyerUserId: string = '';\n    sellerUserId: string = '';\n    type: string = '';\n\n\n    ResetUnReadMessageHolder() {\n        this.itemId = '';\n        this.buyerUserId = '';\n        this.sellerUserId = '';\n        this.type = '';\n\n    }\n\n\n    toMap(): {} {\n        const map = {};\n        map['item_id'] = this.itemId;\n        map['buyer_user_id'] = this.buyerUserId;\n        map['seller_user_id'] = this.sellerUserId;\n        map['type'] = this.type;\n        return map;\n    }\n}","import { PsObject } from \"./core/PsObject\";\n\nexport default class ChatMessage extends PsObject<ChatMessage>{\n\n    id : string = '';\n    itemId : string = '';\n    sessionId  : string = '';\n    key : string = '';\n    message : string = '';\n    type : Number = 0;\n    sendByUserId : string = '';\n    offerStatus : Number = 0;\n    addedDate : string = '';\n    isSold : Boolean = false;\n    isUserBought : Boolean = false;\n    dateTimeString : string = '';\n    dateString : string = '';\n    timeString : string = '';\n\n\n    init(\n        id : string,\n        itemId : string,\n        sessionId  : string,\n        key : string,\n        message : string,\n        type : Number,\n        sendByUserId : string,\n        offerStatus : Number,\n        addedDate : string,\n        isSold : Boolean,\n        isUserBought : Boolean,\n        dateTimeString : string,\n        dateString : string,\n        timeString : string\n        \n    ) {\n        this.id = id;\n        this.itemId = itemId;\n        this.sessionId = sessionId;\n        this.key = key;\n        this.message = message;\n        this.type = type;\n        this.sendByUserId = sendByUserId;\n        this.offerStatus = offerStatus;\n        this.addedDate = addedDate;\n        this.isSold = isSold;\n        this.isUserBought = isUserBought;\n        this.dateTimeString = dateTimeString;\n        this.dateString = dateString;\n        this.timeString = timeString;\n        return this;\n\n    }\n\n    getPrimaryKey(): string {\n        return this.itemId;\n    }\n\n    fromMap(obj : any) : ChatMessage {\n        return new ChatMessage().init(\n            obj.id,\n            obj.itemId,\n            obj.sessionId,\n            obj.key,\n            obj.message,\n            obj.type,\n            obj.sendByUserId,\n            obj.offerStatus,\n            obj.addedDate,\n            obj.isSold,\n            obj.isUserBought,\n            obj.dateTimeString,\n            obj.dateString,\n            obj.timeString\n         \n        );\n    }\n\n    fromMapList(objList : any[] ) : ChatMessage[] {\n        const chat : ChatMessage[] = [];\n        for(const obj in objList) {\n            if(obj != null) {\n                chat.push(this.fromMap(obj));\n            }\n        }\n\n        return chat;\n    }\n\n    toMap(object: ChatMessage) : any {\n        const map = {};\n   \n        map['id'] = object.id;\n        map['itemId'] = object.itemId;\n        map['sessionId'] = object.sessionId;\n        map['key'] = object.key;\n        map['message'] = object.message;\n        map['type'] = object.type;\n        map['sendByUserId'] = object.sendByUserId;\n        map['offerStatus'] = object.offerStatus;\n        map['addedDate'] = object.addedDate;\n        map['isSold'] = object.isSold;\n        map['isUserBought'] = object.isUserBought;\n        map['dateTimeString'] = object.dateTimeString;\n        map['dateString'] = object.dateString;\n        map['timeString'] = object.timeString;\n\n        return map;\n    }\n\n    toMapList(objectList: ChatMessage[]) : any[] {\n        const mapList : any[] = [];\n        for(let i = 0; i < objectList.length; i++) {\n            if(objectList[i] != null) {\n                mapList.push(this.toMap(objectList[i]));\n            }\n        }\n\n        return mapList;\n    }\n}\n","export default class IsUserBoughtParameterHolder {\n\n    itemId: string = '';\n    buyerUserId: string = '';\n    sellerUserId: string = '';\n    isUserOnline: string = '';\n\n\n\n    IsUserBoughtParameterHolder() {\n        this.itemId = '';\n        this.buyerUserId = '';\n        this.sellerUserId = '';\n        this.isUserOnline='';\n\n    }\n\n    toMap(): {} {\n        const map = {};\n        map['item_id'] = this.itemId;\n        map['buyer_user_id'] = this.buyerUserId;\n        map['seller_user_id'] = this.sellerUserId;\n        map['is_user_online'] = this.isUserOnline;\n        return map;\n    }\n}","import { render } from \"./Chat.vue?vue&type=template&id=76d17cc4&ts=true\"\nimport script from \"./Chat.vue?vue&type=script&lang=ts\"\nexport * from \"./Chat.vue?vue&type=script&lang=ts\"\n\nimport exportComponent from \"/home/mmmh/Documents/hemamWeb/node_modules/@vue/cli-service/node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['render',render]])\n\nexport default __exports__","/*! Javascript-number-formatter v2.0.9 */\n!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):(e=e||self).format=t()}(this,function(){\"use strict\";const e=/[0-9\\-+#]/,t=/[^\\d\\-+#]/g;function n(t){return t.search(e)}return(e,i,r={})=>{if(!e||isNaN(Number(i)))return i;const s=function(e=\"#.##\"){const i={},r=e.length,s=n(e);i.prefix=s>0?e.substring(0,s):\"\";const a=n(e.split(\"\").reverse().join(\"\")),o=r-a,u=e.substring(o,o+1),l=o+(\".\"===u||\",\"===u?1:0);i.suffix=a>0?e.substring(l,r):\"\",i.mask=e.substring(s,l),i.maskHasNegativeSign=\"-\"===i.mask.charAt(0),i.maskHasPositiveSign=\"+\"===i.mask.charAt(0);let g=i.mask.match(t);return i.decimal=g&&g[g.length-1]||\".\",i.separator=g&&g[1]&&g[0]||\",\",g=i.mask.split(i.decimal),i.integer=g[0],i.fraction=g[1],i}(e),a=function(e,t,n){let i=!1;const r={value:e};e<0&&(i=!0,r.value=-r.value),r.sign=i?\"-\":\"\",r.value=Number(r.value).toFixed(t.fraction&&t.fraction.length),r.value=Number(r.value).toString();const s=t.fraction&&t.fraction.lastIndexOf(\"0\");let[a=\"0\",o=\"\"]=r.value.split(\".\");return(!o||o&&o.length<=s)&&(o=s<0?\"\":Number(\"0.\"+o).toFixed(s+1).replace(\"0.\",\"\")),r.integer=a,r.fraction=o,function(e,t){e.result=\"\";const n=t.integer.split(t.separator),i=n.join(\"\"),r=i&&i.indexOf(\"0\");if(r>-1)for(;e.integer.length<i.length-r;)e.integer=\"0\"+e.integer;else 0===Number(e.integer)&&(e.integer=\"\");const s=n[1]&&n[n.length-1].length;if(s){const n=e.integer.length,i=n%s;for(let r=0;r<n;r++)e.result+=e.integer.charAt(r),!((r-i+1)%s)&&r<n-s&&(e.result+=t.separator)}else e.result=e.integer;e.result+=t.fraction&&e.fraction?t.decimal+e.fraction:\"\"}(r,t),\"0\"!==r.result&&\"\"!==r.result||(i=!1,r.sign=\"\"),!i&&t.maskHasPositiveSign?r.sign=\"+\":i&&t.maskHasPositiveSign?r.sign=\"-\":i&&(r.sign=n&&n.enforceMaskSign&&!t.maskHasNegativeSign?\"\":\"-\"),r}(i,s,r);return s.prefix+a.sign+a.result+s.suffix}});\n","\nimport { reactive, provide, inject, ref } from 'vue';\nimport { PsProvider } from '../core/PsProvider';\nimport PsApiService from '@/api/PsApiService';\nimport PsResource from '@/api/common/PsResource';\nimport DefaultPhoto from '@/object/DefaultPhoto';\nimport ApiStatus from '@/object/ApiStatus';\nimport PsUtils from '@/utils/PsUtils';\nimport PsConfig from  '@/config/PsConfig';\nexport class GalleryProvider extends PsProvider {\n    \n    galleryList  = reactive<PsResource<DefaultPhoto[]>>(new PsResource());\n\n    loading = reactive({\n        value : false\n    });\n\n    isNoMoreRecord = reactive<Boolean>(false);\n   \n    limit: Number = 30;\n    offset: Number = 0;\n\n    private updateGalleryList(responseData : PsResource<DefaultPhoto[]>) {\n        \n        if(this.galleryList != null \n            && this.galleryList.data != null \n            && this.galleryList.data.length > 0\n            && this.offset != 0) {\n\n            if(responseData.data != null && responseData.data.length > 0) {\n                this.galleryList.data.push(...responseData.data);\n            }else {\n                this.isNoMoreRecord = true;\n            }\n\n            this.galleryList.code = responseData.code;\n            this.galleryList.status = responseData.status;\n            this.galleryList.message = responseData.message;            \n\n        }else {\n            \n            this.galleryList = responseData;\n            \n            \n        }\n\n        if(this.galleryList != null && this.galleryList.data != null ) {\n            this.offset = this.galleryList.data.length;\n        }\n\n    }\n\n    async loadGalleryList(isEnableVideoSetting : string, imgParentId : string, imgType : string, videoThumbnail : DefaultPhoto) {\n\n        this.loading.value = true;\n        const responseData = await PsApiService.getImageList<DefaultPhoto>(new DefaultPhoto(), imgParentId, imgType, this.limit, this.offset);\n        \n        \n        if( isEnableVideoSetting == '1' && videoThumbnail != null && videoThumbnail != undefined &&  videoThumbnail.imgId != '' && videoThumbnail.imgId != undefined ) {\n            responseData.data.unshift(videoThumbnail);\n        }\n        \n\n        PsUtils.log(responseData);\n        \n        this.updateGalleryList(responseData);\n\n        this.loading.value = false;\n\n        return responseData;\n        \n    }\n\n    async resetGalleryList(imgParentId : string, imgType : string) {\n\n        this.offset = 0;\n\n        this.loading.value = true;\n        \n        const responseData = await PsApiService.getImageList<DefaultPhoto>(new DefaultPhoto(), imgParentId, imgType, this.limit, this.offset);\n        \n        this.updateGalleryList(responseData);\n    }\n\n    async deleteImage( imageId: string, loginUserId :string) {\n\n        this.loading.value = true;\n\n        const map = {};\n\n        map['img_id'] = imageId;\n        \n        const responseData = await PsApiService.deleteImage<ApiStatus>(new ApiStatus(), this.limit, this.offset, loginUserId, map);\n        \n        this.loading.value = false;\n        return responseData;\n        \n        \n    }\n    async deleteVideo( imageId: string, loginUserId :string) {\n\n        this.loading.value = true;\n\n        const map = {};\n\n        map['img_id'] = imageId;\n        \n        const responseData = await PsApiService.deleteVideo<ApiStatus>(new ApiStatus(), this.limit, this.offset, loginUserId, map);\n        \n        this.loading.value = false;\n        return responseData;\n        \n        \n    }\n\n    async postChatImageUpload(senderId : string, \n                                sellerUserId : string, \n                                buyerUserId : string, \n                                itemId : string, \n                                type : string, \n                                imageFile : File) {\n\n        this.loading.value = true;\n\n        const returnData = await PsApiService.postChatImageUpload<DefaultPhoto>(new DefaultPhoto(), senderId, sellerUserId, buyerUserId, itemId, type, imageFile);\n        \n        this.loading.value = false;\n\n        return returnData;\n\n    }\n\n    \n    \n}\n\nexport const galleryProviderSymbol = Symbol('GalleryProvider')\nexport const createGalleryProviderState = () => {\n  return reactive(new GalleryProvider())\n}\n\nexport const useGalleryProviderState = () => inject(galleryProviderSymbol) as GalleryProvider\nexport const provideGalleryProviderState = () => provide(\n    galleryProviderSymbol,\n    createGalleryProviderState()\n)","\nimport { PsObject } from \"@/object/core/PsObject\";\nimport Product from \"./Product\";\nimport User from \"./User\";\n\nexport default class Offer extends PsObject<Offer> {\n\n    id : string = '';\n    itemId : string = '';\n    buyerUserId : string = '';\n    sellerUserId : string = '';\n    negoPrice : string = '';\n    buyerUnreadCount : string = '';\n    sellerUnreadCount : string = '';\n    isAccept : string = '';\n    addedDate : string = '';\n    isOffer : string = '';\n    // offerStatus : string = '';\n    offerAmount : string = '';\n    addedDateStr : string = '';\n    item : Product = new Product();\n    buyer   : User = new User();\n    seller   : User = new User();\n    \n\n\n    init(\n\n        id : string,\n        itemId : string,\n        buyerUserId : string,\n        sellerUserId : string,\n        negoPrice : string,\n        buyerUnreadCount : string,\n        sellerUnreadCount : string,\n        isAccept : string,\n        addedDate : string,\n        isOffer : string,\n        // offerStatus : string,\n        offerAmount : string,\n        addedDateStr : string,    \n        item: Product,\n        buyer: User,\n        seller: User\n        \n\n    ) {\n        this.id = id;\n        this.itemId = itemId;\n        this.buyerUserId = buyerUserId;\n        this.sellerUserId = sellerUserId;\n        this.negoPrice = negoPrice;\n        this.buyerUnreadCount = buyerUnreadCount;\n        this.sellerUnreadCount = sellerUnreadCount;\n        this.isAccept = isAccept;\n        this.addedDate = addedDate;\n        this.isOffer = isOffer;\n        // this.offerStatus = offerStatus;\n        this.offerAmount = offerAmount;\n        this.addedDateStr = addedDateStr;\n        this.item = item;\n        this.buyer =buyer;\n        this.seller=seller;\n\n        \n\n        return this;\n\n    }\n\n    getPrimaryKey(): string {\n        return this.id;\n    }\n\n    toMap(object: Offer): any {\n        const map = {};\n\n        map['id'] = object.id;\n        map['item_id'] = object.itemId;\n        map['buyer_user_id'] = object.buyerUserId;\n        map['seller_user_id'] = object.sellerUserId;\n        map['nego_price'] = object.negoPrice;\n        map['buyer_unread_count'] = object.buyerUnreadCount;\n        map['seller_unread_count'] = object.sellerUnreadCount;\n        map['is_accept'] = object.isAccept;\n        map['added_date'] = object.addedDate;\n        map['is_offer'] = object.isOffer;\n        // map['offer_status'] = object.offerStatus;\n        map['offer_amount'] = object.offerAmount;\n        map['added_date_str'] = object.addedDateStr;\n        map['item'] = new Product().toMap(object.item);\n        map['buyer'] = new User().toMap(object.buyer);\n        map['seller'] = new User().toMap(object.seller);\n\n\n        return map;\n    }\n\n    toMapList(objectList: Offer[]): any[] {\n        const mapList: any[] = [];\n        for (let i = 0; i < objectList.length; i++) {\n            if (objectList[i] != null) {\n                mapList.push(this.toMap(objectList[i]));\n            }\n        }\n\n        return mapList;\n    }\n\n    fromMap(obj: any) {\n        return new Offer().init(\n\n            obj.id,\n            obj.item_id,\n            obj.buyer_user_id,\n            obj.seller_user_id,\n            obj.nego_price,\n            obj.buyer_unread_count,\n            obj.seller_unread_count,\n            obj.is_accept,\n            obj.added_date,\n            obj.is_offer,\n            // obj.offer_status,\n            obj.offer_amount,\n            obj.added_date_str,\n            new Product().fromMap(obj.item),\n            new User().fromMap(obj.buyer),\n            new User().fromMap(obj.seller),\n            \n        );\n    }\n\n    fromMapList(objList: any[]): Offer[] {\n        const offerList: Offer[] = [];\n        for (const obj in objList) {\n            if (obj != null) {\n                offerList.push(this.fromMap(obj));\n            }\n        }\n\n        return offerList;\n    }\n}\n","\nimport { reactive, provide, inject, ref } from 'vue';\nimport { PsProvider } from '../core/PsProvider';\nimport PsApiService from '@/api/PsApiService';\nimport PsResource from '@/api/common/PsResource';\nimport Offer from '@/object/Offer';\nimport ApiStatus from '@/object/ApiStatus';\nimport MakeOfferParameterHolder from '@/object/holder/MakeOfferParameterHolder';\nimport IsUserBoughtParameterHolder from '@/object/holder/IsUserBoughtParameterHolder';\nimport OfferParameterHolder from '@/object/holder/OfferParameterHolder';\nimport MarkSoldOutItemParameterHolder from '@/object/holder/MarkSoldOutItemParameterHolder'\n\nexport class OfferProvider extends PsProvider {\n\n    offerList = reactive<PsResource<Offer[]>>(new PsResource());\n    loading = reactive({\n        value: false\n    });\n    isNoMoreRecord = reactive<Boolean>(false);\n\n    limit: Number = 30;\n    offset: Number = 0;\n\n    async makeOffer (loginUserId, holder: MakeOfferParameterHolder){\n        this.loading.value = true;\n\n        \n        const returnData = await PsApiService.makeOffer<Offer>(new Offer(),loginUserId, holder.toMap());\n\n        this.loading.value = false;\n        return returnData;\n    }\n    async acceptOffer (loginUserId, holder: MakeOfferParameterHolder){\n        this.loading.value = true;\n\n        \n        const returnData = await PsApiService.acceptedOffer<Offer>(new Offer(),loginUserId, holder.toMap());\n\n        this.loading.value = false;\n        return returnData;\n    }\n    async isUserBought (loginUserId, holder: IsUserBoughtParameterHolder){\n        this.loading.value = true;\n        \n        const returnData = await PsApiService.isUsetBought<ApiStatus>(new ApiStatus(),loginUserId, holder.toMap());\n\n        this.loading.value = false;\n        return returnData;\n    }\n    async markAsSold (loginUserId, holder: IsUserBoughtParameterHolder){\n        this.loading.value = true;\n        \n        const returnData = await PsApiService.makeMarkAsSold<ApiStatus>(new ApiStatus(),loginUserId, holder.toMap());\n\n        this.loading.value = false;\n        return returnData;\n    }\n    async markAsSoldFromDetail (loginUserId, holder: MarkSoldOutItemParameterHolder){\n\n        console.log(loginUserId);\n        this.loading.value = true;\n        \n        const returnData = await PsApiService.markSoldOutItem<ApiStatus>(new ApiStatus(),loginUserId, holder.toMap());\n\n        this.loading.value = false;\n        return returnData;\n    }\n\n    private updateOfferList(responseData: PsResource<Offer[]>) {\n\n        if (this.offerList != null\n            && this.offerList.data != null\n            && this.offerList.data.length > 0\n            && this.offset != 0) {\n\n            if (responseData.data != null && responseData.data.length > 0) {\n                this.offerList.data.push(...responseData.data);\n            }else {\n                this.isNoMoreRecord = true;\n            }\n\n            this.offerList.code = responseData.code;\n            this.offerList.status = responseData.status;\n            this.offerList.message = responseData.message;\n\n        } else {\n\n            this.offerList = responseData;\n\n\n        }\n\n        if (this.offerList != null && this.offerList.data != null) {\n            this.offset = this.offerList.data.length;\n        }\n\n    }\n\n    async loadOfferList(holder: OfferParameterHolder) {\n\n        this.loading.value = true;\n\n        const responseData = await PsApiService.getOfferList<Offer>(new Offer(), holder.toMap());\n\n        this.updateOfferList(responseData);\n\n        this.loading.value = false;\n\n    }\n\n    async resetOfferList(holder: OfferParameterHolder) {\n\n        this.offset = 0;\n\n        this.loading.value = true;\n\n        const responseData = await PsApiService.getOfferList<Offer>(new Offer(), holder.toMap());\n\n        this.updateOfferList(responseData);\n\n        this.loading.value = false;\n\n    }\n\n}\n\nexport const offerProviderSymbol = Symbol('OfferProvider')\nexport const createOfferProviderState = () => {\n    return reactive(new OfferProvider())\n}\n\nexport const useOfferProviderState = () => inject(offerProviderSymbol) as OfferProvider\nexport const provideOfferProviderState = () => provide(\n    offerProviderSymbol,\n    createOfferProviderState()\n)"],"names":["DOMStorageWrapper","domStorage_","this","prefix_","prototype","set","key","value","removeItem","prefixedName_","setItem","get","storedVal","getItem","remove","name","toString","MemoryStorage","cache_","isInMemoryStorage","createStoragefor","domStorageName","window","domStorage","e","PersistentStorage","SessionStorage","logClient","LUIDGenerator","id","sha1","str","utf8Bytes","update","sha1Bytes","digest","buildLogMessage_","varArgs","_i","arguments","length","message","i","arg","Array","isArray","apply","logger","firstLog_","enableLogging","logger_","persistent","logLevel","log","bind","logWrapper","prefix","error","fatal","Error","warn","warnIfPageIsSecure","location","protocol","indexOf","isInvalidJSONNumber","data","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","executeWhenDOMReady","fn","document","readyState","called_1","wrappedFn_1","body","setTimeout","Math","floor","addEventListener","attachEvent","MIN_NAME","MAX_NAME","nameCompare","a","b","aAsInt","tryParseInt","bAsInt","stringCompare","requireKey","obj","ObjectToUniqueKey","keys","k","push","sort","splitStringBySize","segsize","len","dataSegs","c","substring","each","hasOwnProperty","doubleToIEEE754String","v","s","f","ln","ebits","fbits","bias","Infinity","abs","pow","min","LN2","round","bits","reverse","join","hexByteString","hexByte","parseInt","substr","toLowerCase","isChromeExtensionContentScript","test","href","isWindowsStoreApp","Windows","UI","errorForServerCode","code","query","reason","path","toUpperCase","INTEGER_REGEXP_","RegExp","intVal","exceptionGuard","stack","beingCrawled","userAgent","search","setTimeoutNonBlocking","time","timeout","Path","pathOrString","pieceNum","pieces_","split","copyTo","pieceNum_","Object","defineProperty","enumerable","configurable","getFront","getLength","popFront","getBack","pathString","toUrlEncodedString","encodeURIComponent","String","slice","begin","parent","pieces","child","childPathObj","childPieces","isEmpty","relativePath","outerPath","innerPath","outer","inner","comparePaths","left","right","leftKeys","rightKeys","cmp","equals","other","j","contains","ValidationPath","errorPrefix_","parts_","byteLength_","max","checkValid_","pop","last","MAX_PATH_LENGTH_BYTES","MAX_PATH_DEPTH","toErrorString","PROTOCOL_VERSION","VERSION_PARAM","TRANSPORT_SESSION_PARAM","REFERER_PARAM","FORGE_REF","FORGE_DOMAIN","LAST_SESSION_PARAM","APPLICATION_ID_PARAM","WEBSOCKET","LONG_POLLING","RepoInfo","host","secure","namespace","webSocketOnly","nodeAdmin","persistenceKey","includeNamespaceInQueryParams","domain","internalHost","needsQueryParam","isCustomHost","isCacheableHost","isDemoHost","updateHost","newHost","connectionURL","type","params","connURL","pairs","toURLString","decodePath","pathStringDecoded","piece","decodeURIComponent","replace","decodeQuery","queryString","e_1","_a","results","charAt","_b","_c","next","done","segment","kv","e_1_1","return","call","__EMPTY_NODE","MAX_NODE","parseRepoInfo","dataURL","parsedUrl","parseDatabaseURL","scheme","repoInfo","subdomain","port","colonInd","slashInd","questionMarkInd","queryParams","hostWithoutPort","dotInd","INVALID_KEY_REGEX_","INVALID_PATH_REGEX_","MAX_LEAF_SIZE_","isValidKey","isValidPathString","isValidRootPathString","isValidPriority","priority","validateFirebaseDataArg","fnName","argumentNumber","optional","undefined","validateFirebaseData","errorPrefix","path_","hasDotValue_1","hasActualChild_1","validateFirebaseMergePaths","mergePaths","curPath","prevPath","validateFirebaseMergeDataArg","errorPrefix$1","validatePriority","validateEventType","eventType","validateKey","validatePathString","validateRootPathString","validateWritablePath","validateUrl","validateBoolean","bool","OnDisconnect","repo_","cancel","onComplete","deferred","onDisconnectCancel","wrapCallback","promise","onDisconnectSet","setWithPriority","onDisconnectSetWithPriority","objectToMerge","newObjectToMerge","onDisconnectUpdate","TransactionResult","committed","snapshot","toJSON","nextPushId","PUSH_CHARS","lastPushTime","lastRandChars","now","duplicateTime","timeStampChars","random","NamedNode","node","Wrap","Index","getCompare","compare","indexedValueChanged","oldNode","newNode","oldWrapped","newWrapped","minPost","MIN","KeyIndex","_super","val","isDefinedOn","maxPost","makePost","indexValue","KEY_INDEX","setMaxNode","__childrenNodeConstructor","nodeFromJSON","MAX_NODE$1","priorityHashText","validatePriorityNode","priorityNode","isLeafNode","getPriority","LeafNode","value_","priorityNode_","EMPTY_NODE","lazyHash_","updatePriority","newPriorityNode","getImmediateChild","childName","getChild","hasChild","getPredecessorChildName","childNode","updateImmediateChild","newChildNode","updateChild","front","numChildren","forEachChild","index","action","exportFormat","getValue","hash","toHash","compareTo","compareToLeafNode_","otherLeaf","otherLeafType","thisLeafType","otherIndex","VALUE_TYPE_ORDER","thisIndex","withIndex","isIndexed","setNodeFromJSON","setMaxNode$1","_defaultIndexMap","PriorityIndex","aPriority","bPriority","indexCmp","PRIORITY_INDEX","SortedMapIterator","startKey","comparator","isReverse_","resultGenerator_","nodeStack_","getNext","result","hasNext","peek","LLRBNode","color","RED","SortedMap","copy","count","inorderTraversal","reverseTraversal","min_","minKey","maxKey","insert","n","fixUp_","removeMin_","isRed_","moveRedLeft_","smallest","rotateRight_","moveRedRight_","rotateLeft_","colorFlip_","nl","nr","checkMaxDepth_","blackDepth","check_","BLACK","LLRBEmptyNode","comparator_","root_","getPredecessorKey","rightParent","getIterator","resultGenerator","getIteratorFrom","getReverseIteratorFrom","getReverseIterator","LOG_2","Base12Num","logBase2","num","bitMask","current_","mask","bits_","nextBitIsOne","buildChildSet","childList","keyFn","mapSortFn","buildBalancedTree","low","high","namedNode","middle","buildFrom12Array","base12","root","buildPennant","chunkSize","childTree","attachPennant","pennant","isOne","fallbackObject","IndexMap","indexes_","indexSet_","indexKey","sortedMap","hasIndex","indexDefinition","addIndex","existingChildren","newIndex","sawIndexedValue","iter","indexName","newIndexSet","newIndexes","addToIndexes","_this","indexedChildren","existingSnap","newChildren","removeFromIndexes","NAME_ONLY_COMPARATOR","NAME_COMPARATOR","ChildrenNode","children_","indexMap_","Default","newIndexMap","newPriority","newImmediateChild","numKeys","allIntegerKeys","array","toHash_1","childHash","idx","resolveIndex_","predecessor","getFirstChildName","getFirstChild","getLastChildName","getLastChild","wrappedNode","startPost","iterator","endPost","MAX_NODE$2","otherChildrenNode","thisIter","otherIter","thisCurrent","otherCurrent","MaxNode","defineProperties","MAX","USE_HINZE","nodeFromJSON$1","json","jsonLeaf","node_1","childData","children_1","childrenHavePriority_1","hinzeJsonObj","childSet","sortedChildSet","__referenceConstructor","ValueIndex","valueNode","VALUE_INDEX","PathIndex","indexPath_","extractChild","snap","aChild","bChild","DataSnapshot","node_","ref_","index_","exportVal","exists","childPathString","childPath","childRef","forEach","childrenNode","hasChildren","getKey","getRef","DataEvent","eventRegistration","prevName","getPath","ref","getParent","getEventType","getEventRunner","CancelEvent","ValueEventRegistration","callback_","cancelCallback_","context_","respondsTo","createEvent","change","getQueryParams","getIndex","snapshotNode","eventData","ctx","cancelCB_1","cb_1","createCancelEvent","matches","hasAnyCallback","ChildEventRegistration","callbacks_","eventToCheck","cancelCB_2","cb_2","otherKeys","thisKeys","otherCount","thisCount","otherKey","thisKey","every","Query","repo","queryParams_","orderByCalled_","validateQueryEndpoints_","startNode","endNode","hasStart","getIndexStartValue","hasEnd","getIndexEndValue","tooManyArgsError","wrongArgTypeError","startName","getIndexStartName","endName","getIndexEndName","validateLimit_","hasLimit","hasAnchoredLimit","validateNoPreviousOrderByCall_","on","callback","cancelCallbackOrContext","context","ret","getCancelAndContextArgs_","onValueEvent","callbacks","onChildEvent","cancelCallback","container","addEventCallbackForQuery","off","valueCallback","removeEventCallbackForQuery","once","userCallback","failureCallbackOrContext","firstCall","catch","onceCallback","resolve","err","reject","limitToFirst","limit","limitToLast","orderByChild","parsedPath","newParams","orderBy","orderByKey","orderByPriority","orderByValue","startAt","endAt","equalTo","queryObject","getQueryObject","queryIdentifier","isEqual","sameRepo","samePath","sameQueryIdentifier","cancelOrContext","ExistingValueProvider","DeferredValueProvider","syncTree","syncTree_","calcCompleteEventCache","generateWithValues","values","Date","getTime","resolveDeferredLeafValue","existingVal","serverValues","resolveScalarDeferredValue","resolveComplexDeferredValue","JSON","stringify","op","existing","unused","delta","existingNode","leaf","resolveDeferredValueTree","resolveDeferredValue","resolveDeferredValueSnapshot","rawPri","leafNode","OperationType","SparseSnapshotTree","children","Map","find","size","childKey","has","remember","clear","forget","self_1","tree","safeToRemove","delete","forEachTree","prefixPath","func","emptyChildrenSingleton","__referenceConstructor$1","OperationSource","fromUser","fromServer","queryId","tagged","User","Server","forServerTaggedQuery","AckUserWrite","affectedTree","revert","ACK_USER_WRITE","source","operationForChild","subtree","Empty","EmptyChildren","ImmutableTree","fromObject","childSnap","findRootMostMatchingPathAndValue","predicate","childExistingPathAndValue","fullPath","findRootMostValueAndPath","toSet","newChild","setTree","newTree","fold","fold_","pathSoFar","accum","findOnPath","findOnPath_","pathToFollow","nextChild","foreachOnPath","foreachOnPath_","currentRelativePath","foreach","foreach_","foreachChild","ListenComplete","LISTEN_COMPLETE","Overwrite","OVERWRITE","Merge","MERGE","CacheNode","fullyInitialized_","filtered_","isFullyInitialized","isFiltered","isCompleteForPath","isCompleteForChild","getNode","ViewCache","eventCache_","serverCache_","updateEventSnap","eventSnap","complete","filtered","updateServerSnap","serverSnap","getEventCache","getCompleteEventSnap","getServerCache","getCompleteServerSnap","Change","oldSnap","valueChange","VALUE","childAddedChange","CHILD_ADDED","childRemovedChange","CHILD_REMOVED","childChangedChange","newSnapshot","oldSnapshot","CHILD_CHANGED","childMovedChange","CHILD_MOVED","IndexedFilter","affectedPath","optChangeAccumulator","oldChild","trackChildChange","updateFullNode","newSnap","filtersNodes","getIndexedFilter","ChildChangeAccumulator","changeMap","oldChange","oldType","getChanges","from","NoCompleteChildSource_","getCompleteChild","getChildAfterChild","NO_COMPLETE_CHILD_SOURCE","WriteTreeCompleteChildSource","writes_","viewCache_","optCompleteServerCache_","serverNode","calcCompleteChild","completeServerData","nodes","calcIndexedSlice","ProcessorResult","viewCache","changes","ViewProcessor","filter_","assertIndexed","applyOperation","oldViewCache","operation","writesCache","completeCache","newViewCache","filterServerNode","accumulator","overwrite","applyUserOverwrite_","applyServerOverwrite_","merge","applyUserMerge_","applyServerMerge_","ackUserWrite","revertUserWrite_","ackUserWrite_","listenComplete_","maybeAddValueEvent_","isLeafOrEmpty","oldCompleteSnap","generateEventCacheAfterServerEvent_","changePath","oldEventSnap","shadowingWrite","newEventCache","serverCache","completeChildren","completeEventChildren","calcCompleteEventChildren","completeNode","oldEventNode","updatedPriority","calcEventCacheAfterServerOverwrite","childChangePath","newEventChild","eventChildUpdate","changedSnap","newServerCache","oldServerSnap","serverFilter","newServerNode","newEventSnap","cacheHasChild_","changedChildren","curViewCache","writePath","applyMerge_","viewMergeTree","serverChild","childMergeTree","isUnknownDeepMerge","ackPath","changedChildren_1","changedChildren_2","mergePath","serverCachePath","oldServerNode","completeServerCache","oldEventCache","serverChildren","EventGenerator","query_","generateEventsForChanges","eventCache","eventRegistrations","events","moves","generateEventsForType_","registrations","filteredChanges","filter","compareChanges_","materializedChange","materializeSingleChange_","registration","aWrapped","bWrapped","View","initialViewCache","eventRegistrations_","indexFilter","getNodeFilter","processor_","initialServerCache","initialEventCache","eventGenerator_","getQuery","getCompleteServerCache","cache","loadsAllData","addEventRegistration","removeEventRegistration","cancelError","cancelEvents","path_1","maybeEvent","remaining","concat","generateEventsForChanges_","getInitialEvents","initialChanges","eventNode","SyncPoint","views","optCompleteServerCache","view","serverCacheComplete","eventCacheComplete","e_2","removed","hadCompleteView","hasCompleteView","entries","_d","viewQueryId","e_2_1","getQueryViews","e_3","e_3_1","e_4","e_4_1","viewForQuery","getCompleteView","viewExistsForQuery","e_5","e_5_1","CompoundWrite","writeTree_","addWrite","rootmost","rootMostPath","newWriteTree","addWrites","updates","newWrite","removeWrite","hasCompleteWrite","getCompleteNode","getCompleteChildren","childCompoundWrite","shadowingNode","applySubtreeWrite","writeTree","priorityWrite_1","WriteTree","visibleWrites_","allWrites_","lastWriteId_","childWrites","WriteTreeRef","addOverwrite","writeId","visible","addMerge","getWrite","record","findIndex","writeToRemove","splice","removedWriteWasVisible","removedWriteOverlapsWithOtherWrites","currentWrite","recordContainsPath_","resetTree_","getCompleteWriteData","treePath","writeIdsToExclude","includeHiddenWrites","write","mergeAtPath","layerTree_","layeredCache","subMerge","completeServerChildren","topLevelSet","merge_1","existingEventSnap","existingServerSnap","childMerge","toIterate","writeRecord","DefaultFilter_","writes","treeRoot","compoundWrite","deepNode","treePath_","existingServerCache","SyncTree","listenProvider_","syncPointTree_","pendingWriteTree_","tagToQueryMap","queryToTagMap","applyUserOverwrite","newData","applyOperationToSyncPoints_","applyUserMerge","changeTree","needToReevaluate","affectedTree_1","applyServerOverwrite","applyServerMerge","applyListenComplete","applyTaggedQueryOverwrite","tag","queryKey","queryKeyForTag_","r","parseQueryKey_","queryPath","applyTaggedOperation_","applyTaggedQueryMerge","applyTaggedListenComplete","foundAncestorDefaultView","pathToSyncPoint","sp","syncPoint","childSyncPoint","viewAlreadyExists","makeQueryKey_","getNextQueryTag_","setupListener_","maybeSyncPoint","removedAndEvents","removingDefault","covered","parentSyncPoint","newViews","collectDistinctViewsForSubTree_","newQuery","listener","createListenerForView_","startListening","queryForListening_","tagForQuery_","hashFn","defaultTag","stopListening","queryToRemove","tagToRemove","removeTags_","includeHiddenSets","maybeChildSyncPoint","childMap","completeView","views_1","_key","childViews","queries","removedQuery","removedQueryKey","removedQueryTag","isDefault","queriesToStop","queries_1","map","childQueries","queryToStop","status","splitIndex","nextQueryTag_","applyOperationHelper_","syncPointTree","applyOperationDescendantsHelper_","childOperation","childServerCache","childWritesCache","SnapshotHolder","rootNode_","updateSnapshot","newSnapshotNode","StatsCollection","counters_","incrementCounter","amount","StatsManager","getCollection","hashString","collections_","getOrCreateReporter","creatorFunction","reporters_","StatsListener","collection_","last_","newStats","stat","FIRST_STATS_MIN_TIME","FIRST_STATS_MAX_TIME","REPORT_STATS_INTERVAL","StatsReporter","collection","server_","statsToReport_","statsListener_","reportStats_","includeStat","stats","reportedStats","haveStatsToReport","reportStats","EventQueue","eventLists_","recursionDepth_","queueEvents","eventDataList","currList","eventPath","EventList","add","raiseEventsAtPath","raiseQueuedEventsMatchingPredicate_","raiseEventsForChangedPath","changedPath","sentAll","eventList","raise","events_","eventFn","EventEmitter","allowedEvents_","listeners_","trigger","listeners","validateEventType_","getInitialEvent","et","VisibilityMonitor","hidden","visibilityChange","visible_","getInstance","OnlineMonitor","online_","currentlyOnline","PacketReceiver","onMessage_","pendingResponses","currentResponseNum","closeAfterResponse","onClose","closeAfter","responseNum","handleResponse","requestNum","_loop_1","toProcess","this_1","_loop_2","state_1","FIREBASE_LONGPOLL_START_PARAM","FIREBASE_LONGPOLL_CLOSE_COMMAND","FIREBASE_LONGPOLL_COMMAND_CB_NAME","FIREBASE_LONGPOLL_DATA_CB_NAME","FIREBASE_LONGPOLL_ID_PARAM","FIREBASE_LONGPOLL_PW_PARAM","FIREBASE_LONGPOLL_SERIAL_PARAM","FIREBASE_LONGPOLL_CALLBACK_ID_PARAM","FIREBASE_LONGPOLL_SEGMENT_NUM_PARAM","FIREBASE_LONGPOLL_SEGMENTS_IN_PACKET","FIREBASE_LONGPOLL_DATA_PARAM","FIREBASE_LONGPOLL_DISCONN_FRAME_REQUEST_PARAM","MAX_URL_DATA_SIZE","SEG_HEADER_SIZE","MAX_PAYLOAD_SIZE","KEEPALIVE_REQUEST_INTERVAL","LP_CONNECT_TIMEOUT","BrowserPollConnection","connId","applicationId","transportSessionId","lastSessionId","bytesSent","bytesReceived","everConnected_","log_","stats_","urlFn","open","onMessage","onDisconnect","curSegmentNum","onDisconnect_","myPacketOrderer","isClosed_","connectTimeoutTimer_","onClosed_","scriptTagHolder","FirebaseIFrameScriptHolder","args","command","arg1","arg2","incrementIncomingBytes_","clearTimeout","password","sendNewPolls","pN","urlParams","uniqueCallbackIdentifier","connectURL","addTag","start","startLongPoll","addDisconnectPingFrame","forceAllow","forceAllow_","forceDisallow","forceDisallow_","isAvailable","createElement","markConnectionHealthy","shutdown_","close","myDisconnFrame","removeChild","send","dataStr","base64data","enqueueSegment","pw","src","style","display","appendChild","commandCB","onMessageCB","outstandingRequests","Set","pendingSegs","currentSerial","myIFrame","createIFrame_","script","currentDomain","iframeContents","doc","iframe","contentWindow","contentDocument","alive","innerHTML","myID","myPW","newRequest_","theURL","curDataString","nextSeg","d","theSeg","shift","seg","ts","addLongPollTag_","segnum","totalsegs","url","serial","doNewRequest","keepaliveTimeout","readyStateCB","loadCB","doNodeLongPoll","newScript_1","async","onload","onreadystatechange","rstate","parentNode","onerror","SDK_VERSION","setSDKVersion","version","WEBSOCKET_MAX_FRAME_SIZE","WEBSOCKET_KEEPALIVE_INTERVAL","WebSocketImpl","MozWebSocket","WebSocket","WebSocketConnection","keepaliveTimer","frames","totalFrames","connectionURL_","device","options","headers","process","platform","env","proxy","origin","mySock","onopen","onclose","onmessage","m","handleIncomingFrame","isOldAndroid","navigator","oldAndroidRegex","oldAndroidMatch","match","parseFloat","previouslyFailed","appendFrame_","fullMess","jsonMess","handleNewFrameCount_","frameCount","extractFrameCount_","isNaN","mess","resetKeepAlive","remainingData","sendString_","clearInterval","setInterval","responsesRequiredToBeHealthy","healthyTimeout","TransportManager","initTransports_","isWebSocketsAvailable","isSkipPollConnection","transports_","transports","ALL_TRANSPORTS","transport","initialTransport","upgradeTransport","UPGRADE_TIMEOUT","DELAY_BEFORE_SENDING_EXTRA_REQUESTS","BYTES_SENT_HEALTHY_OVERRIDE","BYTES_RECEIVED_HEALTHY_OVERRIDE","MESSAGE_TYPE","MESSAGE_DATA","CONTROL_SHUTDOWN","CONTROL_RESET","CONTROL_ERROR","CONTROL_PONG","SWITCH_ACK","END_TRANSMISSION","PING","SERVER_HELLO","Connection","repoInfo_","applicationId_","onReady_","onKill_","connectionCount","pendingDataMessages","state_","transportManager_","start_","conn","conn_","nextTransportId_","primaryResponsesRequired_","onMessageReceived","connReceiver_","onConnectionLost","disconnReceiver_","tx_","rx_","secondaryConn_","isHealthy_","healthyTimeoutMS","healthyTimeout_","everConnected","onConnectionLost_","onSecondaryConnectionLost_","onPrimaryMessageReceived_","onSecondaryMessageReceived_","sendRequest","dataMsg","msg","t","sendData_","tryCleanupConnection","onSecondaryControl_","controlData","cmd","upgradeIfSecondaryHealthy_","secondaryResponsesRequired_","parsedData","layer","proceedWithUpgrade_","onControl_","onDataMessage_","onPrimaryResponse_","payload","onHandshake_","onConnectionShutdown_","onReset_","sendPingOnPrimaryIfNecessary_","handshake","timestamp","h","sessionId","onConnectionEstablished_","tryStartUpgrade_","startUpgrade_","closeConnections_","ServerActions","put","refreshAuthToken","token","onDisconnectPut","onDisconnectMerge","RECONNECT_MIN_DELAY","RECONNECT_MAX_DELAY_DEFAULT","GET_CONNECT_TIMEOUT","RECONNECT_MAX_DELAY_FOR_ADMINS","RECONNECT_DELAY_MULTIPLIER","RECONNECT_DELAY_RESET_TIMEOUT","SERVER_KILL_INTERRUPT_REASON","INVALID_AUTH_TOKEN_THRESHOLD","PersistentConnection","onDataUpdate_","onConnectStatus_","onServerInfoUpdate_","authTokenProvider_","authOverride_","nextPersistentConnectionId_","interruptReasons_","listens","outstandingPuts_","outstandingGets_","outstandingPutCount_","outstandingGetCount_","onDisconnectRequestQueue_","connected_","reconnectDelay_","maxReconnectDelay_","securityDebugCallback_","establishConnectionTimer_","requestCBHash_","requestNumber_","realtime_","authToken_","forceTokenRefresh_","invalidAuthTokenCount_","firstConnection_","lastConnectionAttemptTime_","lastConnectionEstablishedTime_","scheduleConnect_","onVisible_","onOnline_","onResponse","curReqNum","request","p","q","outstandingGet","sendGet_","listen","currentHashFn","listenSpec","sendListen_","req","warnOnListenWarnings_","currentListenSpec","removeListen_","warnings","indexSpec","indexPath","tryAuth","reduceReconnectDelayIfAdminCredential_","credential","isFirebaseSecret","token_1","authMethod","requestData","cred","res","onAuthRevoked_","unlisten","sendUnlisten_","queryObj","sendOnDisconnect_","response","putInternal","sendPut_","queued","errorReason","reqNum","onDataPush_","onListenRevoked_","onSecurityDebugPacket_","handleTimestamp_","sendConnectStats_","restoreState_","establishConnection_","online","onRealtimeDisconnect_","cancelSentTransactions_","shouldReconnect_","timeSinceLastConnectSucceeded","timeSinceLastConnectAttempt","reconnectDelay","onDataMessage_1","onReady_1","onDisconnect_1","connId_1","nextConnectionId_","lastSessionId_1","canceled_1","connection_1","closeFn_1","sendRequestFn","forceRefresh","getToken","then","accessToken","interrupt","resume","serverTimeOffset","normalizedPathString","statusCode","explanation","notifyForInvalidToken","console","_e","_f","clientName","ReadonlyRestClient","listens_","getListenId_","listenId","thisListen","queryStringParameters","toRestQueryStringParameters","restRequest_","status_1","authTokenData","authToken","xhr","XMLHttpRequest","responseText","INTERRUPT_REASON","Repo","forceRestClient_","app","dataUpdateCount","eventQueue_","nextWriteId_","interceptServerDataCallback_","persistentConnection_","authOverride","appId","addTokenChangeListener","statsReporter_","transactionsInit_","infoData_","infoSyncTree_","infoEvents","updateInfo_","serverSyncTree_","serverTime","offsetNode","offset","generateServerValues","isMerge","taggedChildren","raw","taggedSnap","rerunTransactions_","interceptServerData_","connectStatus","runOnDisconnectEvents_","getNextWriteId_","Promise","cached","newVal","newNodeUnresolved","success","clearEvents","callOnCompleteCallback","abortTransactions_","childrenToMerge","empty","changedKey","changedValue","writeId_1","resolvedOnDisconnectTree","resolved","showDelta","longestName","reduce","previousValue","currentValue","paddedStat","statsIncrementCounter","metric","__database","Database","RangedFilter","indexedFilter_","startPost_","getStartPost_","endPost_","getEndPost_","getStartPost","getEndPost","self","LimitedFilter","rangedFilter_","limit_","getLimit","reverse_","isViewFromLeft","fullLimitUpdateChild_","inRange","indexCompare_1","foundStartPost","changeAccumulator","indexCmp_1","newChildNamedNode","windowBoundary","oldChildSnap","compareNext","remainsInWindow","nextChildInRange","QueryParams","limitSet_","startSet_","startNameSet_","endSet_","endNameSet_","viewFrom_","indexStartValue_","indexStartName_","indexEndValue_","indexEndName_","WIRE_PROTOCOL_CONSTANTS_","VIEW_FROM_LEFT","copy_","newLimit","VIEW_FROM_RIGHT","WIRE_PROTOCOL_CONSTANTS","INDEX_START_VALUE","INDEX_START_NAME","INDEX_END_VALUE","INDEX_END_NAME","LIMIT","viewFrom","VIEW_FROM","INDEX","REST_CONSTANTS","REST_QUERY_CONSTANTS_","qs","ORDER_BY","START_AT","END_AT","LIMIT_TO_FIRST","LIMIT_TO_LAST","DEFAULT","Reference","parentPath","getRoot","databaseProp","database","transaction","transactionUpdate","applyLocally","promiseComplete","startTransaction","setPriority","thennablePushRef","pushRef","TransactionStatus","TreeNode","childCount","Tree","name_","parent_","subTree","pathObj","setValue","updateParents_","forEachDescendant","includeSelf","childrenFirst","forEachAncestor","forEachImmediateDescendantWithValue","updateChild_","childEmpty","childExists","MAX_TRANSACTION_RETRIES_","transactionQueueTree_","watchRef","unwatcher","order","retryCount","abortReason","currentWriteId","currentInputSnapshot","currentOutputSnapshotRaw","currentOutputSnapshotResolved","currentState","getLatestState_","RUN","queueNode","nodeQueue","priorityForNode","currentNode","sendReadyTransactions_","excludeSets","pruneCompletedTransactionsBelowNode_","queue","buildTransactionQueue_","allRun","sendTransactionQueue_","setsToIgnore","txn","latestState","snapToSend","latestHash","SENT","dataToSend","pathToSend","COMPLETED","SENT_NEEDS_ABORT","NEEDS_ABORT","rootMostTransactionNode","getAncestorTransactionNode_","rerunTransactionQueue_","txnsToRerun","abortTransaction","newDataNode","hasExplicitPriority","oldWriteId","newNodeResolved","lastInput","transactionNode","transactionQueue","aggregateTransactionQueuesForNode_","to","abortTransactionsOnNode_","lastSent","_staticInstance","FirebaseAuthTokenProvider","app_","authProvider_","auth_","getImmediate","auth","addAuthTokenListener","removeTokenChangeListener","removeAuthTokenListener","errorMessage","EmulatorAdminTokenProvider","EMULATOR_AUTH_TOKEN","FIREBASE_DATABASE_EMULATOR_HOST_VAR","RepoManager","repos_","useRestClient_","appName","dbUrl","applyEmulatorSettings","databaseFromApp","authProvider","databaseURL","projectId","isEmulator","dbEmulatorHost","authTokenProvider","createRepo","deleteRepo","appRepos","forceRestClient","repoInternal_","instanceStarted_","INTERNAL","checkDeleted_","rootInternal_","useEmulator","refFromURL","apiName","parsedURL","goOffline","goOnline","ServerValue","TIMESTAMP","increment","forceLongPolling","forceWebSockets","setSecurityDebugCallback","interceptServerData","initStandalone","customAuthImpl","setComponent","instance","freeze","__proto__","DataConnection","simpleListen","echo","onEcho","RealTimeConnection","hijackHash","newHash","oldPut","ConnectionTarget","TEST_ACCESS","registerDatabase","registerComponent","getProvider","setServiceProps","setMultipleInstances","registerVersion","module","exports","_hoisted_1","class","_hoisted_2","_hoisted_3","render","_ctx","_cache","$props","$setup","$data","$options","_component_ps_label","_resolveComponent","_component_ps_button","_component_ps_modal","_openBlock","_createBlock","maxWidth","isClickOut","theme","title","_withCtx","_createElementVNode","_createVNode","default","_createTextVNode","_toDisplayString","_","footer","onClick","$event","actionClicked","textSize","cancelButton","okButton","defineComponent","components","PsModal","PsLabel","PsButton","setup","okClicked","cancelClicked","psmodal","i18n","toggle","openModal","titleString","messageString","okString","cancelString","okClickedAction","cancelClickedAction","__exports__","_component_ps_label_title","PsLabelTitle","titleStr","messageStr","trim","closeModal","_createElementBlock","_normalizeClass","maxlength","onInput","handleInput","target","props","Function","emit","textColor","_renderSlot","$slots","_component_Modal","modelValue","isOpen","fullscreen","isFullscreen","modalTransition","isMotionDisabled","isBackdropRemoved","Modal","Boolean","rows","route","useRoute","_hoisted_4","_hoisted_5","_hoisted_6","_hoisted_7","_hoisted_8","_hoisted_9","_hoisted_10","_hoisted_11","_hoisted_12","_hoisted_13","_hoisted_14","_hoisted_15","_hoisted_16","_hoisted_17","_hoisted_18","_hoisted_19","_hoisted_20","_hoisted_21","_hoisted_22","_hoisted_23","_hoisted_24","_hoisted_25","_hoisted_26","_hoisted_27","_hoisted_28","_hoisted_29","_hoisted_30","_hoisted_31","_hoisted_32","_hoisted_33","_hoisted_34","_hoisted_35","_hoisted_36","_hoisted_37","_hoisted_38","_hoisted_39","_hoisted_40","_hoisted_41","_hoisted_42","_hoisted_43","_hoisted_44","_hoisted_45","_hoisted_46","_hoisted_47","_hoisted_48","_hoisted_49","_hoisted_50","_hoisted_51","_hoisted_52","_hoisted_53","_hoisted_54","_hoisted_55","_hoisted_56","_hoisted_57","_hoisted_58","_hoisted_59","_hoisted_60","_hoisted_61","_hoisted_62","_hoisted_63","_hoisted_64","_hoisted_65","_hoisted_66","_hoisted_67","_hoisted_68","_hoisted_69","_hoisted_70","_hoisted_71","_hoisted_72","_hoisted_73","_hoisted_74","_hoisted_75","_hoisted_76","_hoisted_77","_hoisted_78","_hoisted_79","_hoisted_80","_hoisted_81","_hoisted_82","_hoisted_83","_hoisted_84","_hoisted_85","_hoisted_86","_hoisted_87","_hoisted_88","_hoisted_89","_hoisted_90","_hoisted_91","_hoisted_92","_hoisted_93","_hoisted_94","_hoisted_95","_hoisted_96","_hoisted_97","_hoisted_98","_hoisted_99","_hoisted_100","_hoisted_101","_hoisted_102","xmlns","fill","viewBox","stroke","_hoisted_103","_hoisted_104","_hoisted_105","_component_ps_route_link","_component_ps_icon","_component_ps_label_caption_2","_component_ps_input","_component_ps_content_container","_component_ps_loading_dialog","_component_ps_confirm_dialog","_component_ps_error_dialog","_component_ps_success_dialog","_component_chat_image_detail","_component_offer_modal","_component_review_modal","content","$t","chatFlag","PsConst","CHAT_FROM_SELLER","focus","itemName","alt","width","height","userProvider","imageUrl","user","userProfilePhoto","onError","defaultProfileImage","user_id","userId","userName","isVerifybluemark","w","_createCommentVNode","item_id","itemId","item_name","condition","currency","itemPrice","priceType","isOtherUserOnline","isSoldOut","chatHistoryProvider","chatHistory","item","showOffer","makeOfferClicked","itemImageName","defaultCarImage","onScroll","handleScroll","isScrolling","_Fragment","_renderList","chats","chat","CHAT_TYPE_DATE","CHAT_TYPE_TEXT","offerStatus","CHAT_STATUS_OFFER","sendByUserId","loginUserId","timeString","CHAT_STATUS_REJECT","CHAT_STATUS_ACCEPT","isSold","isUserBought","CHAT_TYPE_BOUGHT","clickGiveReview","CHAT_STATUS_IS_USER_BOUGHT","markAsSold","CHAT_TYPE_SOLD","CHAT_TYPE_OFFER","acceptOffer","rejectOffer","CHAT_TYPE_IMAGE","imageView","onImageClick","for","accept","onChange","onImageSelected","ordering","placeholder","onKeyup","_withKeys","sendNormalMessage","inputMessageController","price","onSubmit","submitOffer","_component_font_awesome_icon","_component_ps_image_modal","icon","gallery","buyerUserId","sellerUserId","MarkAsSoldParameterHolder","reactive","PsResource","__extends","GetChatHistoryProvider","responseData","holder","loading","PsApiService","ChatHistory","toMap","returnData","updateChatHistory","isOnline","SyncChatHistoryParameterHolder","isUserOnline","markAsSoldParameterHolder","PsProvider","createGetChatHistoryProviderState","Symbol","library","faTimes","PsImageModal","galleryParam","_component_ps_label_header_6","itemImage","negoPrice","submitClicked","PsLabelHeader6","PsErrorDialog","PsLoadingDialog","PsInput","emits","ps_loading_dialog","ps_error_dialog","itemNameParam","itemImageNameParam","currencyParam","priceParam","_component_rating_selected","_component_ps_textarea","line","grade","maxStars","hasCounter","description","ratingProvider","clicked","disabled","star","fasStar","farSrar","stars","methods","rate","getRating","RatingProvider","ApiStatus","createRatingProviderState","fromUserId","toUserId","rating","RatingHolder","PsTextarea","RatingSelected","psValueHolder","PsValueProvider","getLoginUserId","postRating","PsStatus","GetChatHistoryParameterHolder","MakeOfferParameterHolder","addedDateTimeStamp","ChatPrameterHolder","ResetUnReadMessageHolder","ChatMessage","addedDate","dateTimeString","dateString","init","objList","fromMap","object","objectList","mapList","PsObject","IsUserBoughtParameterHolder","PsContentContainer","PsIcon","PsLabelCaption2","OfferModal","PsConfirmDialog","PsSuccessDialog","ChatImageDetail","PsRouteLink","ReviewModal","dataReady","router","buyer_user_id","seller_user_id","_g","_h","item_image_name","_j","_k","item_price","_l","_m","_o","_p","_q","_r","_s","_t","_u","_v","chat_flag","_w","_x","is_sold_out","_y","_z","appInfoProvider","usePsAppInfoProviderState","appInfoParameterHolder","AppInfoParameterHolder","loadAppInfo","loadDeleteHistory","format","appInfo","frontendConfigSetting","priceFormat","formatPrice","otherUserId","chatHistoryListProvider","createChatHistoryListProviderState","galleryProvider","createGalleryProviderState","offerProvider","createOfferProviderState","chatHistoryHolder","chatHolder","ChatParameterHolder","userBoughtHolder","resetHolder","ps_confirm_dialog","ps_success_dialog","chat_image","offer_modal","review_modal","image","PsUtils","dataRef","firebaseApp","chatRef","userRef","createUserProviderState","getUser","resetUnreadMessageCount","el","loadChatHistory","isOffer","evt","scrollTop","getCurrentDateTimeStamp","startDate","sendMessage","_refKey","senderId","receiverId","chat_user_presence","loginUserName","isUserOnlineFlag","postChatHistory","scrollToBottom","scrollHeight","click","event","selectedFiles","files","selectedFile","setMessage","chatImageType","postChatImageUpload","imgPath","makeOffer","doAcceptOffer","chatAcceptHolder","ChatAcceptParameterHolder","chatMessageHolder","doRejectOffer","chatRejectHolder","onMounted","getElementById","lastDateTime","includes","dateTimeArr","date","chatMessage","tmpUserId","onUnmounted","removeEventListener","o","u","l","suffix","maskHasNegativeSign","maskHasPositiveSign","g","decimal","separator","integer","fraction","sign","toFixed","lastIndexOf","enforceMaskSign","GalleryProvider","galleryList","isNoMoreRecord","isEnableVideoSetting","imgParentId","imgType","videoThumbnail","DefaultPhoto","imgId","unshift","updateGalleryList","imageId","imageFile","Product","Offer","buyerUnreadCount","sellerUnreadCount","isAccept","offerAmount","addedDateStr","buyer","seller","nego_price","buyer_unread_count","seller_unread_count","is_accept","added_date","is_offer","offer_amount","added_date_str","offerList","OfferProvider","updateOfferList"],"sourceRoot":""}